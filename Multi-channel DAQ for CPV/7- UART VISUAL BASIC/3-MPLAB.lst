

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Thu Oct 20 15:21:57 2011

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 20 "C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 20 "C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
    45  2007  3F32               	dw 0x3F32 ;#
    46                           	FNCALL	_main,_send_config
    47                           	FNCALL	_main,_lcd_goto
    48                           	FNCALL	_main,_send_char
    49                           	FNCALL	_main,_read_adc
    50                           	FNCALL	_main,_read_temp
    51                           	FNCALL	_main,___lwdiv
    52                           	FNCALL	_main,_dis_num
    53                           	FNCALL	_main,___lwmod
    54                           	FNCALL	_main,___lwtoft
    55                           	FNCALL	_main,___ftmul
    56                           	FNCALL	_main,___fttol
    57                           	FNCALL	_main,___wmul
    58                           	FNCALL	_main,_sprintf
    59                           	FNCALL	_main,_mputs
    60                           	FNCALL	_dis_num,___lldiv
    61                           	FNCALL	_dis_num,___llmod
    62                           	FNCALL	_dis_num,_send_char
    63                           	FNCALL	_lcd_goto,_send_config
    64                           	FNCALL	_mputs,_putch
    65                           	FNCALL	_send_char,_delay
    66                           	FNCALL	_send_char,_e_pulse
    67                           	FNCALL	_send_config,_delay
    68                           	FNCALL	_send_config,_e_pulse
    69                           	FNCALL	___lwtoft,___ftpack
    70                           	FNCALL	___ftmul,___ftpack
    71                           	FNCALL	_putch,_delay
    72                           	FNCALL	_e_pulse,_delay
    73                           	FNCALL	_sprintf,_isdigit
    74                           	FNCALL	_sprintf,___wmul
    75                           	FNCALL	_sprintf,___lwdiv
    76                           	FNCALL	_sprintf,___lwmod
    77                           	FNCALL	_read_adc,___lldiv
    78                           	FNROOT	_main
    79                           	global	_dpowers
    80                           psect	strings,class=STRING,delta=2
    81                           global __pstrings
    82  0800                     __pstrings:
    83                           ;	global	stringdir,stringtab,__stringbase
    84  0800                     stringtab:
    85                           ;	String table - string pointers are 1 byte each
    86  0800                     stringcode:stringdir:
      + 0800                     stringdir:	
    87  0800  3008               movlw high(stringdir)
    88  0801  008A               movwf pclath
    89  0802  0804               movf fsr,w
    90  0803  0A84               incf fsr
    91  0804  0782               	addwf pc
    92  0805                     __stringbase:
    93  0805  3400               	retlw	0
    94                           psect	strings
    95                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\lib\doprnt.c"
    96                           	line	350
    97  0806                     _dpowers:
    98  0806  3401               	retlw	01h
    99  0807  3400               	retlw	0
   100                           
   101  0808  340A               	retlw	0Ah
   102  0809  3400               	retlw	0
   103                           
   104  080A  3464               	retlw	064h
   105  080B  3400               	retlw	0
   106                           
   107  080C  34E8               	retlw	0E8h
   108  080D  3403               	retlw	03h
   109                           
   110  080E  3410               	retlw	010h
   111  080F  3427               	retlw	027h
   112                           
   113                           	global	_dpowers
   114                           	global	_MPP
   115                           	global	_current
   116                           	global	_e
   117                           	global	_light
   118                           	global	_temp
   119                           	global	_temperature
   120                           	global	_voltage
   121                           	global	_c
   122                           	global	_dummy
   123                           	global	_i
   124                           	global	_result
   125                           	global	_serial_buffer
   126                           	global	_ADCON0
   127  001F                     _ADCON0	set	31
   128                           	global	_ADRESH
   129  001E                     _ADRESH	set	30
   130                           	global	_PORTA
   131  0005                     _PORTA	set	5
   132                           	global	_PORTB
   133  0006                     _PORTB	set	6
   134                           	global	_PORTC
   135  0007                     _PORTC	set	7
   136                           	global	_PORTD
   137  0008                     _PORTD	set	8
   138                           	global	_TXREG
   139  0019                     _TXREG	set	25
   140                           	global	_ADGO
   141  00FA                     _ADGO	set	250
   142                           	global	_CREN
   143  00C4                     _CREN	set	196
   144                           	global	_RB0
   145  0030                     _RB0	set	48
   146                           	global	_RB4
   147  0034                     _RB4	set	52
   148                           	global	_RB5
   149  0035                     _RB5	set	53
   150                           	global	_RX9
   151  00C6                     _RX9	set	198
   152                           	global	_SPEN
   153  00C7                     _SPEN	set	199
   154                           	global	_TXIF
   155  0064                     _TXIF	set	100
   156                           	global	_ADCON1
   157  009F                     _ADCON1	set	159
   158                           	global	_ADRESL
   159  009E                     _ADRESL	set	158
   160                           	global	_SPBRG
   161  0099                     _SPBRG	set	153
   162                           	global	_TRISA
   163  0085                     _TRISA	set	133
   164                           	global	_TRISB
   165  0086                     _TRISB	set	134
   166                           	global	_TRISC
   167  0087                     _TRISC	set	135
   168                           	global	_TRISD
   169  0088                     _TRISD	set	136
   170                           	global	_BRGH
   171  04C2                     _BRGH	set	1218
   172                           	global	_SYNC
   173  04C4                     _SYNC	set	1220
   174                           	global	_TRISC6
   175  043E                     _TRISC6	set	1086
   176                           	global	_TRISC7
   177  043F                     _TRISC7	set	1087
   178                           	global	_TX9
   179  04C6                     _TX9	set	1222
   180                           	global	_TXEN
   181  04C5                     _TXEN	set	1221
   182                           	
   183  0810                     STR_1:	
   184  0810  3454               	retlw	84	;'T'
   185  0811  3425               	retlw	37	;'%'
   186  0812  3430               	retlw	48	;'0'
   187  0813  3435               	retlw	53	;'5'
   188  0814  3464               	retlw	100	;'d'
   189  0815  3456               	retlw	86	;'V'
   190  0816  3425               	retlw	37	;'%'
   191  0817  3430               	retlw	48	;'0'
   192  0818  3435               	retlw	53	;'5'
   193  0819  3464               	retlw	100	;'d'
   194  081A  3443               	retlw	67	;'C'
   195  081B  3425               	retlw	37	;'%'
   196  081C  3430               	retlw	48	;'0'
   197  081D  3435               	retlw	53	;'5'
   198  081E  3464               	retlw	100	;'d'
   199  081F  344C               	retlw	76	;'L'
   200  0820  3425               	retlw	37	;'%'
   201  0821  3430               	retlw	48	;'0'
   202  0822  3435               	retlw	53	;'5'
   203  0823  3464               	retlw	100	;'d'
   204  0824  3425               	retlw	37	;'%'
   205  0825  3463               	retlw	99	;'c'
   206  0826  3425               	retlw	37	;'%'
   207  0827  3463               	retlw	99	;'c'
   208  0828  3400               	retlw	0
   209                           psect	strings
   210                           	file	"3-MPLAB.as"
   211                           	line	#
   212                           psect cinit,class=CODE,delta=2
   213                           global start_initialization
   214  0AD3                     start_initialization:
   215                           
   216                           psect	bssBANK0,class=BANK0,space=1
   217                           global __pbssBANK0
   218  0042                     __pbssBANK0:
   219  0042                     _MPP:
   220  0042                            ds      2
   221                           
   222  0044                     _current:
   223  0044                            ds      2
   224                           
   225  0046                     _e:
   226  0046                            ds      2
   227                           
   228  0048                     _light:
   229  0048                            ds      2
   230                           
   231  004A                     _temp:
   232  004A                            ds      2
   233                           
   234  004C                     _temperature:
   235  004C                            ds      2
   236                           
   237  004E                     _voltage:
   238  004E                            ds      2
   239                           
   240  0050                     _c:
   241  0050                            ds      1
   242                           
   243  0051                     _dummy:
   244  0051                            ds      1
   245                           
   246  0052                     _i:
   247  0052                            ds      1
   248                           
   249  0053                     _result:
   250  0053                            ds      2
   251                           
   252                           psect	bssBANK1,class=BANK1,space=1
   253                           global __pbssBANK1
   254  00A0                     __pbssBANK1:
   255  00A0                     _serial_buffer:
   256  00A0                            ds      40
   257                           
   258                           psect clrtext,class=CODE,delta=2
   259                           global clear_ram
   260                           ;	Called with FSR containing the base address, and
   261                           ;	W with the last address+1
   262  0A91                     clear_ram:
   263  0A91  0064               	clrwdt			;clear the watchdog before getting into this loop
   264  0A92                     clrloop:
   265  0A92  0180               	clrf	indf		;clear RAM location pointed to by FSR
   266  0A93  0A84               	incf	fsr,f		;increment pointer
   267  0A94  0604               	xorwf	fsr,w		;XOR with final address
   268  0A95  1903               	btfsc	status,2	;have we reached the end yet?
   269  0A96  3400               	retlw	0		;all done for this memory range, return
   270  0A97  0604               	xorwf	fsr,w		;XOR again to restore value
   271  0A98  2A92               	goto	clrloop		;do the next byte
   272                           
   273                           ; Clear objects allocated to BANK0
   274                           psect cinit,class=CODE,delta=2
   275  0AD3  1383               	bcf	status, 7	;select IRP bank0
   276  0AD4  3042               	movlw	low(__pbssBANK0)
   277  0AD5  0084               	movwf	fsr
   278  0AD6  3055               	movlw	low((__pbssBANK0)+013h)
   279  0AD7  120A  158A  2291   	fcall	clear_ram
              120A  158A         
   280                           ; Clear objects allocated to BANK1
   281                           psect cinit,class=CODE,delta=2
   282  0ADC  30A0               	movlw	low(__pbssBANK1)
   283  0ADD  0084               	movwf	fsr
   284  0ADE  30C8               	movlw	low((__pbssBANK1)+028h)
   285  0ADF  120A  158A  2291   	fcall	clear_ram
              120A  158A         
   286                           psect cinit,class=CODE,delta=2
   287                           global end_of_initialization
   288                           
   289                           ;End of C runtime variable initialization code
   290                           
   291  0AE4                     end_of_initialization:
   292  0AE4  0183               clrf status
   293  0AE5  120A  118A  2C24   ljmp _main	;jump to C main() function
   294                           psect	cstackCOMMON,class=COMMON,space=1
   295                           global __pcstackCOMMON
   296  0070                     __pcstackCOMMON:
   297                           	global	?_send_config
   298  0070                     ?_send_config:	; 0 bytes @ 0x0
   299                           	global	?_lcd_goto
   300  0070                     ?_lcd_goto:	; 0 bytes @ 0x0
   301                           	global	?_send_char
   302  0070                     ?_send_char:	; 0 bytes @ 0x0
   303                           	global	?_read_adc
   304  0070                     ?_read_adc:	; 0 bytes @ 0x0
   305                           	global	?_mputs
   306  0070                     ?_mputs:	; 0 bytes @ 0x0
   307                           	global	?_delay
   308  0070                     ?_delay:	; 0 bytes @ 0x0
   309                           	global	?_e_pulse
   310  0070                     ?_e_pulse:	; 0 bytes @ 0x0
   311                           	global	?_putch
   312  0070                     ?_putch:	; 0 bytes @ 0x0
   313                           	global	?_isdigit
   314  0070                     ?_isdigit:	; 1 bit 
   315                           	global	??_isdigit
   316  0070                     ??_isdigit:	; 0 bytes @ 0x0
   317                           	global	?_main
   318  0070                     ?_main:	; 0 bytes @ 0x0
   319                           	global	?_read_temp
   320  0070                     ?_read_temp:	; 2 bytes @ 0x0
   321                           	global	?___wmul
   322  0070                     ?___wmul:	; 2 bytes @ 0x0
   323                           	global	?___lwdiv
   324  0070                     ?___lwdiv:	; 2 bytes @ 0x0
   325                           	global	?___ftpack
   326  0070                     ?___ftpack:	; 3 bytes @ 0x0
   327                           	global	?___llmod
   328  0070                     ?___llmod:	; 4 bytes @ 0x0
   329                           	global	?___lldiv
   330  0070                     ?___lldiv:	; 4 bytes @ 0x0
   331                           	global	_isdigit$1367
   332  0070                     _isdigit$1367:	; 1 bytes @ 0x0
   333                           	global	delay@i
   334  0070                     delay@i:	; 2 bytes @ 0x0
   335                           	global	___wmul@multiplier
   336  0070                     ___wmul@multiplier:	; 2 bytes @ 0x0
   337                           	global	___lwdiv@divisor
   338  0070                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   339                           	global	___ftpack@arg
   340  0070                     ___ftpack@arg:	; 3 bytes @ 0x0
   341                           	global	___llmod@divisor
   342  0070                     ___llmod@divisor:	; 4 bytes @ 0x0
   343                           	global	___lldiv@divisor
   344  0070                     ___lldiv@divisor:	; 4 bytes @ 0x0
   345  0070                     	ds	1
   346                           	global	isdigit@c
   347  0071                     isdigit@c:	; 1 bytes @ 0x1
   348  0071                     	ds	1
   349                           	global	??_send_config
   350  0072                     ??_send_config:	; 0 bytes @ 0x2
   351                           	global	??_send_char
   352  0072                     ??_send_char:	; 0 bytes @ 0x2
   353                           	global	??_read_temp
   354  0072                     ??_read_temp:	; 0 bytes @ 0x2
   355                           	global	??_delay
   356  0072                     ??_delay:	; 0 bytes @ 0x2
   357                           	global	??_e_pulse
   358  0072                     ??_e_pulse:	; 0 bytes @ 0x2
   359                           	global	??_putch
   360  0072                     ??_putch:	; 0 bytes @ 0x2
   361                           	global	send_config@data
   362  0072                     send_config@data:	; 1 bytes @ 0x2
   363                           	global	send_char@data
   364  0072                     send_char@data:	; 1 bytes @ 0x2
   365                           	global	putch@c
   366  0072                     putch@c:	; 1 bytes @ 0x2
   367                           	global	read_temp@temp
   368  0072                     read_temp@temp:	; 2 bytes @ 0x2
   369                           	global	___wmul@multiplicand
   370  0072                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   371                           	global	___lwdiv@dividend
   372  0072                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   373  0072                     	ds	1
   374                           	global	??_lcd_goto
   375  0073                     ??_lcd_goto:	; 0 bytes @ 0x3
   376                           	global	??_mputs
   377  0073                     ??_mputs:	; 0 bytes @ 0x3
   378                           	global	___ftpack@exp
   379  0073                     ___ftpack@exp:	; 1 bytes @ 0x3
   380  0073                     	ds	1
   381                           	global	??___wmul
   382  0074                     ??___wmul:	; 0 bytes @ 0x4
   383                           	global	??___lwdiv
   384  0074                     ??___lwdiv:	; 0 bytes @ 0x4
   385                           	global	lcd_goto@data
   386  0074                     lcd_goto@data:	; 1 bytes @ 0x4
   387                           	global	mputs@str
   388  0074                     mputs@str:	; 1 bytes @ 0x4
   389                           	global	___ftpack@sign
   390  0074                     ___ftpack@sign:	; 1 bytes @ 0x4
   391                           	global	___wmul@product
   392  0074                     ___wmul@product:	; 2 bytes @ 0x4
   393                           	global	___llmod@dividend
   394  0074                     ___llmod@dividend:	; 4 bytes @ 0x4
   395                           	global	___lldiv@dividend
   396  0074                     ___lldiv@dividend:	; 4 bytes @ 0x4
   397  0074                     	ds	1
   398                           	global	??___ftpack
   399  0075                     ??___ftpack:	; 0 bytes @ 0x5
   400                           	global	___lwdiv@quotient
   401  0075                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   402  0075                     	ds	2
   403                           	global	___lwdiv@counter
   404  0077                     ___lwdiv@counter:	; 1 bytes @ 0x7
   405  0077                     	ds	1
   406                           	global	??___llmod
   407  0078                     ??___llmod:	; 0 bytes @ 0x8
   408                           	global	??___lldiv
   409  0078                     ??___lldiv:	; 0 bytes @ 0x8
   410                           	global	?___lwmod
   411  0078                     ?___lwmod:	; 2 bytes @ 0x8
   412                           	global	?___fttol
   413  0078                     ?___fttol:	; 4 bytes @ 0x8
   414                           	global	___lwmod@divisor
   415  0078                     ___lwmod@divisor:	; 2 bytes @ 0x8
   416                           	global	___fttol@f1
   417  0078                     ___fttol@f1:	; 3 bytes @ 0x8
   418  0078                     	ds	1
   419                           	global	___llmod@counter
   420  0079                     ___llmod@counter:	; 1 bytes @ 0x9
   421                           	global	___lldiv@quotient
   422  0079                     ___lldiv@quotient:	; 4 bytes @ 0x9
   423  0079                     	ds	1
   424                           	global	___lwmod@dividend
   425  007A                     ___lwmod@dividend:	; 2 bytes @ 0xA
   426  007A                     	ds	2
   427                           	global	??___lwmod
   428  007C                     ??___lwmod:	; 0 bytes @ 0xC
   429                           	global	??___lwtoft
   430  007C                     ??___lwtoft:	; 0 bytes @ 0xC
   431  007C                     	ds	1
   432                           	global	___lwmod@counter
   433  007D                     ___lwmod@counter:	; 1 bytes @ 0xD
   434                           	global	___lldiv@counter
   435  007D                     ___lldiv@counter:	; 1 bytes @ 0xD
   436  007D                     	ds	1
   437                           psect	cstackBANK0,class=BANK0,space=1
   438                           global __pcstackBANK0
   439  0020                     __pcstackBANK0:
   440                           	global	??_read_adc
   441  0020                     ??_read_adc:	; 0 bytes @ 0x0
   442                           	global	?_dis_num
   443  0020                     ?_dis_num:	; 0 bytes @ 0x0
   444                           	global	??___fttol
   445  0020                     ??___fttol:	; 0 bytes @ 0x0
   446                           	global	?_sprintf
   447  0020                     ?_sprintf:	; 2 bytes @ 0x0
   448                           	global	sprintf@f
   449  0020                     sprintf@f:	; 1 bytes @ 0x0
   450                           	global	dis_num@data
   451  0020                     dis_num@data:	; 4 bytes @ 0x0
   452  0020                     	ds	4
   453                           	global	??_dis_num
   454  0024                     ??_dis_num:	; 0 bytes @ 0x4
   455                           	global	___fttol@sign1
   456  0024                     ___fttol@sign1:	; 1 bytes @ 0x4
   457                           	global	read_adc@result_temp
   458  0024                     read_adc@result_temp:	; 4 bytes @ 0x4
   459  0024                     	ds	1
   460                           	global	dis_num@hundred_thousand
   461  0025                     dis_num@hundred_thousand:	; 1 bytes @ 0x5
   462                           	global	___fttol@lval
   463  0025                     ___fttol@lval:	; 4 bytes @ 0x5
   464  0025                     	ds	1
   465                           	global	dis_num@ten_thousand
   466  0026                     dis_num@ten_thousand:	; 1 bytes @ 0x6
   467  0026                     	ds	1
   468                           	global	dis_num@thousand
   469  0027                     dis_num@thousand:	; 1 bytes @ 0x7
   470  0027                     	ds	1
   471                           	global	dis_num@hundred
   472  0028                     dis_num@hundred:	; 1 bytes @ 0x8
   473                           	global	read_adc@i
   474  0028                     read_adc@i:	; 2 bytes @ 0x8
   475  0028                     	ds	1
   476                           	global	dis_num@tenth
   477  0029                     dis_num@tenth:	; 1 bytes @ 0x9
   478                           	global	___fttol@exp1
   479  0029                     ___fttol@exp1:	; 1 bytes @ 0x9
   480  0029                     	ds	1
   481                           	global	?___lwtoft
   482  002A                     ?___lwtoft:	; 3 bytes @ 0xA
   483                           	global	___lwtoft@c
   484  002A                     ___lwtoft@c:	; 2 bytes @ 0xA
   485  002A                     	ds	3
   486                           	global	??_sprintf
   487  002D                     ??_sprintf:	; 0 bytes @ 0xD
   488                           	global	?___ftmul
   489  002D                     ?___ftmul:	; 3 bytes @ 0xD
   490                           	global	___ftmul@f1
   491  002D                     ___ftmul@f1:	; 3 bytes @ 0xD
   492  002D                     	ds	3
   493                           	global	___ftmul@f2
   494  0030                     ___ftmul@f2:	; 3 bytes @ 0x10
   495  0030                     	ds	1
   496                           	global	sprintf@prec
   497  0031                     sprintf@prec:	; 1 bytes @ 0x11
   498  0031                     	ds	1
   499                           	global	sprintf@ap
   500  0032                     sprintf@ap:	; 1 bytes @ 0x12
   501  0032                     	ds	1
   502                           	global	??___ftmul
   503  0033                     ??___ftmul:	; 0 bytes @ 0x13
   504                           	global	sprintf@flag
   505  0033                     sprintf@flag:	; 1 bytes @ 0x13
   506  0033                     	ds	1
   507                           	global	sprintf@width
   508  0034                     sprintf@width:	; 2 bytes @ 0x14
   509  0034                     	ds	2
   510                           	global	sprintf@sp
   511  0036                     sprintf@sp:	; 1 bytes @ 0x16
   512  0036                     	ds	1
   513                           	global	___ftmul@exp
   514  0037                     ___ftmul@exp:	; 1 bytes @ 0x17
   515                           	global	sprintf@_val
   516  0037                     sprintf@_val:	; 3 bytes @ 0x17
   517  0037                     	ds	1
   518                           	global	___ftmul@f3_as_product
   519  0038                     ___ftmul@f3_as_product:	; 3 bytes @ 0x18
   520  0038                     	ds	2
   521                           	global	sprintf@c
   522  003A                     sprintf@c:	; 1 bytes @ 0x1A
   523  003A                     	ds	1
   524                           	global	___ftmul@cntr
   525  003B                     ___ftmul@cntr:	; 1 bytes @ 0x1B
   526  003B                     	ds	1
   527                           	global	___ftmul@sign
   528  003C                     ___ftmul@sign:	; 1 bytes @ 0x1C
   529  003C                     	ds	1
   530                           	global	??_main
   531  003D                     ??_main:	; 0 bytes @ 0x1D
   532  003D                     	ds	1
   533                           	global	_main$1695
   534  003E                     _main$1695:	; 2 bytes @ 0x1E
   535  003E                     	ds	2
   536                           	global	_main$1696
   537  0040                     _main$1696:	; 2 bytes @ 0x20
   538  0040                     	ds	2
   539 ;;Data sizes: Strings 25, constant 10, data 0, bss 59, persistent 0 stack 0
   540 ;;Auto spaces:   Size  Autos    Used
   541 ;; COMMON          14     14      14
   542 ;; BANK0           80     34      53
   543 ;; BANK1           80      0      40
   544 ;; BANK3           96      0       0
   545 ;; BANK2           96      0       0
   546                           
   547 ;;
   548 ;; Pointer list with targets:
   549                           
   550 ;; ?___ftpack	float  size(1) Largest target is 0
   551 ;;
   552 ;; ?_read_temp	unsigned short  size(1) Largest target is 2
   553 ;;		 -> result(BANK0[2]), 
   554 ;;
   555 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   556 ;;
   557 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   558 ;;
   559 ;; ?___fttol	long  size(1) Largest target is 0
   560 ;;
   561 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   562 ;;
   563 ;; ?___ftmul	float  size(1) Largest target is 0
   564 ;;
   565 ;; ?___lwtoft	float  size(1) Largest target is 0
   566 ;;
   567 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   568 ;;
   569 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   570 ;;
   571 ;; sprintf@_val._cp	PTR const unsigned char  size(1) Largest target is 1
   572 ;;		 -> sprintf@c(BANK0[1]), 
   573 ;;
   574 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 25
   575 ;;		 -> STR_1(CODE[25]), 
   576 ;;
   577 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 40
   578 ;;		 -> serial_buffer(BANK1[40]), 
   579 ;;
   580 ;; ?_sprintf	int  size(1) Largest target is 0
   581 ;;
   582 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   583 ;;		 -> ?_sprintf(BANK0[2]), 
   584 ;;
   585 ;; S1352$_cp	PTR const unsigned char  size(1) Largest target is 1
   586 ;;		 -> sprintf@c(BANK0[1]), 
   587 ;;
   588 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 1
   589 ;;		 -> sprintf@c(BANK0[1]), 
   590 ;;
   591 ;; mputs@str	PTR unsigned char  size(1) Largest target is 40
   592 ;;		 -> serial_buffer(BANK1[40]), 
   593 ;;
   594                           
   595                           
   596 ;;
   597 ;; Critical Paths under _main in COMMON
   598 ;;
   599 ;;   _main->___lwmod
   600 ;;   _dis_num->___lldiv
   601 ;;   _dis_num->___lwmod
   602 ;;   _lcd_goto->_send_config
   603 ;;   _mputs->_putch
   604 ;;   _send_char->_delay
   605 ;;   _send_config->_delay
   606 ;;   ___lwtoft->___fttol
   607 ;;   ___ftmul->___lwtoft
   608 ;;   _putch->_delay
   609 ;;   _e_pulse->_delay
   610 ;;   _sprintf->___lwmod
   611 ;;   _read_adc->___lldiv
   612 ;;   ___fttol->___ftpack
   613 ;;   ___lwmod->___lwdiv
   614 ;;
   615 ;; Critical Paths under _main in BANK0
   616 ;;
   617 ;;   _main->___ftmul
   618 ;;   ___lwtoft->___fttol
   619 ;;   ___ftmul->___lwtoft
   620 ;;
   621 ;; Critical Paths under _main in BANK1
   622 ;;
   623 ;;   None.
   624 ;;
   625 ;; Critical Paths under _main in BANK3
   626 ;;
   627 ;;   None.
   628 ;;
   629 ;; Critical Paths under _main in BANK2
   630 ;;
   631 ;;   None.
   632                           
   633 ;;
   634 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   635 ;;
   636                           
   637 ;;
   638 ;;Call Graph Tables:
   639 ;;
   640 ;; ---------------------------------------------------------------------------------
   641 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   642 ;; ---------------------------------------------------------------------------------
   643 ;; (0) _main                                                 5     5      0    5237
   644 ;;                                             29 BANK0      5     5      0
   645 ;;                        _send_config
   646 ;;                           _lcd_goto
   647 ;;                          _send_char
   648 ;;                           _read_adc
   649 ;;                          _read_temp
   650 ;;                            ___lwdiv
   651 ;;                            _dis_num
   652 ;;                            ___lwmod
   653 ;;                           ___lwtoft
   654 ;;                            ___ftmul
   655 ;;                            ___fttol
   656 ;;                             ___wmul
   657 ;;                            _sprintf
   658 ;;                              _mputs
   659 ;; ---------------------------------------------------------------------------------
   660 ;; (1) _dis_num                                             10     6      4    1279
   661 ;;                                              0 BANK0     10     6      4
   662 ;;                            ___lldiv
   663 ;;                            ___llmod
   664 ;;                          _send_char
   665 ;;                            ___lwdiv (ARG)
   666 ;;                            ___lwmod (ARG)
   667 ;; ---------------------------------------------------------------------------------
   668 ;; (1) _lcd_goto                                             2     2      0     201
   669 ;;                                              3 COMMON     2     2      0
   670 ;;                        _send_config
   671 ;; ---------------------------------------------------------------------------------
   672 ;; (1) _mputs                                                2     2      0     112
   673 ;;                                              3 COMMON     2     2      0
   674 ;;                              _putch
   675 ;; ---------------------------------------------------------------------------------
   676 ;; (2) _send_char                                            1     1      0     156
   677 ;;                                              2 COMMON     1     1      0
   678 ;;                              _delay
   679 ;;                            _e_pulse
   680 ;; ---------------------------------------------------------------------------------
   681 ;; (2) _send_config                                          1     1      0     112
   682 ;;                                              2 COMMON     1     1      0
   683 ;;                              _delay
   684 ;;                            _e_pulse
   685 ;; ---------------------------------------------------------------------------------
   686 ;; (1) ___lwtoft                                             4     1      3     231
   687 ;;                                             12 COMMON     1     1      0
   688 ;;                                             10 BANK0      3     0      3
   689 ;;                           ___ftpack
   690 ;;                            ___fttol (ARG)
   691 ;; ---------------------------------------------------------------------------------
   692 ;; (1) ___ftmul                                             16    10      6     535
   693 ;;                                             13 BANK0     16    10      6
   694 ;;                           ___ftpack
   695 ;;                           ___lwtoft (ARG)
   696 ;;                            ___fttol (ARG)
   697 ;; ---------------------------------------------------------------------------------
   698 ;; (2) _putch                                                1     1      0      67
   699 ;;                                              2 COMMON     1     1      0
   700 ;;                              _delay
   701 ;; ---------------------------------------------------------------------------------
   702 ;; (3) _e_pulse                                              0     0      0      45
   703 ;;                              _delay
   704 ;; ---------------------------------------------------------------------------------
   705 ;; (1) _sprintf                                             27    14     13    1645
   706 ;;                                              0 BANK0     27    14     13
   707 ;;                            _isdigit
   708 ;;                             ___wmul
   709 ;;                            ___lwdiv
   710 ;;                            ___lwmod
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (1) _read_adc                                            10    10      0     232
   713 ;;                                              0 BANK0     10    10      0
   714 ;;                            ___lldiv
   715 ;; ---------------------------------------------------------------------------------
   716 ;; (2) ___lldiv                                             14     6      8     162
   717 ;;                                              0 COMMON    14     6      8
   718 ;; ---------------------------------------------------------------------------------
   719 ;; (2) ___llmod                                             10     2      8     159
   720 ;;                                              0 COMMON    10     2      8
   721 ;; ---------------------------------------------------------------------------------
   722 ;; (1) ___fttol                                             14    10      4     252
   723 ;;                                              8 COMMON     4     0      4
   724 ;;                                              0 BANK0     10    10      0
   725 ;;                           ___ftpack (ARG)
   726 ;; ---------------------------------------------------------------------------------
   727 ;; (2) ___ftpack                                             8     3      5     209
   728 ;;                                              0 COMMON     8     3      5
   729 ;; ---------------------------------------------------------------------------------
   730 ;; (2) ___lwmod                                              6     2      4     159
   731 ;;                                              8 COMMON     6     2      4
   732 ;;                            ___lwdiv (ARG)
   733 ;; ---------------------------------------------------------------------------------
   734 ;; (2) ___lwdiv                                              8     4      4     162
   735 ;;                                              0 COMMON     8     4      4
   736 ;; ---------------------------------------------------------------------------------
   737 ;; (2) ___wmul                                               6     2      4      92
   738 ;;                                              0 COMMON     6     2      4
   739 ;; ---------------------------------------------------------------------------------
   740 ;; (2) _isdigit                                              2     2      0      68
   741 ;;                                              0 COMMON     2     2      0
   742 ;; ---------------------------------------------------------------------------------
   743 ;; (3) _delay                                                2     0      2      45
   744 ;;                                              0 COMMON     2     0      2
   745 ;; ---------------------------------------------------------------------------------
   746 ;; (1) _read_temp                                            4     2      2      23
   747 ;;                                              0 COMMON     4     2      2
   748 ;; ---------------------------------------------------------------------------------
   749 ;; Estimated maximum stack depth 3
   750 ;; ---------------------------------------------------------------------------------
   751                           
   752 ;; Call Graph Graphs:
   753                           
   754 ;; _main (ROOT)
   755 ;;   _send_config
   756 ;;     _delay
   757 ;;     _e_pulse
   758 ;;       _delay
   759 ;;   _lcd_goto
   760 ;;     _send_config
   761 ;;       _delay
   762 ;;       _e_pulse
   763 ;;         _delay
   764 ;;   _send_char
   765 ;;     _delay
   766 ;;     _e_pulse
   767 ;;       _delay
   768 ;;   _read_adc
   769 ;;     ___lldiv
   770 ;;   _read_temp
   771 ;;   ___lwdiv
   772 ;;   _dis_num
   773 ;;     ___lldiv
   774 ;;     ___llmod
   775 ;;     _send_char
   776 ;;       _delay
   777 ;;       _e_pulse
   778 ;;         _delay
   779 ;;     ___lwdiv (ARG)
   780 ;;     ___lwmod (ARG)
   781 ;;       ___lwdiv (ARG)
   782 ;;   ___lwmod
   783 ;;     ___lwdiv (ARG)
   784 ;;   ___lwtoft
   785 ;;     ___ftpack
   786 ;;     ___fttol (ARG)
   787 ;;       ___ftpack (ARG)
   788 ;;   ___ftmul
   789 ;;     ___ftpack
   790 ;;     ___lwtoft (ARG)
   791 ;;       ___ftpack
   792 ;;       ___fttol (ARG)
   793 ;;         ___ftpack (ARG)
   794 ;;     ___fttol (ARG)
   795 ;;       ___ftpack (ARG)
   796 ;;   ___fttol
   797 ;;     ___ftpack (ARG)
   798 ;;   ___wmul
   799 ;;   _sprintf
   800 ;;     _isdigit
   801 ;;     ___wmul
   802 ;;     ___lwdiv
   803 ;;     ___lwmod
   804 ;;       ___lwdiv (ARG)
   805 ;;   _mputs
   806 ;;     _putch
   807 ;;       _delay
   808 ;;
   809                           
   810 ;; Address spaces:
   811                           
   812 ;;Name               Size   Autos  Total    Cost      Usage
   813 ;;BITCOMMON            E      0       0       0        0.0%
   814 ;;EEDATA             100      0       0       0        0.0%
   815 ;;NULL                 0      0       0       0        0.0%
   816 ;;CODE                 0      0       0       0        0.0%
   817 ;;COMMON               E      E       E       1      100.0%
   818 ;;BITSFR0              0      0       0       1        0.0%
   819 ;;SFR0                 0      0       0       1        0.0%
   820 ;;BITSFR1              0      0       0       2        0.0%
   821 ;;SFR1                 0      0       0       2        0.0%
   822 ;;STACK                0      0       4       2        0.0%
   823 ;;ABS                  0      0      6B       3        0.0%
   824 ;;BITBANK0            50      0       0       4        0.0%
   825 ;;BITSFR3              0      0       0       4        0.0%
   826 ;;SFR3                 0      0       0       4        0.0%
   827 ;;BANK0               50     22      35       5       66.3%
   828 ;;BITSFR2              0      0       0       5        0.0%
   829 ;;SFR2                 0      0       0       5        0.0%
   830 ;;BITBANK1            50      0       0       6        0.0%
   831 ;;BANK1               50      0      28       7       50.0%
   832 ;;BITBANK3            60      0       0       8        0.0%
   833 ;;BANK3               60      0       0       9        0.0%
   834 ;;BITBANK2            60      0       0      10        0.0%
   835 ;;BANK2               60      0       0      11        0.0%
   836 ;;DATA                 0      0      6F      12        0.0%
   837                           
   838                           	global	_main
   839                           psect	maintext,global,class=CODE,delta=2
   840                           global __pmaintext
   841  0424                     __pmaintext:
   842                           
   843 ;; *************** function _main *****************
   844 ;; Defined at:
   845 ;;		line 67 in file "C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;		None               void
   852 ;; Registers used:
   853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 17F/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   859 ;;      Params:         0       0       0       0       0
   860 ;;      Locals:         0       4       0       0       0
   861 ;;      Temps:          0       1       0       0       0
   862 ;;      Totals:         0       5       0       0       0
   863 ;;Total ram usage:        5 bytes
   864 ;; Hardware stack levels required when called:    4
   865 ;; This function calls:
   866 ;;		_send_config
   867 ;;		_lcd_goto
   868 ;;		_send_char
   869 ;;		_read_adc
   870 ;;		_read_temp
   871 ;;		___lwdiv
   872 ;;		_dis_num
   873 ;;		___lwmod
   874 ;;		___lwtoft
   875 ;;		___ftmul
   876 ;;		___fttol
   877 ;;		___wmul
   878 ;;		_sprintf
   879 ;;		_mputs
   880 ;; This function is called by:
   881 ;;		Startup code after reset
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           psect	maintext
   885                           	file	"C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
   886                           	line	67
   887                           	global	__size_of_main
   888  03DC                     	__size_of_main	equ	__end_of_main-_main
   889                           	
   890  0424                     _main:	
   891                           	opt	stack 4
   892                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   893                           	line	68
   894                           	
   895  0424                     l3742:	
   896                           ;MPLAB3.c: 68: ADRESH=0;
   897  0424  1283               	bcf	status, 5	;RP0=0, select bank0
   898  0425  1303               	bcf	status, 6	;RP1=0, select bank0
   899  0426  019E               	clrf	(30)	;volatile
   900                           	line	69
   901                           ;MPLAB3.c: 69: ADRESL=0;
   902  0427  1683               	bsf	status, 5	;RP0=1, select bank1
   903  0428  1303               	bcf	status, 6	;RP1=0, select bank1
   904  0429  019E               	clrf	(158)^080h	;volatile
   905                           	line	72
   906                           	
   907  042A                     l3744:	
   908                           ;MPLAB3.c: 72: ADCON1=0b11000000;
   909  042A  30C0               	movlw	(0C0h)
   910  042B  009F               	movwf	(159)^080h	;volatile
   911                           	line	75
   912                           	
   913  042C                     l3746:	
   914                           ;MPLAB3.c: 75: TRISA=0b11111111;
   915  042C  30FF               	movlw	(0FFh)
   916  042D  0085               	movwf	(133)^080h	;volatile
   917                           	line	76
   918                           ;MPLAB3.c: 76: TRISB=0b00000000;
   919  042E  0186               	clrf	(134)^080h	;volatile
   920                           	line	77
   921                           ;MPLAB3.c: 77: TRISC=0b00000000;
   922  042F  0187               	clrf	(135)^080h	;volatile
   923                           	line	78
   924                           ;MPLAB3.c: 78: TRISD=0b00000000;
   925  0430  0188               	clrf	(136)^080h	;volatile
   926                           	line	79
   927                           ;MPLAB3.c: 79: PORTA=0;
   928  0431  1283               	bcf	status, 5	;RP0=0, select bank0
   929  0432  1303               	bcf	status, 6	;RP1=0, select bank0
   930  0433  0185               	clrf	(5)	;volatile
   931                           	line	80
   932                           ;MPLAB3.c: 80: PORTB=0;
   933  0434  0186               	clrf	(6)	;volatile
   934                           	line	81
   935                           ;MPLAB3.c: 81: PORTC=0;
   936  0435  0187               	clrf	(7)	;volatile
   937                           	line	84
   938                           	
   939  0436                     l3748:	
   940                           ;MPLAB3.c: 84: send_config(0b00000001);
   941  0436  3001               	movlw	(01h)
   942  0437  120A  158A  22BE   	fcall	_send_config
              120A  118A         
   943                           	line	85
   944                           	
   945  043C                     l3750:	
   946                           ;MPLAB3.c: 85: send_config(0b00000010);
   947  043C  3002               	movlw	(02h)
   948  043D  120A  158A  22BE   	fcall	_send_config
              120A  118A         
   949                           	line	86
   950                           	
   951  0442                     l3752:	
   952                           ;MPLAB3.c: 86: send_config(0b00000110);
   953  0442  3006               	movlw	(06h)
   954  0443  120A  158A  22BE   	fcall	_send_config
              120A  118A         
   955                           	line	87
   956                           	
   957  0448                     l3754:	
   958                           ;MPLAB3.c: 87: send_config(0b00001100);
   959  0448  300C               	movlw	(0Ch)
   960  0449  120A  158A  22BE   	fcall	_send_config
              120A  118A         
   961                           	line	88
   962                           	
   963  044E                     l3756:	
   964                           ;MPLAB3.c: 88: send_config(0b00111000);
   965  044E  3038               	movlw	(038h)
   966  044F  120A  158A  22BE   	fcall	_send_config
              120A  118A         
   967                           	line	94
   968                           	
   969  0454                     l3758:	
   970                           ;MPLAB3.c: 94: TRISC6 = 1;
   971  0454  1683               	bsf	status, 5	;RP0=1, select bank1
   972  0455  1303               	bcf	status, 6	;RP1=0, select bank1
   973  0456  1707               	bsf	(1086/8)^080h,(1086)&7
   974                           	line	95
   975                           	
   976  0457                     l3760:	
   977                           ;MPLAB3.c: 95: TRISC7 = 1;
   978  0457  1787               	bsf	(1087/8)^080h,(1087)&7
   979                           	line	98
   980                           	
   981  0458                     l3762:	
   982                           ;MPLAB3.c: 98: SPBRG = 129;
   983  0458  3081               	movlw	(081h)
   984  0459  0099               	movwf	(153)^080h	;volatile
   985                           	line	100
   986                           	
   987  045A                     l3764:	
   988                           ;MPLAB3.c: 100: BRGH = 1;
   989  045A  1518               	bsf	(1218/8)^080h,(1218)&7
   990                           	line	103
   991                           	
   992  045B                     l3766:	
   993                           ;MPLAB3.c: 103: SYNC = 0;
   994  045B  1218               	bcf	(1220/8)^080h,(1220)&7
   995                           	line	106
   996                           	
   997  045C                     l3768:	
   998                           ;MPLAB3.c: 106: TX9 = 0;
   999  045C  1318               	bcf	(1222/8)^080h,(1222)&7
  1000                           	line	107
  1001                           	
  1002  045D                     l3770:	
  1003                           ;MPLAB3.c: 107: TXEN = 1;
  1004  045D  1698               	bsf	(1221/8)^080h,(1221)&7
  1005                           	line	110
  1006                           	
  1007  045E                     l3772:	
  1008                           ;MPLAB3.c: 110: RX9 = 0;
  1009  045E  1283               	bcf	status, 5	;RP0=0, select bank0
  1010  045F  1303               	bcf	status, 6	;RP1=0, select bank0
  1011  0460  1318               	bcf	(198/8),(198)&7
  1012                           	line	111
  1013                           	
  1014  0461                     l3774:	
  1015                           ;MPLAB3.c: 111: CREN = 1;
  1016  0461  1618               	bsf	(196/8),(196)&7
  1017                           	line	114
  1018                           	
  1019  0462                     l3776:	
  1020                           ;MPLAB3.c: 114: SPEN = 1;
  1021  0462  1798               	bsf	(199/8),(199)&7
  1022  0463  2C64               	goto	l3778
  1023                           	line	118
  1024                           ;MPLAB3.c: 118: while(1)
  1025                           	
  1026  0464                     l733:	
  1027                           	line	123
  1028                           	
  1029  0464                     l3778:	
  1030                           ;MPLAB3.c: 119: {
  1031                           ;MPLAB3.c: 123: lcd_goto(0);
  1032  0464  3000               	movlw	(0)
  1033  0465  120A  158A  2361   	fcall	_lcd_goto
              120A  118A         
  1034                           	line	127
  1035                           	
  1036  046A                     l3780:	
  1037                           ;MPLAB3.c: 127: send_char('L');
  1038  046A  304C               	movlw	(04Ch)
  1039  046B  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1040                           	line	128
  1041                           	
  1042  0470                     l3782:	
  1043                           ;MPLAB3.c: 128: send_char('I');
  1044  0470  3049               	movlw	(049h)
  1045  0471  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1046                           	line	129
  1047                           	
  1048  0476                     l3784:	
  1049                           ;MPLAB3.c: 129: send_char('G');
  1050  0476  3047               	movlw	(047h)
  1051  0477  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1052                           	line	130
  1053                           	
  1054  047C                     l3786:	
  1055                           ;MPLAB3.c: 130: send_char('H');
  1056  047C  3048               	movlw	(048h)
  1057  047D  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1058                           	line	131
  1059                           	
  1060  0482                     l3788:	
  1061                           ;MPLAB3.c: 131: send_char('T');
  1062  0482  3054               	movlw	(054h)
  1063  0483  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1064                           	line	132
  1065                           	
  1066  0488                     l3790:	
  1067                           ;MPLAB3.c: 132: send_char('=');
  1068  0488  303D               	movlw	(03Dh)
  1069  0489  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1070                           	line	134
  1071                           	
  1072  048E                     l3792:	
  1073                           ;MPLAB3.c: 134: lcd_goto(20);
  1074  048E  3014               	movlw	(014h)
  1075  048F  120A  158A  2361   	fcall	_lcd_goto
              120A  118A         
  1076                           	line	138
  1077                           	
  1078  0494                     l3794:	
  1079                           ;MPLAB3.c: 138: send_char('T');
  1080  0494  3054               	movlw	(054h)
  1081  0495  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1082                           	line	139
  1083                           	
  1084  049A                     l3796:	
  1085                           ;MPLAB3.c: 139: send_char('E');
  1086  049A  3045               	movlw	(045h)
  1087  049B  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1088                           	line	140
  1089                           	
  1090  04A0                     l3798:	
  1091                           ;MPLAB3.c: 140: send_char('M');
  1092  04A0  304D               	movlw	(04Dh)
  1093  04A1  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1094                           	line	141
  1095                           	
  1096  04A6                     l3800:	
  1097                           ;MPLAB3.c: 141: send_char('P');
  1098  04A6  3050               	movlw	(050h)
  1099  04A7  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1100                           	line	142
  1101                           	
  1102  04AC                     l3802:	
  1103                           ;MPLAB3.c: 142: send_char('=');
  1104  04AC  303D               	movlw	(03Dh)
  1105  04AD  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1106                           	line	144
  1107                           	
  1108  04B2                     l3804:	
  1109                           ;MPLAB3.c: 144: lcd_goto(-24);
  1110  04B2  30E8               	movlw	(0E8h)
  1111  04B3  120A  158A  2361   	fcall	_lcd_goto
              120A  118A         
  1112                           	line	148
  1113                           	
  1114  04B8                     l3806:	
  1115                           ;MPLAB3.c: 148: send_char('V');
  1116  04B8  3056               	movlw	(056h)
  1117  04B9  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1118                           	line	149
  1119                           	
  1120  04BE                     l3808:	
  1121                           ;MPLAB3.c: 149: send_char('O');
  1122  04BE  304F               	movlw	(04Fh)
  1123  04BF  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1124                           	line	150
  1125                           	
  1126  04C4                     l3810:	
  1127                           ;MPLAB3.c: 150: send_char('L');
  1128  04C4  304C               	movlw	(04Ch)
  1129  04C5  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1130                           	line	151
  1131                           	
  1132  04CA                     l3812:	
  1133                           ;MPLAB3.c: 151: send_char('T');
  1134  04CA  3054               	movlw	(054h)
  1135  04CB  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1136                           	line	152
  1137                           	
  1138  04D0                     l3814:	
  1139                           ;MPLAB3.c: 152: send_char('A');
  1140  04D0  3041               	movlw	(041h)
  1141  04D1  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1142                           	line	153
  1143                           	
  1144  04D6                     l3816:	
  1145                           ;MPLAB3.c: 153: send_char('G');
  1146  04D6  3047               	movlw	(047h)
  1147  04D7  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1148                           	line	154
  1149                           	
  1150  04DC                     l3818:	
  1151                           ;MPLAB3.c: 154: send_char('E');
  1152  04DC  3045               	movlw	(045h)
  1153  04DD  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1154                           	line	155
  1155                           	
  1156  04E2                     l3820:	
  1157                           ;MPLAB3.c: 155: send_char('=');
  1158  04E2  303D               	movlw	(03Dh)
  1159  04E3  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1160                           	line	157
  1161                           	
  1162  04E8                     l3822:	
  1163                           ;MPLAB3.c: 157: lcd_goto(40);
  1164  04E8  3028               	movlw	(028h)
  1165  04E9  120A  158A  2361   	fcall	_lcd_goto
              120A  118A         
  1166                           	line	161
  1167                           	
  1168  04EE                     l3824:	
  1169                           ;MPLAB3.c: 161: send_char('C');
  1170  04EE  3043               	movlw	(043h)
  1171  04EF  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1172                           	line	162
  1173                           	
  1174  04F4                     l3826:	
  1175                           ;MPLAB3.c: 162: send_char('U');
  1176  04F4  3055               	movlw	(055h)
  1177  04F5  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1178                           	line	163
  1179                           	
  1180  04FA                     l3828:	
  1181                           ;MPLAB3.c: 163: send_char('R');
  1182  04FA  3052               	movlw	(052h)
  1183  04FB  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1184                           	line	164
  1185                           	
  1186  0500                     l3830:	
  1187                           ;MPLAB3.c: 164: send_char('R');
  1188  0500  3052               	movlw	(052h)
  1189  0501  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1190                           	line	165
  1191                           	
  1192  0506                     l3832:	
  1193                           ;MPLAB3.c: 165: send_char('E');
  1194  0506  3045               	movlw	(045h)
  1195  0507  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1196                           	line	166
  1197                           	
  1198  050C                     l3834:	
  1199                           ;MPLAB3.c: 166: send_char('N');
  1200  050C  304E               	movlw	(04Eh)
  1201  050D  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1202                           	line	167
  1203                           	
  1204  0512                     l3836:	
  1205                           ;MPLAB3.c: 167: send_char('T');
  1206  0512  3054               	movlw	(054h)
  1207  0513  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1208                           	line	168
  1209                           	
  1210  0518                     l3838:	
  1211                           ;MPLAB3.c: 168: send_char('=');
  1212  0518  303D               	movlw	(03Dh)
  1213  0519  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1214  051E  2D1F               	goto	l3840
  1215                           	line	171
  1216                           ;MPLAB3.c: 171: while(1)
  1217                           	
  1218  051F                     l734:	
  1219                           	line	177
  1220                           	
  1221  051F                     l3840:	
  1222                           ;MPLAB3.c: 172: {
  1223                           ;MPLAB3.c: 177: ADCON0=0b10000001;
  1224  051F  3081               	movlw	(081h)
  1225  0520  1283               	bcf	status, 5	;RP0=0, select bank0
  1226  0521  1303               	bcf	status, 6	;RP1=0, select bank0
  1227  0522  009F               	movwf	(31)	;volatile
  1228                           	line	178
  1229                           	
  1230  0523                     l3842:	
  1231                           ;MPLAB3.c: 178: lcd_goto(8);
  1232  0523  3008               	movlw	(08h)
  1233  0524  120A  158A  2361   	fcall	_lcd_goto
              120A  118A         
  1234                           	line	179
  1235                           	
  1236  0529                     l3844:	
  1237                           ;MPLAB3.c: 179: read_adc();
  1238  0529  120A  158A  257F   	fcall	_read_adc
              120A  118A         
  1239                           	line	180
  1240                           	
  1241  052E                     l3846:	
  1242                           ;MPLAB3.c: 180: light=read_temp();
  1243  052E  120A  158A  2299   	fcall	_read_temp
              120A  118A         
  1244  0533  0871               	movf	(1+(?_read_temp)),w
  1245  0534  1283               	bcf	status, 5	;RP0=0, select bank0
  1246  0535  1303               	bcf	status, 6	;RP1=0, select bank0
  1247  0536  01C9               	clrf	(_light+1)
  1248  0537  07C9               	addwf	(_light+1)
  1249  0538  0870               	movf	(0+(?_read_temp)),w
  1250  0539  01C8               	clrf	(_light)
  1251  053A  07C8               	addwf	(_light)
  1252                           
  1253                           	line	182
  1254                           	
  1255  053B                     l3848:	
  1256                           ;MPLAB3.c: 182: dis_num(light/10);
  1257  053B  300A               	movlw	low(0Ah)
  1258  053C  00F0               	movwf	(?___lwdiv)
  1259  053D  3000               	movlw	high(0Ah)
  1260  053E  00F1               	movwf	((?___lwdiv))+1
  1261  053F  0849               	movf	(_light+1),w
  1262  0540  01F3               	clrf	1+(?___lwdiv)+02h
  1263  0541  07F3               	addwf	1+(?___lwdiv)+02h
  1264  0542  0848               	movf	(_light),w
  1265  0543  01F2               	clrf	0+(?___lwdiv)+02h
  1266  0544  07F2               	addwf	0+(?___lwdiv)+02h
  1267                           
  1268  0545  120A  158A  23EC   	fcall	___lwdiv
              120A  118A         
  1269  054A  0870               	movf	(0+(?___lwdiv)),w
  1270  054B  1283               	bcf	status, 5	;RP0=0, select bank0
  1271  054C  1303               	bcf	status, 6	;RP1=0, select bank0
  1272  054D  00A0               	movwf	(?_dis_num)
  1273  054E  0871               	movf	(1+(?___lwdiv)),w
  1274  054F  00A1               	movwf	((?_dis_num))+1
  1275  0550  01A2               	clrf	2+((?_dis_num))
  1276  0551  01A3               	clrf	3+((?_dis_num))
  1277  0552  120A  158A  2602   	fcall	_dis_num
              120A  118A         
  1278                           	line	183
  1279                           	
  1280  0557                     l3850:	
  1281                           ;MPLAB3.c: 183: send_char('.');
  1282  0557  302E               	movlw	(02Eh)
  1283  0558  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1284                           	line	184
  1285                           	
  1286  055D                     l3852:	
  1287                           ;MPLAB3.c: 184: dis_num(light%10);
  1288  055D  300A               	movlw	low(0Ah)
  1289  055E  00F8               	movwf	(?___lwmod)
  1290  055F  3000               	movlw	high(0Ah)
  1291  0560  00F9               	movwf	((?___lwmod))+1
  1292  0561  1283               	bcf	status, 5	;RP0=0, select bank0
  1293  0562  1303               	bcf	status, 6	;RP1=0, select bank0
  1294  0563  0849               	movf	(_light+1),w
  1295  0564  01FB               	clrf	1+(?___lwmod)+02h
  1296  0565  07FB               	addwf	1+(?___lwmod)+02h
  1297  0566  0848               	movf	(_light),w
  1298  0567  01FA               	clrf	0+(?___lwmod)+02h
  1299  0568  07FA               	addwf	0+(?___lwmod)+02h
  1300                           
  1301  0569  120A  158A  23A8   	fcall	___lwmod
              120A  118A         
  1302  056E  0878               	movf	(0+(?___lwmod)),w
  1303  056F  1283               	bcf	status, 5	;RP0=0, select bank0
  1304  0570  1303               	bcf	status, 6	;RP1=0, select bank0
  1305  0571  00A0               	movwf	(?_dis_num)
  1306  0572  0879               	movf	(1+(?___lwmod)),w
  1307  0573  00A1               	movwf	((?_dis_num))+1
  1308  0574  01A2               	clrf	2+((?_dis_num))
  1309  0575  01A3               	clrf	3+((?_dis_num))
  1310  0576  120A  158A  2602   	fcall	_dis_num
              120A  118A         
  1311                           	line	191
  1312                           	
  1313  057B                     l3854:	
  1314                           ;MPLAB3.c: 191: ADCON0=0b10001001;
  1315  057B  3089               	movlw	(089h)
  1316  057C  1283               	bcf	status, 5	;RP0=0, select bank0
  1317  057D  1303               	bcf	status, 6	;RP1=0, select bank0
  1318  057E  009F               	movwf	(31)	;volatile
  1319                           	line	192
  1320                           	
  1321  057F                     l3856:	
  1322                           ;MPLAB3.c: 192: lcd_goto(28);
  1323  057F  301C               	movlw	(01Ch)
  1324  0580  120A  158A  2361   	fcall	_lcd_goto
              120A  118A         
  1325                           	line	193
  1326                           	
  1327  0585                     l3858:	
  1328                           ;MPLAB3.c: 193: read_adc();
  1329  0585  120A  158A  257F   	fcall	_read_adc
              120A  118A         
  1330                           	line	194
  1331                           	
  1332  058A                     l3860:	
  1333                           ;MPLAB3.c: 194: temperature=read_temp();
  1334  058A  120A  158A  2299   	fcall	_read_temp
              120A  118A         
  1335  058F  0871               	movf	(1+(?_read_temp)),w
  1336  0590  1283               	bcf	status, 5	;RP0=0, select bank0
  1337  0591  1303               	bcf	status, 6	;RP1=0, select bank0
  1338  0592  01CD               	clrf	(_temperature+1)
  1339  0593  07CD               	addwf	(_temperature+1)
  1340  0594  0870               	movf	(0+(?_read_temp)),w
  1341  0595  01CC               	clrf	(_temperature)
  1342  0596  07CC               	addwf	(_temperature)
  1343                           
  1344                           	line	195
  1345                           	
  1346  0597                     l3862:	
  1347                           ;MPLAB3.c: 195: temperature = (temperature*0.48876);
  1348  0597  084D               	movf	(_temperature+1),w
  1349  0598  01AB               	clrf	(?___lwtoft+1)
  1350  0599  07AB               	addwf	(?___lwtoft+1)
  1351  059A  084C               	movf	(_temperature),w
  1352  059B  01AA               	clrf	(?___lwtoft)
  1353  059C  07AA               	addwf	(?___lwtoft)
  1354                           
  1355  059D  120A  158A  2346   	fcall	___lwtoft
              120A  118A         
  1356  05A2  1283               	bcf	status, 5	;RP0=0, select bank0
  1357  05A3  1303               	bcf	status, 6	;RP1=0, select bank0
  1358  05A4  082A               	movf	(0+(?___lwtoft)),w
  1359  05A5  00B0               	movwf	0+(?___ftmul)+03h
  1360  05A6  082B               	movf	(1+(?___lwtoft)),w
  1361  05A7  00B1               	movwf	1+(?___ftmul)+03h
  1362  05A8  082C               	movf	(2+(?___lwtoft)),w
  1363  05A9  00B2               	movwf	2+(?___ftmul)+03h
  1364  05AA  303F               	movlw	0x3f
  1365  05AB  00AD               	movwf	(?___ftmul)
  1366  05AC  30FA               	movlw	0xfa
  1367  05AD  00AE               	movwf	(?___ftmul+1)
  1368  05AE  303E               	movlw	0x3e
  1369  05AF  00AF               	movwf	(?___ftmul+2)
  1370  05B0  120A  118A  20C3   	fcall	___ftmul
              120A  118A         
  1371  05B5  1283               	bcf	status, 5	;RP0=0, select bank0
  1372  05B6  1303               	bcf	status, 6	;RP1=0, select bank0
  1373  05B7  082D               	movf	(0+(?___ftmul)),w
  1374  05B8  00F8               	movwf	(?___fttol)
  1375  05B9  082E               	movf	(1+(?___ftmul)),w
  1376  05BA  00F9               	movwf	(?___fttol+1)
  1377  05BB  082F               	movf	(2+(?___ftmul)),w
  1378  05BC  00FA               	movwf	(?___fttol+2)
  1379  05BD  120A  118A  201D   	fcall	___fttol
              120A  118A         
  1380  05C2  0879               	movf	1+(((0+(?___fttol)))),w
  1381  05C3  1283               	bcf	status, 5	;RP0=0, select bank0
  1382  05C4  1303               	bcf	status, 6	;RP1=0, select bank0
  1383  05C5  01CD               	clrf	(_temperature+1)
  1384  05C6  07CD               	addwf	(_temperature+1)
  1385  05C7  0878               	movf	0+(((0+(?___fttol)))),w
  1386  05C8  01CC               	clrf	(_temperature)
  1387  05C9  07CC               	addwf	(_temperature)
  1388                           
  1389                           	line	199
  1390                           	
  1391  05CA                     l3864:	
  1392                           ;MPLAB3.c: 199: dis_num(temperature);
  1393  05CA  084C               	movf	(_temperature),w
  1394  05CB  00A0               	movwf	(?_dis_num)
  1395  05CC  084D               	movf	(_temperature+1),w
  1396  05CD  00A1               	movwf	((?_dis_num))+1
  1397  05CE  01A2               	clrf	2+((?_dis_num))
  1398  05CF  01A3               	clrf	3+((?_dis_num))
  1399  05D0  120A  158A  2602   	fcall	_dis_num
              120A  118A         
  1400                           	line	201
  1401                           	
  1402  05D5                     l3866:	
  1403                           ;MPLAB3.c: 201: send_char(0b11011111);
  1404  05D5  30DF               	movlw	(0DFh)
  1405  05D6  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1406                           	line	202
  1407                           	
  1408  05DB                     l3868:	
  1409                           ;MPLAB3.c: 202: send_char('C');
  1410  05DB  3043               	movlw	(043h)
  1411  05DC  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1412                           	line	203
  1413                           	
  1414  05E1                     l3870:	
  1415                           ;MPLAB3.c: 203: send_char(' ');
  1416  05E1  3020               	movlw	(020h)
  1417  05E2  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1418                           	line	204
  1419                           	
  1420  05E7                     l3872:	
  1421                           ;MPLAB3.c: 204: send_char(' ');
  1422  05E7  3020               	movlw	(020h)
  1423  05E8  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1424                           	line	206
  1425                           	
  1426  05ED                     l3874:	
  1427                           ;MPLAB3.c: 206: if(temperature>40)
  1428  05ED  3000               	movlw	high(029h)
  1429  05EE  1283               	bcf	status, 5	;RP0=0, select bank0
  1430  05EF  1303               	bcf	status, 6	;RP1=0, select bank0
  1431  05F0  024D               	subwf	(_temperature+1),w
  1432  05F1  3029               	movlw	low(029h)
  1433  05F2  1903               	skipnz
  1434  05F3  024C               	subwf	(_temperature),w
  1435  05F4  1C03               	skipc
  1436  05F5  2DF7               	goto	u4081
  1437  05F6  2DF8               	goto	u4080
  1438  05F7                     u4081:
  1439  05F7  2DFA               	goto	l735
  1440  05F8                     u4080:
  1441                           	line	208
  1442                           	
  1443  05F8                     l3876:	
  1444                           ;MPLAB3.c: 207: {
  1445                           ;MPLAB3.c: 208: RB0=1;
  1446  05F8  1406               	bsf	(48/8),(48)&7
  1447                           	line	209
  1448                           ;MPLAB3.c: 209: }
  1449  05F9  2DFC               	goto	l3878
  1450                           	line	211
  1451                           	
  1452  05FA                     l735:	
  1453                           	line	213
  1454                           ;MPLAB3.c: 211: else
  1455                           ;MPLAB3.c: 212: {
  1456                           ;MPLAB3.c: 213: RB0=0;
  1457  05FA  1006               	bcf	(48/8),(48)&7
  1458  05FB  2DFC               	goto	l3878
  1459                           	line	214
  1460                           	
  1461  05FC                     l736:	
  1462                           	line	221
  1463                           	
  1464  05FC                     l3878:	
  1465                           ;MPLAB3.c: 214: }
  1466                           ;MPLAB3.c: 221: ADCON0=0b10010001;
  1467  05FC  3091               	movlw	(091h)
  1468  05FD  009F               	movwf	(31)	;volatile
  1469                           	line	222
  1470                           	
  1471  05FE                     l3880:	
  1472                           ;MPLAB3.c: 222: lcd_goto(-16);
  1473  05FE  30F0               	movlw	(0F0h)
  1474  05FF  120A  158A  2361   	fcall	_lcd_goto
              120A  118A         
  1475                           	line	223
  1476                           	
  1477  0604                     l3882:	
  1478                           ;MPLAB3.c: 223: read_adc();
  1479  0604  120A  158A  257F   	fcall	_read_adc
              120A  118A         
  1480                           	line	224
  1481                           	
  1482  0609                     l3884:	
  1483                           ;MPLAB3.c: 224: voltage=read_temp();
  1484  0609  120A  158A  2299   	fcall	_read_temp
              120A  118A         
  1485  060E  0871               	movf	(1+(?_read_temp)),w
  1486  060F  1283               	bcf	status, 5	;RP0=0, select bank0
  1487  0610  1303               	bcf	status, 6	;RP1=0, select bank0
  1488  0611  01CF               	clrf	(_voltage+1)
  1489  0612  07CF               	addwf	(_voltage+1)
  1490  0613  0870               	movf	(0+(?_read_temp)),w
  1491  0614  01CE               	clrf	(_voltage)
  1492  0615  07CE               	addwf	(_voltage)
  1493                           
  1494                           	line	227
  1495                           	
  1496  0616                     l3886:	
  1497                           ;MPLAB3.c: 227: voltage=(voltage*4.836587680029639272430897954192);
  1498  0616  084F               	movf	(_voltage+1),w
  1499  0617  01AB               	clrf	(?___lwtoft+1)
  1500  0618  07AB               	addwf	(?___lwtoft+1)
  1501  0619  084E               	movf	(_voltage),w
  1502  061A  01AA               	clrf	(?___lwtoft)
  1503  061B  07AA               	addwf	(?___lwtoft)
  1504                           
  1505  061C  120A  158A  2346   	fcall	___lwtoft
              120A  118A         
  1506  0621  1283               	bcf	status, 5	;RP0=0, select bank0
  1507  0622  1303               	bcf	status, 6	;RP1=0, select bank0
  1508  0623  082A               	movf	(0+(?___lwtoft)),w
  1509  0624  00B0               	movwf	0+(?___ftmul)+03h
  1510  0625  082B               	movf	(1+(?___lwtoft)),w
  1511  0626  00B1               	movwf	1+(?___ftmul)+03h
  1512  0627  082C               	movf	(2+(?___lwtoft)),w
  1513  0628  00B2               	movwf	2+(?___ftmul)+03h
  1514  0629  30C5               	movlw	0xc5
  1515  062A  00AD               	movwf	(?___ftmul)
  1516  062B  309A               	movlw	0x9a
  1517  062C  00AE               	movwf	(?___ftmul+1)
  1518  062D  3040               	movlw	0x40
  1519  062E  00AF               	movwf	(?___ftmul+2)
  1520  062F  120A  118A  20C3   	fcall	___ftmul
              120A  118A         
  1521  0634  1283               	bcf	status, 5	;RP0=0, select bank0
  1522  0635  1303               	bcf	status, 6	;RP1=0, select bank0
  1523  0636  082D               	movf	(0+(?___ftmul)),w
  1524  0637  00F8               	movwf	(?___fttol)
  1525  0638  082E               	movf	(1+(?___ftmul)),w
  1526  0639  00F9               	movwf	(?___fttol+1)
  1527  063A  082F               	movf	(2+(?___ftmul)),w
  1528  063B  00FA               	movwf	(?___fttol+2)
  1529  063C  120A  118A  201D   	fcall	___fttol
              120A  118A         
  1530  0641  0879               	movf	1+(((0+(?___fttol)))),w
  1531  0642  1283               	bcf	status, 5	;RP0=0, select bank0
  1532  0643  1303               	bcf	status, 6	;RP1=0, select bank0
  1533  0644  01CF               	clrf	(_voltage+1)
  1534  0645  07CF               	addwf	(_voltage+1)
  1535  0646  0878               	movf	0+(((0+(?___fttol)))),w
  1536  0647  01CE               	clrf	(_voltage)
  1537  0648  07CE               	addwf	(_voltage)
  1538                           
  1539                           	line	230
  1540                           	
  1541  0649                     l3888:	
  1542                           ;MPLAB3.c: 230: dis_num(voltage/10);
  1543  0649  300A               	movlw	low(0Ah)
  1544  064A  00F0               	movwf	(?___lwdiv)
  1545  064B  3000               	movlw	high(0Ah)
  1546  064C  00F1               	movwf	((?___lwdiv))+1
  1547  064D  084F               	movf	(_voltage+1),w
  1548  064E  01F3               	clrf	1+(?___lwdiv)+02h
  1549  064F  07F3               	addwf	1+(?___lwdiv)+02h
  1550  0650  084E               	movf	(_voltage),w
  1551  0651  01F2               	clrf	0+(?___lwdiv)+02h
  1552  0652  07F2               	addwf	0+(?___lwdiv)+02h
  1553                           
  1554  0653  120A  158A  23EC   	fcall	___lwdiv
              120A  118A         
  1555  0658  0870               	movf	(0+(?___lwdiv)),w
  1556  0659  1283               	bcf	status, 5	;RP0=0, select bank0
  1557  065A  1303               	bcf	status, 6	;RP1=0, select bank0
  1558  065B  00A0               	movwf	(?_dis_num)
  1559  065C  0871               	movf	(1+(?___lwdiv)),w
  1560  065D  00A1               	movwf	((?_dis_num))+1
  1561  065E  01A2               	clrf	2+((?_dis_num))
  1562  065F  01A3               	clrf	3+((?_dis_num))
  1563  0660  120A  158A  2602   	fcall	_dis_num
              120A  118A         
  1564                           	line	231
  1565                           	
  1566  0665                     l3890:	
  1567                           ;MPLAB3.c: 231: send_char('.');
  1568  0665  302E               	movlw	(02Eh)
  1569  0666  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1570                           	line	232
  1571                           	
  1572  066B                     l3892:	
  1573                           ;MPLAB3.c: 232: dis_num(voltage%10);
  1574  066B  300A               	movlw	low(0Ah)
  1575  066C  00F8               	movwf	(?___lwmod)
  1576  066D  3000               	movlw	high(0Ah)
  1577  066E  00F9               	movwf	((?___lwmod))+1
  1578  066F  1283               	bcf	status, 5	;RP0=0, select bank0
  1579  0670  1303               	bcf	status, 6	;RP1=0, select bank0
  1580  0671  084F               	movf	(_voltage+1),w
  1581  0672  01FB               	clrf	1+(?___lwmod)+02h
  1582  0673  07FB               	addwf	1+(?___lwmod)+02h
  1583  0674  084E               	movf	(_voltage),w
  1584  0675  01FA               	clrf	0+(?___lwmod)+02h
  1585  0676  07FA               	addwf	0+(?___lwmod)+02h
  1586                           
  1587  0677  120A  158A  23A8   	fcall	___lwmod
              120A  118A         
  1588  067C  0878               	movf	(0+(?___lwmod)),w
  1589  067D  1283               	bcf	status, 5	;RP0=0, select bank0
  1590  067E  1303               	bcf	status, 6	;RP1=0, select bank0
  1591  067F  00A0               	movwf	(?_dis_num)
  1592  0680  0879               	movf	(1+(?___lwmod)),w
  1593  0681  00A1               	movwf	((?_dis_num))+1
  1594  0682  01A2               	clrf	2+((?_dis_num))
  1595  0683  01A3               	clrf	3+((?_dis_num))
  1596  0684  120A  158A  2602   	fcall	_dis_num
              120A  118A         
  1597                           	line	233
  1598                           	
  1599  0689                     l3894:	
  1600                           ;MPLAB3.c: 233: send_char(' ');
  1601  0689  3020               	movlw	(020h)
  1602  068A  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1603                           	line	234
  1604                           	
  1605  068F                     l3896:	
  1606                           ;MPLAB3.c: 234: send_char('V');
  1607  068F  3056               	movlw	(056h)
  1608  0690  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1609                           	line	235
  1610                           	
  1611  0695                     l3898:	
  1612                           ;MPLAB3.c: 235: send_char(' ');
  1613  0695  3020               	movlw	(020h)
  1614  0696  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1615                           	line	241
  1616                           ;MPLAB3.c: 241: ADCON0=0b10011001;
  1617  069B  3099               	movlw	(099h)
  1618  069C  1283               	bcf	status, 5	;RP0=0, select bank0
  1619  069D  1303               	bcf	status, 6	;RP1=0, select bank0
  1620  069E  009F               	movwf	(31)	;volatile
  1621                           	line	242
  1622                           	
  1623  069F                     l3900:	
  1624                           ;MPLAB3.c: 242: lcd_goto(48);
  1625  069F  3030               	movlw	(030h)
  1626  06A0  120A  158A  2361   	fcall	_lcd_goto
              120A  118A         
  1627                           	line	243
  1628                           	
  1629  06A5                     l3902:	
  1630                           ;MPLAB3.c: 243: read_adc();
  1631  06A5  120A  158A  257F   	fcall	_read_adc
              120A  118A         
  1632                           	line	244
  1633                           	
  1634  06AA                     l3904:	
  1635                           ;MPLAB3.c: 244: current=read_temp();
  1636  06AA  120A  158A  2299   	fcall	_read_temp
              120A  118A         
  1637  06AF  0871               	movf	(1+(?_read_temp)),w
  1638  06B0  1283               	bcf	status, 5	;RP0=0, select bank0
  1639  06B1  1303               	bcf	status, 6	;RP1=0, select bank0
  1640  06B2  01C5               	clrf	(_current+1)
  1641  06B3  07C5               	addwf	(_current+1)
  1642  06B4  0870               	movf	(0+(?_read_temp)),w
  1643  06B5  01C4               	clrf	(_current)
  1644  06B6  07C4               	addwf	(_current)
  1645                           
  1646                           	line	246
  1647                           	
  1648  06B7                     l3906:	
  1649                           ;MPLAB3.c: 246: current=current/3;
  1650  06B7  3003               	movlw	low(03h)
  1651  06B8  00F0               	movwf	(?___lwdiv)
  1652  06B9  3000               	movlw	high(03h)
  1653  06BA  00F1               	movwf	((?___lwdiv))+1
  1654  06BB  0845               	movf	(_current+1),w
  1655  06BC  01F3               	clrf	1+(?___lwdiv)+02h
  1656  06BD  07F3               	addwf	1+(?___lwdiv)+02h
  1657  06BE  0844               	movf	(_current),w
  1658  06BF  01F2               	clrf	0+(?___lwdiv)+02h
  1659  06C0  07F2               	addwf	0+(?___lwdiv)+02h
  1660                           
  1661  06C1  120A  158A  23EC   	fcall	___lwdiv
              120A  118A         
  1662  06C6  0871               	movf	(1+(?___lwdiv)),w
  1663  06C7  1283               	bcf	status, 5	;RP0=0, select bank0
  1664  06C8  1303               	bcf	status, 6	;RP1=0, select bank0
  1665  06C9  01C5               	clrf	(_current+1)
  1666  06CA  07C5               	addwf	(_current+1)
  1667  06CB  0870               	movf	(0+(?___lwdiv)),w
  1668  06CC  01C4               	clrf	(_current)
  1669  06CD  07C4               	addwf	(_current)
  1670                           
  1671                           	line	250
  1672                           	
  1673  06CE                     l3908:	
  1674                           ;MPLAB3.c: 250: dis_num(current/10);
  1675  06CE  300A               	movlw	low(0Ah)
  1676  06CF  00F0               	movwf	(?___lwdiv)
  1677  06D0  3000               	movlw	high(0Ah)
  1678  06D1  00F1               	movwf	((?___lwdiv))+1
  1679  06D2  0845               	movf	(_current+1),w
  1680  06D3  01F3               	clrf	1+(?___lwdiv)+02h
  1681  06D4  07F3               	addwf	1+(?___lwdiv)+02h
  1682  06D5  0844               	movf	(_current),w
  1683  06D6  01F2               	clrf	0+(?___lwdiv)+02h
  1684  06D7  07F2               	addwf	0+(?___lwdiv)+02h
  1685                           
  1686  06D8  120A  158A  23EC   	fcall	___lwdiv
              120A  118A         
  1687  06DD  0870               	movf	(0+(?___lwdiv)),w
  1688  06DE  1283               	bcf	status, 5	;RP0=0, select bank0
  1689  06DF  1303               	bcf	status, 6	;RP1=0, select bank0
  1690  06E0  00A0               	movwf	(?_dis_num)
  1691  06E1  0871               	movf	(1+(?___lwdiv)),w
  1692  06E2  00A1               	movwf	((?_dis_num))+1
  1693  06E3  01A2               	clrf	2+((?_dis_num))
  1694  06E4  01A3               	clrf	3+((?_dis_num))
  1695  06E5  120A  158A  2602   	fcall	_dis_num
              120A  118A         
  1696                           	line	251
  1697                           	
  1698  06EA                     l3910:	
  1699                           ;MPLAB3.c: 251: send_char('.');
  1700  06EA  302E               	movlw	(02Eh)
  1701  06EB  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1702                           	line	252
  1703                           	
  1704  06F0                     l3912:	
  1705                           ;MPLAB3.c: 252: dis_num(current%10);
  1706  06F0  300A               	movlw	low(0Ah)
  1707  06F1  00F8               	movwf	(?___lwmod)
  1708  06F2  3000               	movlw	high(0Ah)
  1709  06F3  00F9               	movwf	((?___lwmod))+1
  1710  06F4  1283               	bcf	status, 5	;RP0=0, select bank0
  1711  06F5  1303               	bcf	status, 6	;RP1=0, select bank0
  1712  06F6  0845               	movf	(_current+1),w
  1713  06F7  01FB               	clrf	1+(?___lwmod)+02h
  1714  06F8  07FB               	addwf	1+(?___lwmod)+02h
  1715  06F9  0844               	movf	(_current),w
  1716  06FA  01FA               	clrf	0+(?___lwmod)+02h
  1717  06FB  07FA               	addwf	0+(?___lwmod)+02h
  1718                           
  1719  06FC  120A  158A  23A8   	fcall	___lwmod
              120A  118A         
  1720  0701  0878               	movf	(0+(?___lwmod)),w
  1721  0702  1283               	bcf	status, 5	;RP0=0, select bank0
  1722  0703  1303               	bcf	status, 6	;RP1=0, select bank0
  1723  0704  00A0               	movwf	(?_dis_num)
  1724  0705  0879               	movf	(1+(?___lwmod)),w
  1725  0706  00A1               	movwf	((?_dis_num))+1
  1726  0707  01A2               	clrf	2+((?_dis_num))
  1727  0708  01A3               	clrf	3+((?_dis_num))
  1728  0709  120A  158A  2602   	fcall	_dis_num
              120A  118A         
  1729                           	line	254
  1730                           	
  1731  070E                     l3914:	
  1732                           ;MPLAB3.c: 254: send_char(' ');
  1733  070E  3020               	movlw	(020h)
  1734  070F  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1735                           	line	255
  1736                           	
  1737  0714                     l3916:	
  1738                           ;MPLAB3.c: 255: send_char('A');
  1739  0714  3041               	movlw	(041h)
  1740  0715  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1741                           	line	256
  1742                           	
  1743  071A                     l3918:	
  1744                           ;MPLAB3.c: 256: send_char(' ');
  1745  071A  3020               	movlw	(020h)
  1746  071B  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1747                           	line	261
  1748                           	
  1749  0720                     l3920:	
  1750                           ;MPLAB3.c: 261: lcd_goto(51);
  1751  0720  3033               	movlw	(033h)
  1752  0721  120A  158A  2361   	fcall	_lcd_goto
              120A  118A         
  1753                           	line	265
  1754                           	
  1755  0726                     l3922:	
  1756                           ;MPLAB3.c: 265: send_char(' ');
  1757  0726  3020               	movlw	(020h)
  1758  0727  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1759                           	line	266
  1760                           	
  1761  072C                     l3924:	
  1762                           ;MPLAB3.c: 266: send_char(' ');
  1763  072C  3020               	movlw	(020h)
  1764  072D  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1765                           	line	267
  1766                           	
  1767  0732                     l3926:	
  1768                           ;MPLAB3.c: 267: send_char('P');
  1769  0732  3050               	movlw	(050h)
  1770  0733  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1771                           	line	268
  1772                           	
  1773  0738                     l3928:	
  1774                           ;MPLAB3.c: 268: send_char('=');
  1775  0738  303D               	movlw	(03Dh)
  1776  0739  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1777                           	line	271
  1778                           	
  1779  073E                     l3930:	
  1780                           ;MPLAB3.c: 271: MPP=voltage * current;
  1781  073E  1283               	bcf	status, 5	;RP0=0, select bank0
  1782  073F  1303               	bcf	status, 6	;RP1=0, select bank0
  1783  0740  084F               	movf	(_voltage+1),w
  1784  0741  01F1               	clrf	(?___wmul+1)
  1785  0742  07F1               	addwf	(?___wmul+1)
  1786  0743  084E               	movf	(_voltage),w
  1787  0744  01F0               	clrf	(?___wmul)
  1788  0745  07F0               	addwf	(?___wmul)
  1789                           
  1790  0746  0845               	movf	(_current+1),w
  1791  0747  01F3               	clrf	1+(?___wmul)+02h
  1792  0748  07F3               	addwf	1+(?___wmul)+02h
  1793  0749  0844               	movf	(_current),w
  1794  074A  01F2               	clrf	0+(?___wmul)+02h
  1795  074B  07F2               	addwf	0+(?___wmul)+02h
  1796                           
  1797  074C  120A  158A  237E   	fcall	___wmul
              120A  118A         
  1798  0751  0871               	movf	(1+(?___wmul)),w
  1799  0752  1283               	bcf	status, 5	;RP0=0, select bank0
  1800  0753  1303               	bcf	status, 6	;RP1=0, select bank0
  1801  0754  01C3               	clrf	(_MPP+1)
  1802  0755  07C3               	addwf	(_MPP+1)
  1803  0756  0870               	movf	(0+(?___wmul)),w
  1804  0757  01C2               	clrf	(_MPP)
  1805  0758  07C2               	addwf	(_MPP)
  1806                           
  1807                           	line	273
  1808                           	
  1809  0759                     l3932:	
  1810                           ;MPLAB3.c: 273: dis_num(MPP/100);
  1811  0759  3064               	movlw	low(064h)
  1812  075A  00F0               	movwf	(?___lwdiv)
  1813  075B  3000               	movlw	high(064h)
  1814  075C  00F1               	movwf	((?___lwdiv))+1
  1815  075D  0843               	movf	(_MPP+1),w
  1816  075E  01F3               	clrf	1+(?___lwdiv)+02h
  1817  075F  07F3               	addwf	1+(?___lwdiv)+02h
  1818  0760  0842               	movf	(_MPP),w
  1819  0761  01F2               	clrf	0+(?___lwdiv)+02h
  1820  0762  07F2               	addwf	0+(?___lwdiv)+02h
  1821                           
  1822  0763  120A  158A  23EC   	fcall	___lwdiv
              120A  118A         
  1823  0768  0870               	movf	(0+(?___lwdiv)),w
  1824  0769  1283               	bcf	status, 5	;RP0=0, select bank0
  1825  076A  1303               	bcf	status, 6	;RP1=0, select bank0
  1826  076B  00A0               	movwf	(?_dis_num)
  1827  076C  0871               	movf	(1+(?___lwdiv)),w
  1828  076D  00A1               	movwf	((?_dis_num))+1
  1829  076E  01A2               	clrf	2+((?_dis_num))
  1830  076F  01A3               	clrf	3+((?_dis_num))
  1831  0770  120A  158A  2602   	fcall	_dis_num
              120A  118A         
  1832                           	line	274
  1833                           	
  1834  0775                     l3934:	
  1835                           ;MPLAB3.c: 274: send_char('.');
  1836  0775  302E               	movlw	(02Eh)
  1837  0776  120A  158A  232D   	fcall	_send_char
              120A  118A         
  1838                           	line	275
  1839                           	
  1840  077B                     l3936:	
  1841                           ;MPLAB3.c: 275: dis_num(current%10);
  1842  077B  300A               	movlw	low(0Ah)
  1843  077C  00F8               	movwf	(?___lwmod)
  1844  077D  3000               	movlw	high(0Ah)
  1845  077E  00F9               	movwf	((?___lwmod))+1
  1846  077F  1283               	bcf	status, 5	;RP0=0, select bank0
  1847  0780  1303               	bcf	status, 6	;RP1=0, select bank0
  1848  0781  0845               	movf	(_current+1),w
  1849  0782  01FB               	clrf	1+(?___lwmod)+02h
  1850  0783  07FB               	addwf	1+(?___lwmod)+02h
  1851  0784  0844               	movf	(_current),w
  1852  0785  01FA               	clrf	0+(?___lwmod)+02h
  1853  0786  07FA               	addwf	0+(?___lwmod)+02h
  1854                           
  1855  0787  120A  158A  23A8   	fcall	___lwmod
              120A  118A         
  1856  078C  0878               	movf	(0+(?___lwmod)),w
  1857  078D  1283               	bcf	status, 5	;RP0=0, select bank0
  1858  078E  1303               	bcf	status, 6	;RP1=0, select bank0
  1859  078F  00A0               	movwf	(?_dis_num)
  1860  0790  0879               	movf	(1+(?___lwmod)),w
  1861  0791  00A1               	movwf	((?_dis_num))+1
  1862  0792  01A2               	clrf	2+((?_dis_num))
  1863  0793  01A3               	clrf	3+((?_dis_num))
  1864  0794  120A  158A  2602   	fcall	_dis_num
              120A  118A         
  1865                           	line	280
  1866                           	
  1867  0799                     l3938:	
  1868                           ;MPLAB3.c: 280: sprintf(serial_buffer,"T%05dV%05dC%05dL%05d%c%c",light/10,temperature,vo
                                 ltage,current/10,0xA,0xD);
  1869  0799  300A               	movlw	low(0Ah)
  1870  079A  00F0               	movwf	(?___lwdiv)
  1871  079B  3000               	movlw	high(0Ah)
  1872  079C  00F1               	movwf	((?___lwdiv))+1
  1873  079D  1283               	bcf	status, 5	;RP0=0, select bank0
  1874  079E  1303               	bcf	status, 6	;RP1=0, select bank0
  1875  079F  0849               	movf	(_light+1),w
  1876  07A0  01F3               	clrf	1+(?___lwdiv)+02h
  1877  07A1  07F3               	addwf	1+(?___lwdiv)+02h
  1878  07A2  0848               	movf	(_light),w
  1879  07A3  01F2               	clrf	0+(?___lwdiv)+02h
  1880  07A4  07F2               	addwf	0+(?___lwdiv)+02h
  1881                           
  1882  07A5  120A  158A  23EC   	fcall	___lwdiv
              120A  118A         
  1883  07AA  0871               	movf	(1+(?___lwdiv)),w
  1884  07AB  1283               	bcf	status, 5	;RP0=0, select bank0
  1885  07AC  1303               	bcf	status, 6	;RP1=0, select bank0
  1886  07AD  01BF               	clrf	(_main$1695+1)
  1887  07AE  07BF               	addwf	(_main$1695+1)
  1888  07AF  0870               	movf	(0+(?___lwdiv)),w
  1889  07B0  01BE               	clrf	(_main$1695)
  1890  07B1  07BE               	addwf	(_main$1695)
  1891                           
  1892                           	
  1893  07B2                     l3940:	
  1894                           ;MPLAB3.c: 280: sprintf(serial_buffer,"T%05dV%05dC%05dL%05d%c%c",light/10,temperature,vo
                                 ltage,current/10,0xA,0xD);
  1895  07B2  300A               	movlw	low(0Ah)
  1896  07B3  00F0               	movwf	(?___lwdiv)
  1897  07B4  3000               	movlw	high(0Ah)
  1898  07B5  00F1               	movwf	((?___lwdiv))+1
  1899  07B6  0845               	movf	(_current+1),w
  1900  07B7  01F3               	clrf	1+(?___lwdiv)+02h
  1901  07B8  07F3               	addwf	1+(?___lwdiv)+02h
  1902  07B9  0844               	movf	(_current),w
  1903  07BA  01F2               	clrf	0+(?___lwdiv)+02h
  1904  07BB  07F2               	addwf	0+(?___lwdiv)+02h
  1905                           
  1906  07BC  120A  158A  23EC   	fcall	___lwdiv
              120A  118A         
  1907  07C1  0871               	movf	(1+(?___lwdiv)),w
  1908  07C2  1283               	bcf	status, 5	;RP0=0, select bank0
  1909  07C3  1303               	bcf	status, 6	;RP1=0, select bank0
  1910  07C4  01C1               	clrf	(_main$1696+1)
  1911  07C5  07C1               	addwf	(_main$1696+1)
  1912  07C6  0870               	movf	(0+(?___lwdiv)),w
  1913  07C7  01C0               	clrf	(_main$1696)
  1914  07C8  07C0               	addwf	(_main$1696)
  1915                           
  1916                           	
  1917  07C9                     l3942:	
  1918                           ;MPLAB3.c: 280: sprintf(serial_buffer,"T%05dV%05dC%05dL%05d%c%c",light/10,temperature,vo
                                 ltage,current/10,0xA,0xD);
  1919  07C9  300B               	movlw	((STR_1-__stringbase))&0ffh
  1920  07CA  00BD               	movwf	(??_main+0)+0
  1921  07CB  083D               	movf	(??_main+0)+0,w
  1922  07CC  00A0               	movwf	(?_sprintf)
  1923  07CD  083F               	movf	(_main$1695+1),w
  1924  07CE  01A2               	clrf	1+(?_sprintf)+01h
  1925  07CF  07A2               	addwf	1+(?_sprintf)+01h
  1926  07D0  083E               	movf	(_main$1695),w
  1927  07D1  01A1               	clrf	0+(?_sprintf)+01h
  1928  07D2  07A1               	addwf	0+(?_sprintf)+01h
  1929                           
  1930  07D3  084D               	movf	(_temperature+1),w
  1931  07D4  01A4               	clrf	1+(?_sprintf)+03h
  1932  07D5  07A4               	addwf	1+(?_sprintf)+03h
  1933  07D6  084C               	movf	(_temperature),w
  1934  07D7  01A3               	clrf	0+(?_sprintf)+03h
  1935  07D8  07A3               	addwf	0+(?_sprintf)+03h
  1936                           
  1937  07D9  084F               	movf	(_voltage+1),w
  1938  07DA  01A6               	clrf	1+(?_sprintf)+05h
  1939  07DB  07A6               	addwf	1+(?_sprintf)+05h
  1940  07DC  084E               	movf	(_voltage),w
  1941  07DD  01A5               	clrf	0+(?_sprintf)+05h
  1942  07DE  07A5               	addwf	0+(?_sprintf)+05h
  1943                           
  1944  07DF  0841               	movf	(_main$1696+1),w
  1945  07E0  01A8               	clrf	1+(?_sprintf)+07h
  1946  07E1  07A8               	addwf	1+(?_sprintf)+07h
  1947  07E2  0840               	movf	(_main$1696),w
  1948  07E3  01A7               	clrf	0+(?_sprintf)+07h
  1949  07E4  07A7               	addwf	0+(?_sprintf)+07h
  1950                           
  1951  07E5  300A               	movlw	low(0Ah)
  1952  07E6  00A9               	movwf	0+(?_sprintf)+09h
  1953  07E7  3000               	movlw	high(0Ah)
  1954  07E8  00AA               	movwf	(0+(?_sprintf)+09h)+1
  1955  07E9  300D               	movlw	low(0Dh)
  1956  07EA  00AB               	movwf	0+(?_sprintf)+0Bh
  1957  07EB  3000               	movlw	high(0Dh)
  1958  07EC  00AC               	movwf	(0+(?_sprintf)+0Bh)+1
  1959  07ED  30A0               	movlw	(_serial_buffer)&0ffh
  1960  07EE  120A  118A  21B1   	fcall	_sprintf
              120A  118A         
  1961                           	line	288
  1962                           	
  1963  07F3                     l3944:	
  1964                           ;MPLAB3.c: 288: mputs(serial_buffer);
  1965  07F3  30A0               	movlw	(_serial_buffer)&0ffh
  1966  07F4  120A  118A  2003   	fcall	_mputs
              120A  118A         
  1967  07F9  2D1F               	goto	l3840
  1968                           	line	290
  1969                           	
  1970  07FA                     l737:	
  1971                           	line	171
  1972  07FA  2D1F               	goto	l3840
  1973                           	
  1974  07FB                     l738:	
  1975  07FB  2C64               	goto	l3778
  1976                           	line	292
  1977                           	
  1978  07FC                     l739:	
  1979                           	line	118
  1980  07FC  2C64               	goto	l3778
  1981                           	
  1982  07FD                     l740:	
  1983                           	line	294
  1984                           	
  1985  07FD                     l741:	
  1986                           	global	start
  1987  07FD  120A  118A  2800   	ljmp	start
  1988                           	opt stack 0
  1989                           GLOBAL	__end_of_main
  1990  0800                     	__end_of_main:
  1991 ;; =============== function _main ends ============
  1992                           
  1993                           	signat	_main,88
  1994                           	global	_dis_num
  1995                           psect	text457,local,class=CODE,delta=2
  1996                           global __ptext457
  1997  0E02                     __ptext457:
  1998                           
  1999 ;; *************** function _dis_num *****************
  2000 ;; Defined at:
  2001 ;;		line 358 in file "C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  data            4    0[BANK0 ] unsigned long 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  tenth           1    9[BANK0 ] unsigned char 
  2006 ;;  hundred         1    8[BANK0 ] unsigned char 
  2007 ;;  thousand        1    7[BANK0 ] unsigned char 
  2008 ;;  ten_thousand    1    6[BANK0 ] unsigned char 
  2009 ;;  hundred_thou    1    5[BANK0 ] unsigned char 
  2010 ;; Return value:  Size  Location     Type
  2011 ;;		None               void
  2012 ;; Registers used:
  2013 ;;		wreg, status,2, status,0, pclath, cstack
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2019 ;;      Params:         0       4       0       0       0
  2020 ;;      Locals:         0       5       0       0       0
  2021 ;;      Temps:          0       1       0       0       0
  2022 ;;      Totals:         0      10       0       0       0
  2023 ;;Total ram usage:       10 bytes
  2024 ;; Hardware stack levels used:    1
  2025 ;; Hardware stack levels required when called:    3
  2026 ;; This function calls:
  2027 ;;		___lldiv
  2028 ;;		___llmod
  2029 ;;		_send_char
  2030 ;; This function is called by:
  2031 ;;		_main
  2032 ;;		_increment
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           psect	text457
  2036                           	file	"C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  2037                           	line	358
  2038                           	global	__size_of_dis_num
  2039  01FE                     	__size_of_dis_num	equ	__end_of_dis_num-_dis_num
  2040                           	
  2041  0E02                     _dis_num:	
  2042                           	opt	stack 4
  2043                           ; Regs used in _dis_num: [wreg+status,2+status,0+pclath+cstack]
  2044                           	line	365
  2045                           	
  2046  0E02                     l3718:	
  2047                           ;MPLAB3.c: 359: unsigned char hundred_thousand;
  2048                           ;MPLAB3.c: 360: unsigned char ten_thousand;
  2049                           ;MPLAB3.c: 361: unsigned char thousand;
  2050                           ;MPLAB3.c: 362: unsigned char hundred;
  2051                           ;MPLAB3.c: 363: unsigned char tenth;
  2052                           ;MPLAB3.c: 365: hundred_thousand = data/100000;
  2053  0E02  3000               	movlw	0
  2054  0E03  00F3               	movwf	(?___lldiv+3)
  2055  0E04  3001               	movlw	01h
  2056  0E05  00F2               	movwf	(?___lldiv+2)
  2057  0E06  3086               	movlw	086h
  2058  0E07  00F1               	movwf	(?___lldiv+1)
  2059  0E08  30A0               	movlw	0A0h
  2060  0E09  00F0               	movwf	(?___lldiv)
  2061                           
  2062  0E0A  1283               	bcf	status, 5	;RP0=0, select bank0
  2063  0E0B  1303               	bcf	status, 6	;RP1=0, select bank0
  2064  0E0C  0823               	movf	(dis_num@data+3),w
  2065  0E0D  00F7               	movwf	3+(?___lldiv)+04h
  2066  0E0E  0822               	movf	(dis_num@data+2),w
  2067  0E0F  00F6               	movwf	2+(?___lldiv)+04h
  2068  0E10  0821               	movf	(dis_num@data+1),w
  2069  0E11  00F5               	movwf	1+(?___lldiv)+04h
  2070  0E12  0820               	movf	(dis_num@data),w
  2071  0E13  00F4               	movwf	0+(?___lldiv)+04h
  2072                           
  2073  0E14  120A  158A  2496   	fcall	___lldiv
              120A  158A         
  2074  0E19  0870               	movf	0+(((0+(?___lldiv)))),w
  2075  0E1A  1283               	bcf	status, 5	;RP0=0, select bank0
  2076  0E1B  1303               	bcf	status, 6	;RP1=0, select bank0
  2077  0E1C  00A4               	movwf	(??_dis_num+0)+0
  2078  0E1D  0824               	movf	(??_dis_num+0)+0,w
  2079  0E1E  00A5               	movwf	(dis_num@hundred_thousand)
  2080                           	line	366
  2081                           ;MPLAB3.c: 366: data = data % 100000;
  2082  0E1F  3000               	movlw	0
  2083  0E20  00F3               	movwf	(?___llmod+3)
  2084  0E21  3001               	movlw	01h
  2085  0E22  00F2               	movwf	(?___llmod+2)
  2086  0E23  3086               	movlw	086h
  2087  0E24  00F1               	movwf	(?___llmod+1)
  2088  0E25  30A0               	movlw	0A0h
  2089  0E26  00F0               	movwf	(?___llmod)
  2090                           
  2091  0E27  0823               	movf	(dis_num@data+3),w
  2092  0E28  00F7               	movwf	3+(?___llmod)+04h
  2093  0E29  0822               	movf	(dis_num@data+2),w
  2094  0E2A  00F6               	movwf	2+(?___llmod)+04h
  2095  0E2B  0821               	movf	(dis_num@data+1),w
  2096  0E2C  00F5               	movwf	1+(?___llmod)+04h
  2097  0E2D  0820               	movf	(dis_num@data),w
  2098  0E2E  00F4               	movwf	0+(?___llmod)+04h
  2099                           
  2100  0E2F  120A  158A  243A   	fcall	___llmod
              120A  158A         
  2101  0E34  0873               	movf	(3+(?___llmod)),w
  2102  0E35  1283               	bcf	status, 5	;RP0=0, select bank0
  2103  0E36  1303               	bcf	status, 6	;RP1=0, select bank0
  2104  0E37  00A3               	movwf	(dis_num@data+3)
  2105  0E38  0872               	movf	(2+(?___llmod)),w
  2106  0E39  00A2               	movwf	(dis_num@data+2)
  2107  0E3A  0871               	movf	(1+(?___llmod)),w
  2108  0E3B  00A1               	movwf	(dis_num@data+1)
  2109  0E3C  0870               	movf	(0+(?___llmod)),w
  2110  0E3D  00A0               	movwf	(dis_num@data)
  2111                           
  2112                           	line	367
  2113                           ;MPLAB3.c: 367: ten_thousand = data/10000;
  2114  0E3E  3000               	movlw	0
  2115  0E3F  00F3               	movwf	(?___lldiv+3)
  2116  0E40  3000               	movlw	0
  2117  0E41  00F2               	movwf	(?___lldiv+2)
  2118  0E42  3027               	movlw	027h
  2119  0E43  00F1               	movwf	(?___lldiv+1)
  2120  0E44  3010               	movlw	010h
  2121  0E45  00F0               	movwf	(?___lldiv)
  2122                           
  2123  0E46  0823               	movf	(dis_num@data+3),w
  2124  0E47  00F7               	movwf	3+(?___lldiv)+04h
  2125  0E48  0822               	movf	(dis_num@data+2),w
  2126  0E49  00F6               	movwf	2+(?___lldiv)+04h
  2127  0E4A  0821               	movf	(dis_num@data+1),w
  2128  0E4B  00F5               	movwf	1+(?___lldiv)+04h
  2129  0E4C  0820               	movf	(dis_num@data),w
  2130  0E4D  00F4               	movwf	0+(?___lldiv)+04h
  2131                           
  2132  0E4E  120A  158A  2496   	fcall	___lldiv
              120A  158A         
  2133  0E53  0870               	movf	0+(((0+(?___lldiv)))),w
  2134  0E54  1283               	bcf	status, 5	;RP0=0, select bank0
  2135  0E55  1303               	bcf	status, 6	;RP1=0, select bank0
  2136  0E56  00A4               	movwf	(??_dis_num+0)+0
  2137  0E57  0824               	movf	(??_dis_num+0)+0,w
  2138  0E58  00A6               	movwf	(dis_num@ten_thousand)
  2139                           	line	368
  2140                           ;MPLAB3.c: 368: data = data % 10000;
  2141  0E59  3000               	movlw	0
  2142  0E5A  00F3               	movwf	(?___llmod+3)
  2143  0E5B  3000               	movlw	0
  2144  0E5C  00F2               	movwf	(?___llmod+2)
  2145  0E5D  3027               	movlw	027h
  2146  0E5E  00F1               	movwf	(?___llmod+1)
  2147  0E5F  3010               	movlw	010h
  2148  0E60  00F0               	movwf	(?___llmod)
  2149                           
  2150  0E61  0823               	movf	(dis_num@data+3),w
  2151  0E62  00F7               	movwf	3+(?___llmod)+04h
  2152  0E63  0822               	movf	(dis_num@data+2),w
  2153  0E64  00F6               	movwf	2+(?___llmod)+04h
  2154  0E65  0821               	movf	(dis_num@data+1),w
  2155  0E66  00F5               	movwf	1+(?___llmod)+04h
  2156  0E67  0820               	movf	(dis_num@data),w
  2157  0E68  00F4               	movwf	0+(?___llmod)+04h
  2158                           
  2159  0E69  120A  158A  243A   	fcall	___llmod
              120A  158A         
  2160  0E6E  0873               	movf	(3+(?___llmod)),w
  2161  0E6F  1283               	bcf	status, 5	;RP0=0, select bank0
  2162  0E70  1303               	bcf	status, 6	;RP1=0, select bank0
  2163  0E71  00A3               	movwf	(dis_num@data+3)
  2164  0E72  0872               	movf	(2+(?___llmod)),w
  2165  0E73  00A2               	movwf	(dis_num@data+2)
  2166  0E74  0871               	movf	(1+(?___llmod)),w
  2167  0E75  00A1               	movwf	(dis_num@data+1)
  2168  0E76  0870               	movf	(0+(?___llmod)),w
  2169  0E77  00A0               	movwf	(dis_num@data)
  2170                           
  2171                           	line	369
  2172                           ;MPLAB3.c: 369: thousand = data / 1000;
  2173  0E78  3000               	movlw	0
  2174  0E79  00F3               	movwf	(?___lldiv+3)
  2175  0E7A  3000               	movlw	0
  2176  0E7B  00F2               	movwf	(?___lldiv+2)
  2177  0E7C  3003               	movlw	03h
  2178  0E7D  00F1               	movwf	(?___lldiv+1)
  2179  0E7E  30E8               	movlw	0E8h
  2180  0E7F  00F0               	movwf	(?___lldiv)
  2181                           
  2182  0E80  0823               	movf	(dis_num@data+3),w
  2183  0E81  00F7               	movwf	3+(?___lldiv)+04h
  2184  0E82  0822               	movf	(dis_num@data+2),w
  2185  0E83  00F6               	movwf	2+(?___lldiv)+04h
  2186  0E84  0821               	movf	(dis_num@data+1),w
  2187  0E85  00F5               	movwf	1+(?___lldiv)+04h
  2188  0E86  0820               	movf	(dis_num@data),w
  2189  0E87  00F4               	movwf	0+(?___lldiv)+04h
  2190                           
  2191  0E88  120A  158A  2496   	fcall	___lldiv
              120A  158A         
  2192  0E8D  0870               	movf	0+(((0+(?___lldiv)))),w
  2193  0E8E  1283               	bcf	status, 5	;RP0=0, select bank0
  2194  0E8F  1303               	bcf	status, 6	;RP1=0, select bank0
  2195  0E90  00A4               	movwf	(??_dis_num+0)+0
  2196  0E91  0824               	movf	(??_dis_num+0)+0,w
  2197  0E92  00A7               	movwf	(dis_num@thousand)
  2198                           	line	370
  2199                           ;MPLAB3.c: 370: data = data % 1000;
  2200  0E93  3000               	movlw	0
  2201  0E94  00F3               	movwf	(?___llmod+3)
  2202  0E95  3000               	movlw	0
  2203  0E96  00F2               	movwf	(?___llmod+2)
  2204  0E97  3003               	movlw	03h
  2205  0E98  00F1               	movwf	(?___llmod+1)
  2206  0E99  30E8               	movlw	0E8h
  2207  0E9A  00F0               	movwf	(?___llmod)
  2208                           
  2209  0E9B  0823               	movf	(dis_num@data+3),w
  2210  0E9C  00F7               	movwf	3+(?___llmod)+04h
  2211  0E9D  0822               	movf	(dis_num@data+2),w
  2212  0E9E  00F6               	movwf	2+(?___llmod)+04h
  2213  0E9F  0821               	movf	(dis_num@data+1),w
  2214  0EA0  00F5               	movwf	1+(?___llmod)+04h
  2215  0EA1  0820               	movf	(dis_num@data),w
  2216  0EA2  00F4               	movwf	0+(?___llmod)+04h
  2217                           
  2218  0EA3  120A  158A  243A   	fcall	___llmod
              120A  158A         
  2219  0EA8  0873               	movf	(3+(?___llmod)),w
  2220  0EA9  1283               	bcf	status, 5	;RP0=0, select bank0
  2221  0EAA  1303               	bcf	status, 6	;RP1=0, select bank0
  2222  0EAB  00A3               	movwf	(dis_num@data+3)
  2223  0EAC  0872               	movf	(2+(?___llmod)),w
  2224  0EAD  00A2               	movwf	(dis_num@data+2)
  2225  0EAE  0871               	movf	(1+(?___llmod)),w
  2226  0EAF  00A1               	movwf	(dis_num@data+1)
  2227  0EB0  0870               	movf	(0+(?___llmod)),w
  2228  0EB1  00A0               	movwf	(dis_num@data)
  2229                           
  2230                           	line	371
  2231                           ;MPLAB3.c: 371: hundred = data / 100;
  2232  0EB2  3000               	movlw	0
  2233  0EB3  00F3               	movwf	(?___lldiv+3)
  2234  0EB4  3000               	movlw	0
  2235  0EB5  00F2               	movwf	(?___lldiv+2)
  2236  0EB6  3000               	movlw	0
  2237  0EB7  00F1               	movwf	(?___lldiv+1)
  2238  0EB8  3064               	movlw	064h
  2239  0EB9  00F0               	movwf	(?___lldiv)
  2240                           
  2241  0EBA  0823               	movf	(dis_num@data+3),w
  2242  0EBB  00F7               	movwf	3+(?___lldiv)+04h
  2243  0EBC  0822               	movf	(dis_num@data+2),w
  2244  0EBD  00F6               	movwf	2+(?___lldiv)+04h
  2245  0EBE  0821               	movf	(dis_num@data+1),w
  2246  0EBF  00F5               	movwf	1+(?___lldiv)+04h
  2247  0EC0  0820               	movf	(dis_num@data),w
  2248  0EC1  00F4               	movwf	0+(?___lldiv)+04h
  2249                           
  2250  0EC2  120A  158A  2496   	fcall	___lldiv
              120A  158A         
  2251  0EC7  0870               	movf	0+(((0+(?___lldiv)))),w
  2252  0EC8  1283               	bcf	status, 5	;RP0=0, select bank0
  2253  0EC9  1303               	bcf	status, 6	;RP1=0, select bank0
  2254  0ECA  00A4               	movwf	(??_dis_num+0)+0
  2255  0ECB  0824               	movf	(??_dis_num+0)+0,w
  2256  0ECC  00A8               	movwf	(dis_num@hundred)
  2257                           	line	372
  2258                           ;MPLAB3.c: 372: data = data % 100;
  2259  0ECD  3000               	movlw	0
  2260  0ECE  00F3               	movwf	(?___llmod+3)
  2261  0ECF  3000               	movlw	0
  2262  0ED0  00F2               	movwf	(?___llmod+2)
  2263  0ED1  3000               	movlw	0
  2264  0ED2  00F1               	movwf	(?___llmod+1)
  2265  0ED3  3064               	movlw	064h
  2266  0ED4  00F0               	movwf	(?___llmod)
  2267                           
  2268  0ED5  0823               	movf	(dis_num@data+3),w
  2269  0ED6  00F7               	movwf	3+(?___llmod)+04h
  2270  0ED7  0822               	movf	(dis_num@data+2),w
  2271  0ED8  00F6               	movwf	2+(?___llmod)+04h
  2272  0ED9  0821               	movf	(dis_num@data+1),w
  2273  0EDA  00F5               	movwf	1+(?___llmod)+04h
  2274  0EDB  0820               	movf	(dis_num@data),w
  2275  0EDC  00F4               	movwf	0+(?___llmod)+04h
  2276                           
  2277  0EDD  120A  158A  243A   	fcall	___llmod
              120A  158A         
  2278  0EE2  0873               	movf	(3+(?___llmod)),w
  2279  0EE3  1283               	bcf	status, 5	;RP0=0, select bank0
  2280  0EE4  1303               	bcf	status, 6	;RP1=0, select bank0
  2281  0EE5  00A3               	movwf	(dis_num@data+3)
  2282  0EE6  0872               	movf	(2+(?___llmod)),w
  2283  0EE7  00A2               	movwf	(dis_num@data+2)
  2284  0EE8  0871               	movf	(1+(?___llmod)),w
  2285  0EE9  00A1               	movwf	(dis_num@data+1)
  2286  0EEA  0870               	movf	(0+(?___llmod)),w
  2287  0EEB  00A0               	movwf	(dis_num@data)
  2288                           
  2289                           	line	373
  2290                           ;MPLAB3.c: 373: tenth = data / 10;
  2291  0EEC  3000               	movlw	0
  2292  0EED  00F3               	movwf	(?___lldiv+3)
  2293  0EEE  3000               	movlw	0
  2294  0EEF  00F2               	movwf	(?___lldiv+2)
  2295  0EF0  3000               	movlw	0
  2296  0EF1  00F1               	movwf	(?___lldiv+1)
  2297  0EF2  300A               	movlw	0Ah
  2298  0EF3  00F0               	movwf	(?___lldiv)
  2299                           
  2300  0EF4  0823               	movf	(dis_num@data+3),w
  2301  0EF5  00F7               	movwf	3+(?___lldiv)+04h
  2302  0EF6  0822               	movf	(dis_num@data+2),w
  2303  0EF7  00F6               	movwf	2+(?___lldiv)+04h
  2304  0EF8  0821               	movf	(dis_num@data+1),w
  2305  0EF9  00F5               	movwf	1+(?___lldiv)+04h
  2306  0EFA  0820               	movf	(dis_num@data),w
  2307  0EFB  00F4               	movwf	0+(?___lldiv)+04h
  2308                           
  2309  0EFC  120A  158A  2496   	fcall	___lldiv
              120A  158A         
  2310  0F01  0870               	movf	0+(((0+(?___lldiv)))),w
  2311  0F02  1283               	bcf	status, 5	;RP0=0, select bank0
  2312  0F03  1303               	bcf	status, 6	;RP1=0, select bank0
  2313  0F04  00A4               	movwf	(??_dis_num+0)+0
  2314  0F05  0824               	movf	(??_dis_num+0)+0,w
  2315  0F06  00A9               	movwf	(dis_num@tenth)
  2316                           	line	374
  2317                           ;MPLAB3.c: 374: data = data % 10;
  2318  0F07  3000               	movlw	0
  2319  0F08  00F3               	movwf	(?___llmod+3)
  2320  0F09  3000               	movlw	0
  2321  0F0A  00F2               	movwf	(?___llmod+2)
  2322  0F0B  3000               	movlw	0
  2323  0F0C  00F1               	movwf	(?___llmod+1)
  2324  0F0D  300A               	movlw	0Ah
  2325  0F0E  00F0               	movwf	(?___llmod)
  2326                           
  2327  0F0F  0823               	movf	(dis_num@data+3),w
  2328  0F10  00F7               	movwf	3+(?___llmod)+04h
  2329  0F11  0822               	movf	(dis_num@data+2),w
  2330  0F12  00F6               	movwf	2+(?___llmod)+04h
  2331  0F13  0821               	movf	(dis_num@data+1),w
  2332  0F14  00F5               	movwf	1+(?___llmod)+04h
  2333  0F15  0820               	movf	(dis_num@data),w
  2334  0F16  00F4               	movwf	0+(?___llmod)+04h
  2335                           
  2336  0F17  120A  158A  243A   	fcall	___llmod
              120A  158A         
  2337  0F1C  0873               	movf	(3+(?___llmod)),w
  2338  0F1D  1283               	bcf	status, 5	;RP0=0, select bank0
  2339  0F1E  1303               	bcf	status, 6	;RP1=0, select bank0
  2340  0F1F  00A3               	movwf	(dis_num@data+3)
  2341  0F20  0872               	movf	(2+(?___llmod)),w
  2342  0F21  00A2               	movwf	(dis_num@data+2)
  2343  0F22  0871               	movf	(1+(?___llmod)),w
  2344  0F23  00A1               	movwf	(dis_num@data+1)
  2345  0F24  0870               	movf	(0+(?___llmod)),w
  2346  0F25  00A0               	movwf	(dis_num@data)
  2347                           
  2348                           	line	376
  2349                           	
  2350  0F26                     l3720:	
  2351                           ;MPLAB3.c: 376: if(hundred_thousand>0)
  2352  0F26  0825               	movf	(dis_num@hundred_thousand),w
  2353  0F27  1D03               	skipz
  2354  0F28  2F2A               	goto	u4030
  2355  0F29  2F5F               	goto	l3724
  2356  0F2A                     u4030:
  2357                           	line	378
  2358                           	
  2359  0F2A                     l3722:	
  2360                           ;MPLAB3.c: 377: {
  2361                           ;MPLAB3.c: 378: send_char(hundred_thousand + 0x30);
  2362  0F2A  0825               	movf	(dis_num@hundred_thousand),w
  2363  0F2B  3E30               	addlw	030h
  2364  0F2C  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2365                           	line	379
  2366                           ;MPLAB3.c: 379: send_char(ten_thousand + 0x30);
  2367  0F31  1283               	bcf	status, 5	;RP0=0, select bank0
  2368  0F32  1303               	bcf	status, 6	;RP1=0, select bank0
  2369  0F33  0826               	movf	(dis_num@ten_thousand),w
  2370  0F34  3E30               	addlw	030h
  2371  0F35  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2372                           	line	380
  2373                           ;MPLAB3.c: 380: send_char(thousand + 0x30);
  2374  0F3A  1283               	bcf	status, 5	;RP0=0, select bank0
  2375  0F3B  1303               	bcf	status, 6	;RP1=0, select bank0
  2376  0F3C  0827               	movf	(dis_num@thousand),w
  2377  0F3D  3E30               	addlw	030h
  2378  0F3E  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2379                           	line	381
  2380                           ;MPLAB3.c: 381: send_char(hundred + 0x30);
  2381  0F43  1283               	bcf	status, 5	;RP0=0, select bank0
  2382  0F44  1303               	bcf	status, 6	;RP1=0, select bank0
  2383  0F45  0828               	movf	(dis_num@hundred),w
  2384  0F46  3E30               	addlw	030h
  2385  0F47  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2386                           	line	382
  2387                           ;MPLAB3.c: 382: send_char(tenth + 0x30);
  2388  0F4C  1283               	bcf	status, 5	;RP0=0, select bank0
  2389  0F4D  1303               	bcf	status, 6	;RP1=0, select bank0
  2390  0F4E  0829               	movf	(dis_num@tenth),w
  2391  0F4F  3E30               	addlw	030h
  2392  0F50  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2393                           	line	383
  2394                           ;MPLAB3.c: 383: send_char(data + 0x30);
  2395  0F55  1283               	bcf	status, 5	;RP0=0, select bank0
  2396  0F56  1303               	bcf	status, 6	;RP1=0, select bank0
  2397  0F57  0820               	movf	(dis_num@data),w
  2398  0F58  3E30               	addlw	030h
  2399  0F59  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2400                           	line	384
  2401                           ;MPLAB3.c: 384: }
  2402  0F5E  2FFF               	goto	l779
  2403                           	line	386
  2404                           	
  2405  0F5F                     l769:	
  2406                           	
  2407  0F5F                     l3724:	
  2408                           ;MPLAB3.c: 386: else if(ten_thousand>0)
  2409  0F5F  1283               	bcf	status, 5	;RP0=0, select bank0
  2410  0F60  1303               	bcf	status, 6	;RP1=0, select bank0
  2411  0F61  0826               	movf	(dis_num@ten_thousand),w
  2412  0F62  1D03               	skipz
  2413  0F63  2F65               	goto	u4040
  2414  0F64  2F91               	goto	l3728
  2415  0F65                     u4040:
  2416                           	line	388
  2417                           	
  2418  0F65                     l3726:	
  2419                           ;MPLAB3.c: 387: {
  2420                           ;MPLAB3.c: 388: send_char(ten_thousand + 0x30);
  2421  0F65  0826               	movf	(dis_num@ten_thousand),w
  2422  0F66  3E30               	addlw	030h
  2423  0F67  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2424                           	line	389
  2425                           ;MPLAB3.c: 389: send_char(thousand + 0x30);
  2426  0F6C  1283               	bcf	status, 5	;RP0=0, select bank0
  2427  0F6D  1303               	bcf	status, 6	;RP1=0, select bank0
  2428  0F6E  0827               	movf	(dis_num@thousand),w
  2429  0F6F  3E30               	addlw	030h
  2430  0F70  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2431                           	line	390
  2432                           ;MPLAB3.c: 390: send_char(hundred + 0x30);
  2433  0F75  1283               	bcf	status, 5	;RP0=0, select bank0
  2434  0F76  1303               	bcf	status, 6	;RP1=0, select bank0
  2435  0F77  0828               	movf	(dis_num@hundred),w
  2436  0F78  3E30               	addlw	030h
  2437  0F79  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2438                           	line	391
  2439                           ;MPLAB3.c: 391: send_char(tenth + 0x30);
  2440  0F7E  1283               	bcf	status, 5	;RP0=0, select bank0
  2441  0F7F  1303               	bcf	status, 6	;RP1=0, select bank0
  2442  0F80  0829               	movf	(dis_num@tenth),w
  2443  0F81  3E30               	addlw	030h
  2444  0F82  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2445                           	line	392
  2446                           ;MPLAB3.c: 392: send_char(data + 0x30);
  2447  0F87  1283               	bcf	status, 5	;RP0=0, select bank0
  2448  0F88  1303               	bcf	status, 6	;RP1=0, select bank0
  2449  0F89  0820               	movf	(dis_num@data),w
  2450  0F8A  3E30               	addlw	030h
  2451  0F8B  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2452                           	line	393
  2453                           ;MPLAB3.c: 393: }
  2454  0F90  2FFF               	goto	l779
  2455                           	line	394
  2456                           	
  2457  0F91                     l771:	
  2458                           	
  2459  0F91                     l3728:	
  2460                           ;MPLAB3.c: 394: else if(thousand>0)
  2461  0F91  1283               	bcf	status, 5	;RP0=0, select bank0
  2462  0F92  1303               	bcf	status, 6	;RP1=0, select bank0
  2463  0F93  0827               	movf	(dis_num@thousand),w
  2464  0F94  1D03               	skipz
  2465  0F95  2F97               	goto	u4050
  2466  0F96  2FBA               	goto	l3732
  2467  0F97                     u4050:
  2468                           	line	396
  2469                           	
  2470  0F97                     l3730:	
  2471                           ;MPLAB3.c: 395: {
  2472                           ;MPLAB3.c: 396: send_char(thousand + 0x30);
  2473  0F97  0827               	movf	(dis_num@thousand),w
  2474  0F98  3E30               	addlw	030h
  2475  0F99  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2476                           	line	397
  2477                           ;MPLAB3.c: 397: send_char(hundred + 0x30);
  2478  0F9E  1283               	bcf	status, 5	;RP0=0, select bank0
  2479  0F9F  1303               	bcf	status, 6	;RP1=0, select bank0
  2480  0FA0  0828               	movf	(dis_num@hundred),w
  2481  0FA1  3E30               	addlw	030h
  2482  0FA2  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2483                           	line	398
  2484                           ;MPLAB3.c: 398: send_char(tenth + 0x30);
  2485  0FA7  1283               	bcf	status, 5	;RP0=0, select bank0
  2486  0FA8  1303               	bcf	status, 6	;RP1=0, select bank0
  2487  0FA9  0829               	movf	(dis_num@tenth),w
  2488  0FAA  3E30               	addlw	030h
  2489  0FAB  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2490                           	line	399
  2491                           ;MPLAB3.c: 399: send_char(data + 0x30);
  2492  0FB0  1283               	bcf	status, 5	;RP0=0, select bank0
  2493  0FB1  1303               	bcf	status, 6	;RP1=0, select bank0
  2494  0FB2  0820               	movf	(dis_num@data),w
  2495  0FB3  3E30               	addlw	030h
  2496  0FB4  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2497                           	line	400
  2498                           ;MPLAB3.c: 400: }
  2499  0FB9  2FFF               	goto	l779
  2500                           	line	401
  2501                           	
  2502  0FBA                     l773:	
  2503                           	
  2504  0FBA                     l3732:	
  2505                           ;MPLAB3.c: 401: else if(hundred>0)
  2506  0FBA  1283               	bcf	status, 5	;RP0=0, select bank0
  2507  0FBB  1303               	bcf	status, 6	;RP1=0, select bank0
  2508  0FBC  0828               	movf	(dis_num@hundred),w
  2509  0FBD  1D03               	skipz
  2510  0FBE  2FC0               	goto	u4060
  2511  0FBF  2FDA               	goto	l3736
  2512  0FC0                     u4060:
  2513                           	line	403
  2514                           	
  2515  0FC0                     l3734:	
  2516                           ;MPLAB3.c: 402: {
  2517                           ;MPLAB3.c: 403: send_char(hundred + 0x30);
  2518  0FC0  0828               	movf	(dis_num@hundred),w
  2519  0FC1  3E30               	addlw	030h
  2520  0FC2  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2521                           	line	404
  2522                           ;MPLAB3.c: 404: send_char(tenth + 0x30);
  2523  0FC7  1283               	bcf	status, 5	;RP0=0, select bank0
  2524  0FC8  1303               	bcf	status, 6	;RP1=0, select bank0
  2525  0FC9  0829               	movf	(dis_num@tenth),w
  2526  0FCA  3E30               	addlw	030h
  2527  0FCB  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2528                           	line	405
  2529                           ;MPLAB3.c: 405: send_char(data + 0x30);
  2530  0FD0  1283               	bcf	status, 5	;RP0=0, select bank0
  2531  0FD1  1303               	bcf	status, 6	;RP1=0, select bank0
  2532  0FD2  0820               	movf	(dis_num@data),w
  2533  0FD3  3E30               	addlw	030h
  2534  0FD4  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2535                           	line	406
  2536                           ;MPLAB3.c: 406: }
  2537  0FD9  2FFF               	goto	l779
  2538                           	line	407
  2539                           	
  2540  0FDA                     l775:	
  2541                           	
  2542  0FDA                     l3736:	
  2543                           ;MPLAB3.c: 407: else if(tenth>0)
  2544  0FDA  1283               	bcf	status, 5	;RP0=0, select bank0
  2545  0FDB  1303               	bcf	status, 6	;RP1=0, select bank0
  2546  0FDC  0829               	movf	(dis_num@tenth),w
  2547  0FDD  1D03               	skipz
  2548  0FDE  2FE0               	goto	u4070
  2549  0FDF  2FF1               	goto	l3740
  2550  0FE0                     u4070:
  2551                           	line	409
  2552                           	
  2553  0FE0                     l3738:	
  2554                           ;MPLAB3.c: 408: {
  2555                           ;MPLAB3.c: 409: send_char(tenth + 0x30);
  2556  0FE0  0829               	movf	(dis_num@tenth),w
  2557  0FE1  3E30               	addlw	030h
  2558  0FE2  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2559                           	line	410
  2560                           ;MPLAB3.c: 410: send_char(data + 0x30);
  2561  0FE7  1283               	bcf	status, 5	;RP0=0, select bank0
  2562  0FE8  1303               	bcf	status, 6	;RP1=0, select bank0
  2563  0FE9  0820               	movf	(dis_num@data),w
  2564  0FEA  3E30               	addlw	030h
  2565  0FEB  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2566                           	line	411
  2567                           ;MPLAB3.c: 411: }
  2568  0FF0  2FFF               	goto	l779
  2569                           	line	412
  2570                           	
  2571  0FF1                     l777:	
  2572                           	
  2573  0FF1                     l3740:	
  2574                           ;MPLAB3.c: 412: else send_char(data + 0x30);
  2575  0FF1  1283               	bcf	status, 5	;RP0=0, select bank0
  2576  0FF2  1303               	bcf	status, 6	;RP1=0, select bank0
  2577  0FF3  0820               	movf	(dis_num@data),w
  2578  0FF4  3E30               	addlw	030h
  2579  0FF5  120A  158A  232D   	fcall	_send_char
              120A  158A         
  2580  0FFA  2FFF               	goto	l779
  2581                           	
  2582  0FFB                     l778:	
  2583  0FFB  2FFF               	goto	l779
  2584                           	
  2585  0FFC                     l776:	
  2586  0FFC  2FFF               	goto	l779
  2587                           	
  2588  0FFD                     l774:	
  2589  0FFD  2FFF               	goto	l779
  2590                           	
  2591  0FFE                     l772:	
  2592  0FFE  2FFF               	goto	l779
  2593                           	
  2594  0FFF                     l770:	
  2595                           	line	413
  2596                           	
  2597  0FFF                     l779:	
  2598  0FFF  0008               	return
  2599                           	opt stack 0
  2600                           GLOBAL	__end_of_dis_num
  2601  1000                     	__end_of_dis_num:
  2602 ;; =============== function _dis_num ends ============
  2603                           
  2604                           	signat	_dis_num,4216
  2605                           	global	_lcd_goto
  2606                           psect	text458,local,class=CODE,delta=2
  2607                           global __ptext458
  2608  0B61                     __ptext458:
  2609                           
  2610 ;; *************** function _lcd_goto *****************
  2611 ;; Defined at:
  2612 ;;		line 327 in file "C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  data            1    wreg     unsigned char 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  data            1    4[COMMON] unsigned char 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;		None               void
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0, pclath, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2626 ;;      Params:         0       0       0       0       0
  2627 ;;      Locals:         1       0       0       0       0
  2628 ;;      Temps:          1       0       0       0       0
  2629 ;;      Totals:         2       0       0       0       0
  2630 ;;Total ram usage:        2 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:    3
  2633 ;; This function calls:
  2634 ;;		_send_config
  2635 ;; This function is called by:
  2636 ;;		_main
  2637 ;;		_increment
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           psect	text458
  2641                           	file	"C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  2642                           	line	327
  2643                           	global	__size_of_lcd_goto
  2644  001D                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  2645                           	
  2646  0B61                     _lcd_goto:	
  2647                           	opt	stack 4
  2648                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  2649                           ;lcd_goto@data stored from wreg
  2650  0B61  00F4               	movwf	(lcd_goto@data)
  2651                           	line	328
  2652                           	
  2653  0B62                     l3710:	
  2654                           ;MPLAB3.c: 328: if(data<16)
  2655  0B62  3010               	movlw	(010h)
  2656  0B63  0274               	subwf	(lcd_goto@data),w
  2657  0B64  1803               	skipnc
  2658  0B65  2B67               	goto	u4021
  2659  0B66  2B68               	goto	u4020
  2660  0B67                     u4021:
  2661  0B67  2B70               	goto	l3714
  2662  0B68                     u4020:
  2663                           	line	330
  2664                           	
  2665  0B68                     l3712:	
  2666                           ;MPLAB3.c: 329: {
  2667                           ;MPLAB3.c: 330: send_config(0x80+data);
  2668  0B68  0874               	movf	(lcd_goto@data),w
  2669  0B69  3E80               	addlw	080h
  2670  0B6A  120A  158A  22BE   	fcall	_send_config
              120A  158A         
  2671                           	line	331
  2672                           ;MPLAB3.c: 331: }
  2673  0B6F  2B7D               	goto	l755
  2674                           	line	332
  2675                           	
  2676  0B70                     l753:	
  2677                           	line	334
  2678                           	
  2679  0B70                     l3714:	
  2680                           ;MPLAB3.c: 332: else
  2681                           ;MPLAB3.c: 333: {
  2682                           ;MPLAB3.c: 334: data=data-20;
  2683  0B70  0874               	movf	(lcd_goto@data),w
  2684  0B71  3EEC               	addlw	0ECh
  2685  0B72  00F3               	movwf	(??_lcd_goto+0)+0
  2686  0B73  0873               	movf	(??_lcd_goto+0)+0,w
  2687  0B74  00F4               	movwf	(lcd_goto@data)
  2688                           	line	335
  2689                           	
  2690  0B75                     l3716:	
  2691                           ;MPLAB3.c: 335: send_config(0xc0+data);
  2692  0B75  0874               	movf	(lcd_goto@data),w
  2693  0B76  3EC0               	addlw	0C0h
  2694  0B77  120A  158A  22BE   	fcall	_send_config
              120A  158A         
  2695  0B7C  2B7D               	goto	l755
  2696                           	line	336
  2697                           	
  2698  0B7D                     l754:	
  2699                           	line	337
  2700                           	
  2701  0B7D                     l755:	
  2702  0B7D  0008               	return
  2703                           	opt stack 0
  2704                           GLOBAL	__end_of_lcd_goto
  2705  0B7E                     	__end_of_lcd_goto:
  2706 ;; =============== function _lcd_goto ends ============
  2707                           
  2708                           	signat	_lcd_goto,4216
  2709                           	global	_mputs
  2710                           psect	text459,local,class=CODE,delta=2
  2711                           global __ptext459
  2712  0003                     __ptext459:
  2713                           
  2714 ;; *************** function _mputs *****************
  2715 ;; Defined at:
  2716 ;;		line 489 in file "C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  str             1    wreg     PTR unsigned char 
  2719 ;;		 -> serial_buffer(40), 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  str             1    4[COMMON] PTR unsigned char 
  2722 ;;		 -> serial_buffer(40), 
  2723 ;; Return value:  Size  Location     Type
  2724 ;;		None               void
  2725 ;; Registers used:
  2726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2732 ;;      Params:         0       0       0       0       0
  2733 ;;      Locals:         1       0       0       0       0
  2734 ;;      Temps:          1       0       0       0       0
  2735 ;;      Totals:         2       0       0       0       0
  2736 ;;Total ram usage:        2 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; Hardware stack levels required when called:    2
  2739 ;; This function calls:
  2740 ;;		_putch
  2741 ;; This function is called by:
  2742 ;;		_main
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           psect	text459
  2746                           	file	"C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  2747                           	line	489
  2748                           	global	__size_of_mputs
  2749  001A                     	__size_of_mputs	equ	__end_of_mputs-_mputs
  2750                           	
  2751  0003                     _mputs:	
  2752                           	opt	stack 5
  2753                           ; Regs used in _mputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2754                           ;mputs@str stored from wreg
  2755  0003  00F4               	movwf	(mputs@str)
  2756                           	line	490
  2757                           	
  2758  0004                     l3702:	
  2759                           ;MPLAB3.c: 490: while((*str)!=0)
  2760  0004  2813               	goto	l3708
  2761                           	
  2762  0005                     l809:	
  2763                           	line	492
  2764                           	
  2765  0005                     l3704:	
  2766                           ;MPLAB3.c: 491: {
  2767                           ;MPLAB3.c: 492: putch(*str);
  2768  0005  0874               	movf	(mputs@str),w
  2769  0006  0084               	movwf	fsr0
  2770  0007  1383               	bcf	status, 7	;select IRP bank0
  2771  0008  0800               	movf	indf,w
  2772  0009  120A  158A  22FE   	fcall	_putch
              120A  118A         
  2773                           	line	493
  2774                           	
  2775  000E                     l3706:	
  2776                           ;MPLAB3.c: 493: str++;
  2777  000E  3001               	movlw	(01h)
  2778  000F  00F3               	movwf	(??_mputs+0)+0
  2779  0010  0873               	movf	(??_mputs+0)+0,w
  2780  0011  07F4               	addwf	(mputs@str),f
  2781  0012  2813               	goto	l3708
  2782                           	line	494
  2783                           	
  2784  0013                     l808:	
  2785                           	line	490
  2786                           	
  2787  0013                     l3708:	
  2788  0013  0874               	movf	(mputs@str),w
  2789  0014  0084               	movwf	fsr0
  2790  0015  1383               	bcf	status, 7	;select IRP bank0
  2791  0016  0880               	movf	indf,f
  2792  0017  1D03               	skipz
  2793  0018  281A               	goto	u4011
  2794  0019  281B               	goto	u4010
  2795  001A                     u4011:
  2796  001A  2805               	goto	l3704
  2797  001B                     u4010:
  2798  001B  281C               	goto	l811
  2799                           	
  2800  001C                     l810:	
  2801                           	line	495
  2802                           	
  2803  001C                     l811:	
  2804  001C  0008               	return
  2805                           	opt stack 0
  2806                           GLOBAL	__end_of_mputs
  2807  001D                     	__end_of_mputs:
  2808 ;; =============== function _mputs ends ============
  2809                           
  2810                           	signat	_mputs,4216
  2811                           	global	_send_char
  2812                           psect	text460,local,class=CODE,delta=2
  2813                           global __ptext460
  2814  0B2D                     __ptext460:
  2815                           
  2816 ;; *************** function _send_char *****************
  2817 ;; Defined at:
  2818 ;;		line 315 in file "C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  data            1    wreg     unsigned char 
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;  data            1    2[COMMON] unsigned char 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;		None               void
  2825 ;; Registers used:
  2826 ;;		wreg, status,2, status,0, pclath, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2832 ;;      Params:         0       0       0       0       0
  2833 ;;      Locals:         1       0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0
  2835 ;;      Totals:         1       0       0       0       0
  2836 ;;Total ram usage:        1 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    2
  2839 ;; This function calls:
  2840 ;;		_delay
  2841 ;;		_e_pulse
  2842 ;; This function is called by:
  2843 ;;		_main
  2844 ;;		_dis_num
  2845 ;;		_send_string
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           psect	text460
  2849                           	file	"C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  2850                           	line	315
  2851                           	global	__size_of_send_char
  2852  0019                     	__size_of_send_char	equ	__end_of_send_char-_send_char
  2853                           	
  2854  0B2D                     _send_char:	
  2855                           	opt	stack 4
  2856                           ; Regs used in _send_char: [wreg+status,2+status,0+pclath+cstack]
  2857                           ;send_char@data stored from wreg
  2858  0B2D  00F2               	movwf	(send_char@data)
  2859                           	line	316
  2860                           	
  2861  0B2E                     l3694:	
  2862                           ;MPLAB3.c: 316: RB4=1;
  2863  0B2E  1283               	bcf	status, 5	;RP0=0, select bank0
  2864  0B2F  1303               	bcf	status, 6	;RP1=0, select bank0
  2865  0B30  1606               	bsf	(52/8),(52)&7
  2866                           	line	318
  2867                           	
  2868  0B31                     l3696:	
  2869                           ;MPLAB3.c: 318: PORTD=data;
  2870  0B31  0872               	movf	(send_char@data),w
  2871  0B32  0088               	movwf	(8)	;volatile
  2872                           	line	319
  2873                           ;MPLAB3.c: 319: PORTD=data;
  2874  0B33  0872               	movf	(send_char@data),w
  2875  0B34  0088               	movwf	(8)	;volatile
  2876                           	line	320
  2877                           ;MPLAB3.c: 320: PORTD=data;
  2878  0B35  0872               	movf	(send_char@data),w
  2879  0B36  0088               	movwf	(8)	;volatile
  2880                           	line	321
  2881                           	
  2882  0B37                     l3698:	
  2883                           ;MPLAB3.c: 321: delay(500);
  2884  0B37  30F4               	movlw	low(01F4h)
  2885  0B38  00F0               	movwf	(?_delay)
  2886  0B39  3001               	movlw	high(01F4h)
  2887  0B3A  00F1               	movwf	((?_delay))+1
  2888  0B3B  120A  158A  22E8   	fcall	_delay
              120A  158A         
  2889                           	line	322
  2890                           	
  2891  0B40                     l3700:	
  2892                           ;MPLAB3.c: 322: e_pulse();
  2893  0B40  120A  158A  2314   	fcall	_e_pulse
              120A  158A         
  2894                           	line	323
  2895                           	
  2896  0B45                     l750:	
  2897  0B45  0008               	return
  2898                           	opt stack 0
  2899                           GLOBAL	__end_of_send_char
  2900  0B46                     	__end_of_send_char:
  2901 ;; =============== function _send_char ends ============
  2902                           
  2903                           	signat	_send_char,4216
  2904                           	global	_send_config
  2905                           psect	text461,local,class=CODE,delta=2
  2906                           global __ptext461
  2907  0ABE                     __ptext461:
  2908                           
  2909 ;; *************** function _send_config *****************
  2910 ;; Defined at:
  2911 ;;		line 299 in file "C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  data            1    wreg     unsigned char 
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;  data            1    2[COMMON] unsigned char 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;		None               void
  2918 ;; Registers used:
  2919 ;;		wreg, status,2, status,0, pclath, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2925 ;;      Params:         0       0       0       0       0
  2926 ;;      Locals:         1       0       0       0       0
  2927 ;;      Temps:          0       0       0       0       0
  2928 ;;      Totals:         1       0       0       0       0
  2929 ;;Total ram usage:        1 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; Hardware stack levels required when called:    2
  2932 ;; This function calls:
  2933 ;;		_delay
  2934 ;;		_e_pulse
  2935 ;; This function is called by:
  2936 ;;		_main
  2937 ;;		_lcd_goto
  2938 ;;		_lcd_clr
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           psect	text461
  2942                           	file	"C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  2943                           	line	299
  2944                           	global	__size_of_send_config
  2945  0015                     	__size_of_send_config	equ	__end_of_send_config-_send_config
  2946                           	
  2947  0ABE                     _send_config:	
  2948                           	opt	stack 4
  2949                           ; Regs used in _send_config: [wreg+status,2+status,0+pclath+cstack]
  2950                           ;send_config@data stored from wreg
  2951  0ABE  00F2               	movwf	(send_config@data)
  2952                           	line	300
  2953                           	
  2954  0ABF                     l3686:	
  2955                           ;MPLAB3.c: 300: RB4=0;
  2956  0ABF  1283               	bcf	status, 5	;RP0=0, select bank0
  2957  0AC0  1303               	bcf	status, 6	;RP1=0, select bank0
  2958  0AC1  1206               	bcf	(52/8),(52)&7
  2959                           	line	301
  2960                           	
  2961  0AC2                     l3688:	
  2962                           ;MPLAB3.c: 301: PORTD=data;
  2963  0AC2  0872               	movf	(send_config@data),w
  2964  0AC3  0088               	movwf	(8)	;volatile
  2965                           	line	302
  2966                           	
  2967  0AC4                     l3690:	
  2968                           ;MPLAB3.c: 302: delay(500);
  2969  0AC4  30F4               	movlw	low(01F4h)
  2970  0AC5  00F0               	movwf	(?_delay)
  2971  0AC6  3001               	movlw	high(01F4h)
  2972  0AC7  00F1               	movwf	((?_delay))+1
  2973  0AC8  120A  158A  22E8   	fcall	_delay
              120A  158A         
  2974                           	line	303
  2975                           	
  2976  0ACD                     l3692:	
  2977                           ;MPLAB3.c: 303: e_pulse();
  2978  0ACD  120A  158A  2314   	fcall	_e_pulse
              120A  158A         
  2979                           	line	304
  2980                           	
  2981  0AD2                     l744:	
  2982  0AD2  0008               	return
  2983                           	opt stack 0
  2984                           GLOBAL	__end_of_send_config
  2985  0AD3                     	__end_of_send_config:
  2986 ;; =============== function _send_config ends ============
  2987                           
  2988                           	signat	_send_config,4216
  2989                           	global	___lwtoft
  2990                           psect	text462,local,class=CODE,delta=2
  2991                           global __ptext462
  2992  0B46                     __ptext462:
  2993                           
  2994 ;; *************** function ___lwtoft *****************
  2995 ;; Defined at:
  2996 ;;		line 29 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\lwtoft.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  c               2   10[BANK0 ] unsigned int 
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  3   10[BANK0 ] float 
  3003 ;; Registers used:
  3004 ;;		wreg, status,2, status,0, pclath, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3010 ;;      Params:         0       3       0       0       0
  3011 ;;      Locals:         0       0       0       0       0
  3012 ;;      Temps:          1       0       0       0       0
  3013 ;;      Totals:         1       3       0       0       0
  3014 ;;Total ram usage:        4 bytes
  3015 ;; Hardware stack levels used:    1
  3016 ;; Hardware stack levels required when called:    1
  3017 ;; This function calls:
  3018 ;;		___ftpack
  3019 ;; This function is called by:
  3020 ;;		_main
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           psect	text462
  3024                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\lwtoft.c"
  3025                           	line	29
  3026                           	global	__size_of___lwtoft
  3027  001B                     	__size_of___lwtoft	equ	__end_of___lwtoft-___lwtoft
  3028                           	
  3029  0B46                     ___lwtoft:	
  3030                           	opt	stack 6
  3031                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3032                           	line	30
  3033                           	
  3034  0B46                     l3682:	
  3035  0B46  1283               	bcf	status, 5	;RP0=0, select bank0
  3036  0B47  1303               	bcf	status, 6	;RP1=0, select bank0
  3037  0B48  082A               	movf	(___lwtoft@c),w
  3038  0B49  00F0               	movwf	(?___ftpack)
  3039  0B4A  082B               	movf	(___lwtoft@c+1),w
  3040  0B4B  00F1               	movwf	(?___ftpack+1)
  3041  0B4C  01F2               	clrf	(?___ftpack+2)
  3042  0B4D  308E               	movlw	(08Eh)
  3043  0B4E  00FC               	movwf	(??___lwtoft+0)+0
  3044  0B4F  087C               	movf	(??___lwtoft+0)+0,w
  3045  0B50  00F3               	movwf	0+(?___ftpack)+03h
  3046  0B51  01F4               	clrf	0+(?___ftpack)+04h
  3047  0B52  120A  158A  2504   	fcall	___ftpack
              120A  158A         
  3048  0B57  0870               	movf	(0+(?___ftpack)),w
  3049  0B58  1283               	bcf	status, 5	;RP0=0, select bank0
  3050  0B59  1303               	bcf	status, 6	;RP1=0, select bank0
  3051  0B5A  00AA               	movwf	(?___lwtoft)
  3052  0B5B  0871               	movf	(1+(?___ftpack)),w
  3053  0B5C  00AB               	movwf	(?___lwtoft+1)
  3054  0B5D  0872               	movf	(2+(?___ftpack)),w
  3055  0B5E  00AC               	movwf	(?___lwtoft+2)
  3056  0B5F  2B60               	goto	l1115
  3057                           	
  3058  0B60                     l3684:	
  3059                           	line	31
  3060                           	
  3061  0B60                     l1115:	
  3062  0B60  0008               	return
  3063                           	opt stack 0
  3064                           GLOBAL	__end_of___lwtoft
  3065  0B61                     	__end_of___lwtoft:
  3066 ;; =============== function ___lwtoft ends ============
  3067                           
  3068                           	signat	___lwtoft,4219
  3069                           	global	___ftmul
  3070                           psect	text463,local,class=CODE,delta=2
  3071                           global __ptext463
  3072  00C3                     __ptext463:
  3073                           
  3074 ;; *************** function ___ftmul *****************
  3075 ;; Defined at:
  3076 ;;		line 52 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\ftmul.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  f1              3   13[BANK0 ] float 
  3079 ;;  f2              3   16[BANK0 ] float 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  f3_as_produc    3   24[BANK0 ] unsigned um
  3082 ;;  sign            1   28[BANK0 ] unsigned char 
  3083 ;;  cntr            1   27[BANK0 ] unsigned char 
  3084 ;;  exp             1   23[BANK0 ] unsigned char 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  3   13[BANK0 ] float 
  3087 ;; Registers used:
  3088 ;;		wreg, status,2, status,0, pclath, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3094 ;;      Params:         0       6       0       0       0
  3095 ;;      Locals:         0       6       0       0       0
  3096 ;;      Temps:          0       4       0       0       0
  3097 ;;      Totals:         0      16       0       0       0
  3098 ;;Total ram usage:       16 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    1
  3101 ;; This function calls:
  3102 ;;		___ftpack
  3103 ;; This function is called by:
  3104 ;;		_main
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           psect	text463
  3108                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\ftmul.c"
  3109                           	line	52
  3110                           	global	__size_of___ftmul
  3111  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  3112                           	
  3113  00C3                     ___ftmul:	
  3114                           	opt	stack 6
  3115                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3116                           	line	56
  3117                           	
  3118  00C3                     l3632:	
  3119  00C3  1283               	bcf	status, 5	;RP0=0, select bank0
  3120  00C4  1303               	bcf	status, 6	;RP1=0, select bank0
  3121  00C5  082D               	movf	(___ftmul@f1),w
  3122  00C6  00B3               	movwf	((??___ftmul+0)+0)
  3123  00C7  082E               	movf	(___ftmul@f1+1),w
  3124  00C8  00B4               	movwf	((??___ftmul+0)+0+1)
  3125  00C9  082F               	movf	(___ftmul@f1+2),w
  3126  00CA  00B5               	movwf	((??___ftmul+0)+0+2)
  3127  00CB  1003               	clrc
  3128  00CC  0D34               	rlf	(??___ftmul+0)+1,w
  3129  00CD  0D35               	rlf	(??___ftmul+0)+2,w
  3130  00CE  00B6               	movwf	(??___ftmul+3)+0
  3131  00CF  0836               	movf	(??___ftmul+3)+0,w
  3132  00D0  00B7               	movwf	(___ftmul@exp)
  3133  00D1  08B7               	movf	((___ftmul@exp)),f
  3134  00D2  1D03               	skipz
  3135  00D3  28D5               	goto	u3871
  3136  00D4  28D6               	goto	u3870
  3137  00D5                     u3871:
  3138  00D5  28DE               	goto	l3638
  3139  00D6                     u3870:
  3140                           	line	57
  3141                           	
  3142  00D6                     l3634:	
  3143  00D6  3000               	movlw	0x0
  3144  00D7  00AD               	movwf	(?___ftmul)
  3145  00D8  3000               	movlw	0x0
  3146  00D9  00AE               	movwf	(?___ftmul+1)
  3147  00DA  3000               	movlw	0x0
  3148  00DB  00AF               	movwf	(?___ftmul+2)
  3149  00DC  29B0               	goto	l991
  3150                           	
  3151  00DD                     l3636:	
  3152  00DD  29B0               	goto	l991
  3153                           	
  3154  00DE                     l990:	
  3155                           	line	58
  3156                           	
  3157  00DE                     l3638:	
  3158  00DE  0830               	movf	(___ftmul@f2),w
  3159  00DF  00B3               	movwf	((??___ftmul+0)+0)
  3160  00E0  0831               	movf	(___ftmul@f2+1),w
  3161  00E1  00B4               	movwf	((??___ftmul+0)+0+1)
  3162  00E2  0832               	movf	(___ftmul@f2+2),w
  3163  00E3  00B5               	movwf	((??___ftmul+0)+0+2)
  3164  00E4  1003               	clrc
  3165  00E5  0D34               	rlf	(??___ftmul+0)+1,w
  3166  00E6  0D35               	rlf	(??___ftmul+0)+2,w
  3167  00E7  00B6               	movwf	(??___ftmul+3)+0
  3168  00E8  0836               	movf	(??___ftmul+3)+0,w
  3169  00E9  00BC               	movwf	(___ftmul@sign)
  3170  00EA  08BC               	movf	((___ftmul@sign)),f
  3171  00EB  1D03               	skipz
  3172  00EC  28EE               	goto	u3881
  3173  00ED  28EF               	goto	u3880
  3174  00EE                     u3881:
  3175  00EE  28F7               	goto	l3644
  3176  00EF                     u3880:
  3177                           	line	59
  3178                           	
  3179  00EF                     l3640:	
  3180  00EF  3000               	movlw	0x0
  3181  00F0  00AD               	movwf	(?___ftmul)
  3182  00F1  3000               	movlw	0x0
  3183  00F2  00AE               	movwf	(?___ftmul+1)
  3184  00F3  3000               	movlw	0x0
  3185  00F4  00AF               	movwf	(?___ftmul+2)
  3186  00F5  29B0               	goto	l991
  3187                           	
  3188  00F6                     l3642:	
  3189  00F6  29B0               	goto	l991
  3190                           	
  3191  00F7                     l992:	
  3192                           	line	60
  3193                           	
  3194  00F7                     l3644:	
  3195  00F7  083C               	movf	(___ftmul@sign),w
  3196  00F8  3E7B               	addlw	07Bh
  3197  00F9  00B3               	movwf	(??___ftmul+0)+0
  3198  00FA  0833               	movf	(??___ftmul+0)+0,w
  3199  00FB  07B7               	addwf	(___ftmul@exp),f
  3200                           	line	61
  3201  00FC  082D               	movf	(___ftmul@f1),w
  3202  00FD  00B3               	movwf	((??___ftmul+0)+0)
  3203  00FE  082E               	movf	(___ftmul@f1+1),w
  3204  00FF  00B4               	movwf	((??___ftmul+0)+0+1)
  3205  0100  082F               	movf	(___ftmul@f1+2),w
  3206  0101  00B5               	movwf	((??___ftmul+0)+0+2)
  3207  0102  3010               	movlw	010h
  3208  0103                     u3895:
  3209  0103  1003               	clrc
  3210  0104  0CB5               	rrf	(??___ftmul+0)+2,f
  3211  0105  0CB4               	rrf	(??___ftmul+0)+1,f
  3212  0106  0CB3               	rrf	(??___ftmul+0)+0,f
  3213  0107                     u3890:
  3214  0107  3EFF               	addlw	-1
  3215  0108  1D03               	skipz
  3216  0109  2903               	goto	u3895
  3217  010A  0833               	movf	0+(??___ftmul+0)+0,w
  3218  010B  00B6               	movwf	(??___ftmul+3)+0
  3219  010C  0836               	movf	(??___ftmul+3)+0,w
  3220  010D  00BC               	movwf	(___ftmul@sign)
  3221                           	line	62
  3222  010E  0830               	movf	(___ftmul@f2),w
  3223  010F  00B3               	movwf	((??___ftmul+0)+0)
  3224  0110  0831               	movf	(___ftmul@f2+1),w
  3225  0111  00B4               	movwf	((??___ftmul+0)+0+1)
  3226  0112  0832               	movf	(___ftmul@f2+2),w
  3227  0113  00B5               	movwf	((??___ftmul+0)+0+2)
  3228  0114  3010               	movlw	010h
  3229  0115                     u3905:
  3230  0115  1003               	clrc
  3231  0116  0CB5               	rrf	(??___ftmul+0)+2,f
  3232  0117  0CB4               	rrf	(??___ftmul+0)+1,f
  3233  0118  0CB3               	rrf	(??___ftmul+0)+0,f
  3234  0119                     u3900:
  3235  0119  3EFF               	addlw	-1
  3236  011A  1D03               	skipz
  3237  011B  2915               	goto	u3905
  3238  011C  0833               	movf	0+(??___ftmul+0)+0,w
  3239  011D  00B6               	movwf	(??___ftmul+3)+0
  3240  011E  0836               	movf	(??___ftmul+3)+0,w
  3241  011F  06BC               	xorwf	(___ftmul@sign),f
  3242                           	line	63
  3243  0120  3080               	movlw	(080h)
  3244  0121  00B3               	movwf	(??___ftmul+0)+0
  3245  0122  0833               	movf	(??___ftmul+0)+0,w
  3246  0123  05BC               	andwf	(___ftmul@sign),f
  3247                           	line	64
  3248                           	
  3249  0124                     l3646:	
  3250  0124  17AE               	bsf	(___ftmul@f1)+(15/8),(15)&7
  3251                           	line	66
  3252                           	
  3253  0125                     l3648:	
  3254  0125  17B1               	bsf	(___ftmul@f2)+(15/8),(15)&7
  3255                           	line	67
  3256                           	
  3257  0126                     l3650:	
  3258  0126  30FF               	movlw	0FFh
  3259  0127  05B0               	andwf	(___ftmul@f2),f
  3260  0128  30FF               	movlw	0FFh
  3261  0129  05B1               	andwf	(___ftmul@f2+1),f
  3262  012A  3000               	movlw	0
  3263  012B  05B2               	andwf	(___ftmul@f2+2),f
  3264                           	line	68
  3265                           	
  3266  012C                     l3652:	
  3267  012C  3000               	movlw	0
  3268  012D  00B8               	movwf	(___ftmul@f3_as_product)
  3269  012E  3000               	movlw	0
  3270  012F  00B9               	movwf	(___ftmul@f3_as_product+1)
  3271  0130  3000               	movlw	0
  3272  0131  00BA               	movwf	(___ftmul@f3_as_product+2)
  3273                           	line	69
  3274                           	
  3275  0132                     l3654:	
  3276  0132  3007               	movlw	(07h)
  3277  0133  00B3               	movwf	(??___ftmul+0)+0
  3278  0134  0833               	movf	(??___ftmul+0)+0,w
  3279  0135  00BB               	movwf	(___ftmul@cntr)
  3280  0136  2937               	goto	l3656
  3281                           	line	70
  3282                           	
  3283  0137                     l993:	
  3284                           	line	71
  3285                           	
  3286  0137                     l3656:	
  3287  0137  1C2D               	btfss	(___ftmul@f1),(0)&7
  3288  0138  293A               	goto	u3911
  3289  0139  293B               	goto	u3910
  3290  013A                     u3911:
  3291  013A  294C               	goto	l3660
  3292  013B                     u3910:
  3293                           	line	72
  3294                           	
  3295  013B                     l3658:	
  3296  013B  0830               	movf	(___ftmul@f2),w
  3297  013C  07B8               	addwf	(___ftmul@f3_as_product),f
  3298  013D  0831               	movf	(___ftmul@f2+1),w
  3299  013E  1103               	clrz
  3300  013F  1803               	skipnc
  3301  0140  0A31               	incf	(___ftmul@f2+1),w
  3302  0141  1903               	skipnz
  3303  0142  2944               	goto	u3921
  3304  0143  07B9               	addwf	(___ftmul@f3_as_product+1),f
  3305  0144                     u3921:
  3306  0144  0832               	movf	(___ftmul@f2+2),w
  3307  0145  1103               	clrz
  3308  0146  1803               	skipnc
  3309  0147  0A32               	incf	(___ftmul@f2+2),w
  3310  0148  1903               	skipnz
  3311  0149  294B               	goto	u3922
  3312  014A  07BA               	addwf	(___ftmul@f3_as_product+2),f
  3313  014B                     u3922:
  3314                           
  3315  014B  294C               	goto	l3660
  3316                           	
  3317  014C                     l994:	
  3318                           	line	73
  3319                           	
  3320  014C                     l3660:	
  3321  014C  3001               	movlw	01h
  3322  014D                     u3935:
  3323  014D  1003               	clrc
  3324  014E  0CAF               	rrf	(___ftmul@f1+2),f
  3325  014F  0CAE               	rrf	(___ftmul@f1+1),f
  3326  0150  0CAD               	rrf	(___ftmul@f1),f
  3327  0151  3EFF               	addlw	-1
  3328  0152  1D03               	skipz
  3329  0153  294D               	goto	u3935
  3330                           
  3331                           	line	74
  3332                           	
  3333  0154                     l3662:	
  3334  0154  3001               	movlw	01h
  3335  0155                     u3945:
  3336  0155  1003               	clrc
  3337  0156  0DB0               	rlf	(___ftmul@f2),f
  3338  0157  0DB1               	rlf	(___ftmul@f2+1),f
  3339  0158  0DB2               	rlf	(___ftmul@f2+2),f
  3340  0159  3EFF               	addlw	-1
  3341  015A  1D03               	skipz
  3342  015B  2955               	goto	u3945
  3343                           	line	75
  3344                           	
  3345  015C                     l3664:	
  3346  015C  3001               	movlw	low(01h)
  3347  015D  02BB               	subwf	(___ftmul@cntr),f
  3348  015E  1D03               	btfss	status,2
  3349  015F  2961               	goto	u3951
  3350  0160  2962               	goto	u3950
  3351  0161                     u3951:
  3352  0161  2937               	goto	l3656
  3353  0162                     u3950:
  3354  0162  2963               	goto	l3666
  3355                           	
  3356  0163                     l995:	
  3357                           	line	76
  3358                           	
  3359  0163                     l3666:	
  3360  0163  3009               	movlw	(09h)
  3361  0164  00B3               	movwf	(??___ftmul+0)+0
  3362  0165  0833               	movf	(??___ftmul+0)+0,w
  3363  0166  00BB               	movwf	(___ftmul@cntr)
  3364  0167  2968               	goto	l3668
  3365                           	line	77
  3366                           	
  3367  0168                     l996:	
  3368                           	line	78
  3369                           	
  3370  0168                     l3668:	
  3371  0168  1C2D               	btfss	(___ftmul@f1),(0)&7
  3372  0169  296B               	goto	u3961
  3373  016A  296C               	goto	u3960
  3374  016B                     u3961:
  3375  016B  297D               	goto	l3672
  3376  016C                     u3960:
  3377                           	line	79
  3378                           	
  3379  016C                     l3670:	
  3380  016C  0830               	movf	(___ftmul@f2),w
  3381  016D  07B8               	addwf	(___ftmul@f3_as_product),f
  3382  016E  0831               	movf	(___ftmul@f2+1),w
  3383  016F  1103               	clrz
  3384  0170  1803               	skipnc
  3385  0171  0A31               	incf	(___ftmul@f2+1),w
  3386  0172  1903               	skipnz
  3387  0173  2975               	goto	u3971
  3388  0174  07B9               	addwf	(___ftmul@f3_as_product+1),f
  3389  0175                     u3971:
  3390  0175  0832               	movf	(___ftmul@f2+2),w
  3391  0176  1103               	clrz
  3392  0177  1803               	skipnc
  3393  0178  0A32               	incf	(___ftmul@f2+2),w
  3394  0179  1903               	skipnz
  3395  017A  297C               	goto	u3972
  3396  017B  07BA               	addwf	(___ftmul@f3_as_product+2),f
  3397  017C                     u3972:
  3398                           
  3399  017C  297D               	goto	l3672
  3400                           	
  3401  017D                     l997:	
  3402                           	line	80
  3403                           	
  3404  017D                     l3672:	
  3405  017D  3001               	movlw	01h
  3406  017E                     u3985:
  3407  017E  1003               	clrc
  3408  017F  0CAF               	rrf	(___ftmul@f1+2),f
  3409  0180  0CAE               	rrf	(___ftmul@f1+1),f
  3410  0181  0CAD               	rrf	(___ftmul@f1),f
  3411  0182  3EFF               	addlw	-1
  3412  0183  1D03               	skipz
  3413  0184  297E               	goto	u3985
  3414                           
  3415                           	line	81
  3416                           	
  3417  0185                     l3674:	
  3418  0185  3001               	movlw	01h
  3419  0186                     u3995:
  3420  0186  1003               	clrc
  3421  0187  0CBA               	rrf	(___ftmul@f3_as_product+2),f
  3422  0188  0CB9               	rrf	(___ftmul@f3_as_product+1),f
  3423  0189  0CB8               	rrf	(___ftmul@f3_as_product),f
  3424  018A  3EFF               	addlw	-1
  3425  018B  1D03               	skipz
  3426  018C  2986               	goto	u3995
  3427                           
  3428                           	line	82
  3429                           	
  3430  018D                     l3676:	
  3431  018D  3001               	movlw	low(01h)
  3432  018E  02BB               	subwf	(___ftmul@cntr),f
  3433  018F  1D03               	btfss	status,2
  3434  0190  2992               	goto	u4001
  3435  0191  2993               	goto	u4000
  3436  0192                     u4001:
  3437  0192  2968               	goto	l3668
  3438  0193                     u4000:
  3439  0193  2994               	goto	l3678
  3440                           	
  3441  0194                     l998:	
  3442                           	line	83
  3443                           	
  3444  0194                     l3678:	
  3445  0194  0838               	movf	(___ftmul@f3_as_product),w
  3446  0195  00F0               	movwf	(?___ftpack)
  3447  0196  0839               	movf	(___ftmul@f3_as_product+1),w
  3448  0197  00F1               	movwf	(?___ftpack+1)
  3449  0198  083A               	movf	(___ftmul@f3_as_product+2),w
  3450  0199  00F2               	movwf	(?___ftpack+2)
  3451  019A  0837               	movf	(___ftmul@exp),w
  3452  019B  00B3               	movwf	(??___ftmul+0)+0
  3453  019C  0833               	movf	(??___ftmul+0)+0,w
  3454  019D  00F3               	movwf	0+(?___ftpack)+03h
  3455  019E  083C               	movf	(___ftmul@sign),w
  3456  019F  00B4               	movwf	(??___ftmul+1)+0
  3457  01A0  0834               	movf	(??___ftmul+1)+0,w
  3458  01A1  00F4               	movwf	0+(?___ftpack)+04h
  3459  01A2  120A  158A  2504   	fcall	___ftpack
              120A  118A         
  3460  01A7  0870               	movf	(0+(?___ftpack)),w
  3461  01A8  1283               	bcf	status, 5	;RP0=0, select bank0
  3462  01A9  1303               	bcf	status, 6	;RP1=0, select bank0
  3463  01AA  00AD               	movwf	(?___ftmul)
  3464  01AB  0871               	movf	(1+(?___ftpack)),w
  3465  01AC  00AE               	movwf	(?___ftmul+1)
  3466  01AD  0872               	movf	(2+(?___ftpack)),w
  3467  01AE  00AF               	movwf	(?___ftmul+2)
  3468  01AF  29B0               	goto	l991
  3469                           	
  3470  01B0                     l3680:	
  3471                           	line	84
  3472                           	
  3473  01B0                     l991:	
  3474  01B0  0008               	return
  3475                           	opt stack 0
  3476                           GLOBAL	__end_of___ftmul
  3477  01B1                     	__end_of___ftmul:
  3478 ;; =============== function ___ftmul ends ============
  3479                           
  3480                           	signat	___ftmul,8315
  3481                           	global	_putch
  3482                           psect	text464,local,class=CODE,delta=2
  3483                           global __ptext464
  3484  0AFE                     __ptext464:
  3485                           
  3486 ;; *************** function _putch *****************
  3487 ;; Defined at:
  3488 ;;		line 499 in file "C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  c               1    wreg     unsigned char 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  c               1    2[COMMON] unsigned char 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;		None               void
  3495 ;; Registers used:
  3496 ;;		wreg, status,2, status,0, pclath, cstack
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3502 ;;      Params:         0       0       0       0       0
  3503 ;;      Locals:         1       0       0       0       0
  3504 ;;      Temps:          0       0       0       0       0
  3505 ;;      Totals:         1       0       0       0       0
  3506 ;;Total ram usage:        1 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:    1
  3509 ;; This function calls:
  3510 ;;		_delay
  3511 ;; This function is called by:
  3512 ;;		_mputs
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           psect	text464
  3516                           	file	"C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  3517                           	line	499
  3518                           	global	__size_of_putch
  3519  0016                     	__size_of_putch	equ	__end_of_putch-_putch
  3520                           	
  3521  0AFE                     _putch:	
  3522                           	opt	stack 5
  3523                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  3524                           ;putch@c stored from wreg
  3525  0AFE  00F2               	movwf	(putch@c)
  3526                           	line	500
  3527                           	
  3528  0AFF                     l3626:	
  3529                           ;MPLAB3.c: 500: while(!TXIF)
  3530  0AFF  2B01               	goto	l814
  3531                           	
  3532  0B00                     l815:	
  3533                           	line	503
  3534                           # 503 "C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  3535  0B00  0064               clrwdt ;#
  3536                           psect	text464
  3537                           	line	504
  3538                           	
  3539  0B01                     l814:	
  3540                           	line	500
  3541  0B01  1283               	bcf	status, 5	;RP0=0, select bank0
  3542  0B02  1303               	bcf	status, 6	;RP1=0, select bank0
  3543  0B03  1E0C               	btfss	(100/8),(100)&7
  3544  0B04  2B06               	goto	u3861
  3545  0B05  2B07               	goto	u3860
  3546  0B06                     u3861:
  3547  0B06  2B00               	goto	l815
  3548  0B07                     u3860:
  3549  0B07  2B08               	goto	l3628
  3550                           	
  3551  0B08                     l816:	
  3552                           	line	505
  3553                           	
  3554  0B08                     l3628:	
  3555                           ;MPLAB3.c: 504: }
  3556                           ;MPLAB3.c: 505: TXREG=c;
  3557  0B08  0872               	movf	(putch@c),w
  3558  0B09  0099               	movwf	(25)	;volatile
  3559                           	line	506
  3560                           	
  3561  0B0A                     l3630:	
  3562                           ;MPLAB3.c: 506: delay(60);
  3563  0B0A  303C               	movlw	low(03Ch)
  3564  0B0B  00F0               	movwf	(?_delay)
  3565  0B0C  3000               	movlw	high(03Ch)
  3566  0B0D  00F1               	movwf	((?_delay))+1
  3567  0B0E  120A  158A  22E8   	fcall	_delay
              120A  158A         
  3568                           	line	507
  3569                           	
  3570  0B13                     l817:	
  3571  0B13  0008               	return
  3572                           	opt stack 0
  3573                           GLOBAL	__end_of_putch
  3574  0B14                     	__end_of_putch:
  3575 ;; =============== function _putch ends ============
  3576                           
  3577                           	signat	_putch,4216
  3578                           	global	_e_pulse
  3579                           psect	text465,local,class=CODE,delta=2
  3580                           global __ptext465
  3581  0B14                     __ptext465:
  3582                           
  3583 ;; *************** function _e_pulse *****************
  3584 ;; Defined at:
  3585 ;;		line 307 in file "C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;		None
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;		None
  3590 ;; Return value:  Size  Location     Type
  3591 ;;		None               void
  3592 ;; Registers used:
  3593 ;;		wreg, status,2, status,0, pclath, cstack
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3599 ;;      Params:         0       0       0       0       0
  3600 ;;      Locals:         0       0       0       0       0
  3601 ;;      Temps:          0       0       0       0       0
  3602 ;;      Totals:         0       0       0       0       0
  3603 ;;Total ram usage:        0 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    1
  3606 ;; This function calls:
  3607 ;;		_delay
  3608 ;; This function is called by:
  3609 ;;		_send_config
  3610 ;;		_send_char
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           psect	text465
  3614                           	file	"C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  3615                           	line	307
  3616                           	global	__size_of_e_pulse
  3617  0019                     	__size_of_e_pulse	equ	__end_of_e_pulse-_e_pulse
  3618                           	
  3619  0B14                     _e_pulse:	
  3620                           	opt	stack 4
  3621                           ; Regs used in _e_pulse: [wreg+status,2+status,0+pclath+cstack]
  3622                           	line	308
  3623                           	
  3624  0B14                     l3620:	
  3625                           ;MPLAB3.c: 308: RB5=1;
  3626  0B14  1283               	bcf	status, 5	;RP0=0, select bank0
  3627  0B15  1303               	bcf	status, 6	;RP1=0, select bank0
  3628  0B16  1686               	bsf	(53/8),(53)&7
  3629                           	line	309
  3630                           	
  3631  0B17                     l3622:	
  3632                           ;MPLAB3.c: 309: delay(500);
  3633  0B17  30F4               	movlw	low(01F4h)
  3634  0B18  00F0               	movwf	(?_delay)
  3635  0B19  3001               	movlw	high(01F4h)
  3636  0B1A  00F1               	movwf	((?_delay))+1
  3637  0B1B  120A  158A  22E8   	fcall	_delay
              120A  158A         
  3638                           	line	310
  3639                           	
  3640  0B20                     l3624:	
  3641                           ;MPLAB3.c: 310: RB5=0;
  3642  0B20  1283               	bcf	status, 5	;RP0=0, select bank0
  3643  0B21  1303               	bcf	status, 6	;RP1=0, select bank0
  3644  0B22  1286               	bcf	(53/8),(53)&7
  3645                           	line	311
  3646                           ;MPLAB3.c: 311: delay(500);
  3647  0B23  30F4               	movlw	low(01F4h)
  3648  0B24  00F0               	movwf	(?_delay)
  3649  0B25  3001               	movlw	high(01F4h)
  3650  0B26  00F1               	movwf	((?_delay))+1
  3651  0B27  120A  158A  22E8   	fcall	_delay
              120A  158A         
  3652                           	line	312
  3653                           	
  3654  0B2C                     l747:	
  3655  0B2C  0008               	return
  3656                           	opt stack 0
  3657                           GLOBAL	__end_of_e_pulse
  3658  0B2D                     	__end_of_e_pulse:
  3659 ;; =============== function _e_pulse ends ============
  3660                           
  3661                           	signat	_e_pulse,88
  3662                           	global	_sprintf
  3663                           psect	text466,local,class=CODE,delta=2
  3664                           global __ptext466
  3665  01B1                     __ptext466:
  3666                           
  3667 ;; *************** function _sprintf *****************
  3668 ;; Defined at:
  3669 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.81\lib\doprnt.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  sp              1    wreg     PTR unsigned char 
  3672 ;;		 -> serial_buffer(40), 
  3673 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  3674 ;;		 -> STR_1(25), 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  sp              1   22[BANK0 ] PTR unsigned char 
  3677 ;;		 -> serial_buffer(40), 
  3678 ;;  _val            3   23[BANK0 ] struct .
  3679 ;;  width           2   20[BANK0 ] int 
  3680 ;;  c               1   26[BANK0 ] char 
  3681 ;;  flag            1   19[BANK0 ] unsigned char 
  3682 ;;  ap              1   18[BANK0 ] PTR void [1]
  3683 ;;		 -> ?_sprintf(2), 
  3684 ;;  prec            1   17[BANK0 ] char 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  2    0[BANK0 ] int 
  3687 ;; Registers used:
  3688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3694 ;;      Params:         0      13       0       0       0
  3695 ;;      Locals:         0      10       0       0       0
  3696 ;;      Temps:          0       4       0       0       0
  3697 ;;      Totals:         0      27       0       0       0
  3698 ;;Total ram usage:       27 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    1
  3701 ;; This function calls:
  3702 ;;		_isdigit
  3703 ;;		___wmul
  3704 ;;		___lwdiv
  3705 ;;		___lwmod
  3706 ;; This function is called by:
  3707 ;;		_main
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           psect	text466
  3711                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\doprnt.c"
  3712                           	line	488
  3713                           	global	__size_of_sprintf
  3714  0273                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  3715                           	
  3716  01B1                     _sprintf:	
  3717                           	opt	stack 6
  3718                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3719                           ;sprintf@sp stored from wreg
  3720                           	line	537
  3721  01B1  1283               	bcf	status, 5	;RP0=0, select bank0
  3722  01B2  1303               	bcf	status, 6	;RP1=0, select bank0
  3723  01B3  00B6               	movwf	(sprintf@sp)
  3724                           	
  3725  01B4                     l3480:	
  3726  01B4  3021               	movlw	(?_sprintf+01h)&0ffh
  3727  01B5  00AD               	movwf	(??_sprintf+0)+0
  3728  01B6  082D               	movf	(??_sprintf+0)+0,w
  3729  01B7  00B2               	movwf	(sprintf@ap)
  3730                           	line	540
  3731  01B8  2C08               	goto	l3614
  3732                           	
  3733  01B9                     l829:	
  3734                           	line	542
  3735                           	
  3736  01B9                     l3482:	
  3737  01B9  083A               	movf	(sprintf@c),w
  3738  01BA  3A25               	xorlw	025h
  3739  01BB  1903               	skipnz
  3740  01BC  29BE               	goto	u3641
  3741  01BD  29BF               	goto	u3640
  3742  01BE                     u3641:
  3743  01BE  29CB               	goto	l3488
  3744  01BF                     u3640:
  3745                           	line	545
  3746                           	
  3747  01BF                     l3484:	
  3748  01BF  083A               	movf	(sprintf@c),w
  3749  01C0  00AD               	movwf	(??_sprintf+0)+0
  3750  01C1  0836               	movf	(sprintf@sp),w
  3751  01C2  0084               	movwf	fsr0
  3752  01C3  082D               	movf	(??_sprintf+0)+0,w
  3753  01C4  1383               	bcf	status, 7	;select IRP bank0
  3754  01C5  0080               	movwf	indf
  3755                           	
  3756  01C6                     l3486:	
  3757  01C6  3001               	movlw	(01h)
  3758  01C7  00AD               	movwf	(??_sprintf+0)+0
  3759  01C8  082D               	movf	(??_sprintf+0)+0,w
  3760  01C9  07B6               	addwf	(sprintf@sp),f
  3761                           	line	546
  3762  01CA  2C08               	goto	l3614
  3763                           	line	547
  3764                           	
  3765  01CB                     l830:	
  3766                           	line	550
  3767                           	
  3768  01CB                     l3488:	
  3769  01CB  01B4               	clrf	(sprintf@width)
  3770  01CC  01B5               	clrf	(sprintf@width+1)
  3771                           	line	552
  3772                           	
  3773  01CD                     l3490:	
  3774  01CD  01B3               	clrf	(sprintf@flag)
  3775  01CE  29D7               	goto	l3496
  3776                           	line	554
  3777                           	
  3778  01CF                     l831:	
  3779                           	line	555
  3780  01CF  29D7               	goto	l3496
  3781                           	line	583
  3782                           	
  3783  01D0                     l833:	
  3784                           	line	584
  3785  01D0  1533               	bsf	(sprintf@flag)+(2/8),(2)&7
  3786                           	line	585
  3787                           	
  3788  01D1                     l3492:	
  3789  01D1  3001               	movlw	(01h)
  3790  01D2  00AD               	movwf	(??_sprintf+0)+0
  3791  01D3  082D               	movf	(??_sprintf+0)+0,w
  3792  01D4  07A0               	addwf	(sprintf@f),f
  3793                           	line	586
  3794  01D5  29D7               	goto	l3496
  3795                           	line	588
  3796                           	
  3797  01D6                     l3494:	
  3798  01D6  29E4               	goto	l3498
  3799                           	line	555
  3800                           	
  3801  01D7                     l832:	
  3802                           	
  3803  01D7                     l3496:	
  3804  01D7  0820               	movf	(sprintf@f),w
  3805  01D8  0084               	movwf	fsr0
  3806  01D9  120A  158A  2000   	fcall	stringdir
              120A  118A         
  3807                           	; Switch size 1, requested type "space"
  3808                           ; Number of cases is 1, Range of values is 48 to 48
  3809                           ; switch strategies available:
  3810                           ; Name         Instructions Cycles
  3811                           ; simple_byte            4     3 (average)
  3812                           ; direct_byte           14    11 (fixed)
  3813                           ; jumptable            263     9 (fixed)
  3814                           ;	Chosen strategy is simple_byte
  3815                           
  3816                           	opt asmopt_off
  3817  01DE  3A30               	xorlw	48^0	; case 48
  3818  01DF  1903               	skipnz
  3819  01E0  29D0               	goto	l833
  3820  01E1  29E4               	goto	l3498
  3821                           	opt asmopt_on
  3822                           
  3823                           	line	588
  3824                           	
  3825  01E2                     l835:	
  3826                           	line	589
  3827  01E2  29E4               	goto	l3498
  3828                           	line	590
  3829                           	
  3830  01E3                     l834:	
  3831  01E3  29D7               	goto	l3496
  3832                           	
  3833  01E4                     l836:	
  3834                           	line	601
  3835                           	
  3836  01E4                     l3498:	
  3837  01E4  0820               	movf	(sprintf@f),w
  3838  01E5  0084               	movwf	fsr0
  3839  01E6  120A  158A  2000   	fcall	stringdir
              120A  118A         
  3840  01EB  120A  158A  22A9   	fcall	_isdigit
              120A  118A         
  3841  01F0  1C03               	btfss	status,0
  3842  01F1  29F3               	goto	u3651
  3843  01F2  29F4               	goto	u3650
  3844  01F3                     u3651:
  3845  01F3  2AAE               	goto	l3538
  3846  01F4                     u3650:
  3847                           	line	602
  3848                           	
  3849  01F4                     l3500:	
  3850  01F4  1283               	bcf	status, 5	;RP0=0, select bank0
  3851  01F5  1303               	bcf	status, 6	;RP1=0, select bank0
  3852  01F6  01B4               	clrf	(sprintf@width)
  3853  01F7  01B5               	clrf	(sprintf@width+1)
  3854  01F8  29F9               	goto	l3502
  3855                           	line	603
  3856                           	
  3857  01F9                     l838:	
  3858                           	line	604
  3859                           	
  3860  01F9                     l3502:	
  3861  01F9  1283               	bcf	status, 5	;RP0=0, select bank0
  3862  01FA  1303               	bcf	status, 6	;RP1=0, select bank0
  3863  01FB  0820               	movf	(sprintf@f),w
  3864  01FC  0084               	movwf	fsr0
  3865  01FD  120A  158A  2000   	fcall	stringdir
              120A  118A         
  3866  0202  00AD               	movwf	(??_sprintf+0)+0
  3867  0203  01AE               	clrf	(??_sprintf+0)+0+1
  3868  0204  0835               	movf	(sprintf@width+1),w
  3869  0205  01F1               	clrf	(?___wmul+1)
  3870  0206  07F1               	addwf	(?___wmul+1)
  3871  0207  0834               	movf	(sprintf@width),w
  3872  0208  01F0               	clrf	(?___wmul)
  3873  0209  07F0               	addwf	(?___wmul)
  3874                           
  3875  020A  300A               	movlw	low(0Ah)
  3876  020B  00F2               	movwf	0+(?___wmul)+02h
  3877  020C  3000               	movlw	high(0Ah)
  3878  020D  00F3               	movwf	(0+(?___wmul)+02h)+1
  3879  020E  120A  158A  237E   	fcall	___wmul
              120A  118A         
  3880  0213  1283               	bcf	status, 5	;RP0=0, select bank0
  3881  0214  1303               	bcf	status, 6	;RP1=0, select bank0
  3882  0215  082D               	movf	0+(??_sprintf+0)+0,w
  3883  0216  0770               	addwf	(0+(?___wmul)),w
  3884  0217  00AF               	movwf	(??_sprintf+2)+0
  3885  0218  082E               	movf	1+(??_sprintf+0)+0,w
  3886  0219  1803               	skipnc
  3887  021A  0A2E               	incf	1+(??_sprintf+0)+0,w
  3888  021B  0771               	addwf	(1+(?___wmul)),w
  3889  021C  00B0               	movwf	1+(??_sprintf+2)+0
  3890  021D  082F               	movf	0+(??_sprintf+2)+0,w
  3891  021E  3ED0               	addlw	low(0FFD0h)
  3892  021F  00B4               	movwf	(sprintf@width)
  3893  0220  0830               	movf	1+(??_sprintf+2)+0,w
  3894  0221  1803               	skipnc
  3895  0222  3E01               	addlw	1
  3896  0223  3EFF               	addlw	high(0FFD0h)
  3897  0224  00B5               	movwf	1+(sprintf@width)
  3898                           	
  3899  0225                     l3504:	
  3900  0225  3001               	movlw	(01h)
  3901  0226  00AD               	movwf	(??_sprintf+0)+0
  3902  0227  082D               	movf	(??_sprintf+0)+0,w
  3903  0228  07A0               	addwf	(sprintf@f),f
  3904                           	line	605
  3905                           	
  3906  0229                     l3506:	
  3907  0229  0820               	movf	(sprintf@f),w
  3908  022A  0084               	movwf	fsr0
  3909  022B  120A  158A  2000   	fcall	stringdir
              120A  118A         
  3910  0230  120A  158A  22A9   	fcall	_isdigit
              120A  118A         
  3911  0235  1803               	btfsc	status,0
  3912  0236  2A38               	goto	u3661
  3913  0237  2A39               	goto	u3660
  3914  0238                     u3661:
  3915  0238  29F9               	goto	l3502
  3916  0239                     u3660:
  3917  0239  2AAE               	goto	l3538
  3918                           	
  3919  023A                     l839:	
  3920  023A  2AAE               	goto	l3538
  3921                           	line	611
  3922                           	
  3923  023B                     l837:	
  3924                           	line	638
  3925  023B  2AAE               	goto	l3538
  3926                           	line	640
  3927                           	
  3928  023C                     l841:	
  3929                           	line	641
  3930  023C  2C1C               	goto	l3616
  3931                           	line	700
  3932                           	
  3933  023D                     l843:	
  3934  023D  2AC8               	goto	l3540
  3935                           	line	701
  3936                           	
  3937  023E                     l844:	
  3938                           	line	702
  3939  023E  2AC8               	goto	l3540
  3940                           	line	753
  3941                           	
  3942  023F                     l846:	
  3943                           	line	760
  3944                           	
  3945  023F                     l3508:	
  3946  023F  1283               	bcf	status, 5	;RP0=0, select bank0
  3947  0240  1303               	bcf	status, 6	;RP1=0, select bank0
  3948  0241  0835               	movf	(sprintf@width+1),w
  3949  0242  0239               	subwf	1+(sprintf@_val)+01h,w
  3950  0243  1D03               	skipz
  3951  0244  2A47               	goto	u3675
  3952  0245  0834               	movf	(sprintf@width),w
  3953  0246  0238               	subwf	0+(sprintf@_val)+01h,w
  3954  0247                     u3675:
  3955  0247  1803               	skipnc
  3956  0248  2A4A               	goto	u3671
  3957  0249  2A4B               	goto	u3670
  3958  024A                     u3671:
  3959  024A  2A52               	goto	l3512
  3960  024B                     u3670:
  3961                           	line	761
  3962                           	
  3963  024B                     l3510:	
  3964  024B  0838               	movf	0+(sprintf@_val)+01h,w
  3965  024C  02B4               	subwf	(sprintf@width),f
  3966  024D  0839               	movf	1+(sprintf@_val)+01h,w
  3967  024E  1C03               	skipc
  3968  024F  03B5               	decf	(sprintf@width+1),f
  3969  0250  02B5               	subwf	(sprintf@width+1),f
  3970  0251  2A62               	goto	l3518
  3971                           	line	762
  3972                           	
  3973  0252                     l847:	
  3974                           	line	763
  3975                           	
  3976  0252                     l3512:	
  3977  0252  01B4               	clrf	(sprintf@width)
  3978  0253  01B5               	clrf	(sprintf@width+1)
  3979  0254  2A62               	goto	l3518
  3980                           	
  3981  0255                     l848:	
  3982                           	line	767
  3983  0255  2A62               	goto	l3518
  3984                           	
  3985  0256                     l850:	
  3986                           	line	768
  3987                           	
  3988  0256                     l3514:	
  3989  0256  3020               	movlw	(020h)
  3990  0257  00AD               	movwf	(??_sprintf+0)+0
  3991  0258  0836               	movf	(sprintf@sp),w
  3992  0259  0084               	movwf	fsr0
  3993  025A  082D               	movf	(??_sprintf+0)+0,w
  3994  025B  1383               	bcf	status, 7	;select IRP bank0
  3995  025C  0080               	movwf	indf
  3996                           	
  3997  025D                     l3516:	
  3998  025D  3001               	movlw	(01h)
  3999  025E  00AD               	movwf	(??_sprintf+0)+0
  4000  025F  082D               	movf	(??_sprintf+0)+0,w
  4001  0260  07B6               	addwf	(sprintf@sp),f
  4002  0261  2A62               	goto	l3518
  4003                           	
  4004  0262                     l849:	
  4005                           	line	767
  4006                           	
  4007  0262                     l3518:	
  4008  0262  30FF               	movlw	low(-1)
  4009  0263  07B4               	addwf	(sprintf@width),f
  4010  0264  1803               	skipnc
  4011  0265  0AB5               	incf	(sprintf@width+1),f
  4012  0266  30FF               	movlw	high(-1)
  4013  0267  07B5               	addwf	(sprintf@width+1),f
  4014  0268  30FF               	movlw	high(-1)
  4015  0269  0635               	xorwf	((sprintf@width+1)),w
  4016  026A  1D03               	skipz
  4017  026B  2A6E               	goto	u3685
  4018  026C  30FF               	movlw	low(-1)
  4019  026D  0634               	xorwf	((sprintf@width)),w
  4020  026E                     u3685:
  4021                           
  4022  026E  1D03               	skipz
  4023  026F  2A71               	goto	u3681
  4024  0270  2A72               	goto	u3680
  4025  0271                     u3681:
  4026  0271  2A56               	goto	l3514
  4027  0272                     u3680:
  4028  0272  2A86               	goto	l3526
  4029                           	
  4030  0273                     l851:	
  4031                           	line	770
  4032  0273  2A86               	goto	l3526
  4033                           	
  4034  0274                     l853:	
  4035                           	line	771
  4036                           	
  4037  0274                     l3520:	
  4038  0274  0837               	movf	(sprintf@_val),w
  4039  0275  0084               	movwf	fsr0
  4040  0276  1383               	bcf	status, 7	;select IRP bank0
  4041  0277  0800               	movf	indf,w
  4042  0278  00AD               	movwf	(??_sprintf+0)+0
  4043  0279  0836               	movf	(sprintf@sp),w
  4044  027A  0084               	movwf	fsr0
  4045  027B  082D               	movf	(??_sprintf+0)+0,w
  4046  027C  0080               	movwf	indf
  4047                           	
  4048  027D                     l3522:	
  4049  027D  3001               	movlw	(01h)
  4050  027E  00AD               	movwf	(??_sprintf+0)+0
  4051  027F  082D               	movf	(??_sprintf+0)+0,w
  4052  0280  07B7               	addwf	(sprintf@_val),f
  4053                           	
  4054  0281                     l3524:	
  4055  0281  3001               	movlw	(01h)
  4056  0282  00AD               	movwf	(??_sprintf+0)+0
  4057  0283  082D               	movf	(??_sprintf+0)+0,w
  4058  0284  07B6               	addwf	(sprintf@sp),f
  4059  0285  2A86               	goto	l3526
  4060                           	
  4061  0286                     l852:	
  4062                           	line	770
  4063                           	
  4064  0286                     l3526:	
  4065  0286  3001               	movlw	low(01h)
  4066  0287  02B8               	subwf	0+(sprintf@_val)+01h,f
  4067  0288  3000               	movlw	high(01h)
  4068  0289  1C03               	skipc
  4069  028A  03B9               	decf	1+(sprintf@_val)+01h,f
  4070  028B  02B9               	subwf	1+(sprintf@_val)+01h,f
  4071  028C  30FF               	movlw	high(0FFFFh)
  4072  028D  0639               	xorwf	(1+(sprintf@_val)+01h),w
  4073  028E  1D03               	skipz
  4074  028F  2A92               	goto	u3695
  4075  0290  30FF               	movlw	low(0FFFFh)
  4076  0291  0638               	xorwf	(0+(sprintf@_val)+01h),w
  4077  0292                     u3695:
  4078                           
  4079  0292  1D03               	skipz
  4080  0293  2A95               	goto	u3691
  4081  0294  2A96               	goto	u3690
  4082  0295                     u3691:
  4083  0295  2A74               	goto	l3520
  4084  0296                     u3690:
  4085  0296  2C08               	goto	l3614
  4086                           	
  4087  0297                     l854:	
  4088                           	line	777
  4089  0297  2C08               	goto	l3614
  4090                           	line	787
  4091                           	
  4092  0298                     l855:	
  4093                           	line	802
  4094                           	
  4095  0298                     l3528:	
  4096  0298  0832               	movf	(sprintf@ap),w
  4097  0299  0084               	movwf	fsr0
  4098  029A  1383               	bcf	status, 7	;select IRP bank0
  4099  029B  0800               	movf	indf,w
  4100  029C  00AD               	movwf	(??_sprintf+0)+0
  4101  029D  082D               	movf	(??_sprintf+0)+0,w
  4102  029E  00BA               	movwf	(sprintf@c)
  4103                           	
  4104  029F                     l3530:	
  4105  029F  3002               	movlw	(02h)
  4106  02A0  00AD               	movwf	(??_sprintf+0)+0
  4107  02A1  082D               	movf	(??_sprintf+0)+0,w
  4108  02A2  07B2               	addwf	(sprintf@ap),f
  4109  02A3  2AA4               	goto	l3532
  4110                           	line	805
  4111                           	
  4112  02A4                     l856:	
  4113                           	line	808
  4114                           	
  4115  02A4                     l3532:	
  4116  02A4  303A               	movlw	(sprintf@c)&0ffh
  4117  02A5  00AD               	movwf	(??_sprintf+0)+0
  4118  02A6  082D               	movf	(??_sprintf+0)+0,w
  4119  02A7  00B7               	movwf	(sprintf@_val)
  4120                           	line	809
  4121                           	
  4122  02A8                     l3534:	
  4123  02A8  3001               	movlw	low(01h)
  4124  02A9  00B8               	movwf	0+(sprintf@_val)+01h
  4125  02AA  3000               	movlw	high(01h)
  4126  02AB  00B9               	movwf	(0+(sprintf@_val)+01h)+1
  4127                           	line	810
  4128  02AC  2A3F               	goto	l3508
  4129                           	line	825
  4130                           	
  4131  02AD                     l3536:	
  4132  02AD  2AC8               	goto	l3540
  4133                           	line	638
  4134                           	
  4135  02AE                     l840:	
  4136                           	
  4137  02AE                     l3538:	
  4138  02AE  3001               	movlw	01h
  4139  02AF  1283               	bcf	status, 5	;RP0=0, select bank0
  4140  02B0  1303               	bcf	status, 6	;RP1=0, select bank0
  4141  02B1  07A0               	addwf	(sprintf@f),f
  4142  02B2  30FF               	movlw	-01h
  4143  02B3  0720               	addwf	(sprintf@f),w
  4144  02B4  0084               	movwf	fsr0
  4145  02B5  120A  158A  2000   	fcall	stringdir
              120A  118A         
  4146  02BA  00BA               	movwf	(sprintf@c)
  4147                           	; Switch size 1, requested type "space"
  4148                           ; Number of cases is 4, Range of values is 0 to 105
  4149                           ; switch strategies available:
  4150                           ; Name         Instructions Cycles
  4151                           ; simple_byte           13     7 (average)
  4152                           ; jumptable            260     6 (fixed)
  4153                           ; rangetable           110     6 (fixed)
  4154                           ; spacedrange          218     9 (fixed)
  4155                           ; locatedrange         106     3 (fixed)
  4156                           ;	Chosen strategy is simple_byte
  4157                           
  4158                           	opt asmopt_off
  4159  02BB  3A00               	xorlw	0^0	; case 0
  4160  02BC  1903               	skipnz
  4161  02BD  2C1C               	goto	l3616
  4162  02BE  3A63               	xorlw	99^0	; case 99
  4163  02BF  1903               	skipnz
  4164  02C0  2A98               	goto	l3528
  4165  02C1  3A07               	xorlw	100^99	; case 100
  4166  02C2  1903               	skipnz
  4167  02C3  2AC8               	goto	l3540
  4168  02C4  3A0D               	xorlw	105^100	; case 105
  4169  02C5  1903               	skipnz
  4170  02C6  2AC8               	goto	l3540
  4171  02C7  2AA4               	goto	l3532
  4172                           	opt asmopt_on
  4173                           
  4174                           	line	825
  4175                           	
  4176  02C8                     l845:	
  4177                           	line	1254
  4178                           	
  4179  02C8                     l3540:	
  4180  02C8  1283               	bcf	status, 5	;RP0=0, select bank0
  4181  02C9  1303               	bcf	status, 6	;RP1=0, select bank0
  4182  02CA  0832               	movf	(sprintf@ap),w
  4183  02CB  0084               	movwf	fsr0
  4184  02CC  1383               	bcf	status, 7	;select IRP bank0
  4185  02CD  0800               	movf	indf,w
  4186  02CE  00B7               	movwf	(sprintf@_val)
  4187  02CF  0A84               	incf	fsr0,f
  4188  02D0  0800               	movf	indf,w
  4189  02D1  00B8               	movwf	(sprintf@_val+1)
  4190                           	
  4191  02D2                     l3542:	
  4192  02D2  3002               	movlw	(02h)
  4193  02D3  00AD               	movwf	(??_sprintf+0)+0
  4194  02D4  082D               	movf	(??_sprintf+0)+0,w
  4195  02D5  07B2               	addwf	(sprintf@ap),f
  4196                           	line	1256
  4197                           	
  4198  02D6                     l3544:	
  4199  02D6  1FB8               	btfss	(sprintf@_val+1),7
  4200  02D7  2AD9               	goto	u3701
  4201  02D8  2ADA               	goto	u3700
  4202  02D9                     u3701:
  4203  02D9  2AE4               	goto	l3550
  4204  02DA                     u3700:
  4205                           	line	1257
  4206                           	
  4207  02DA                     l3546:	
  4208  02DA  3003               	movlw	(03h)
  4209  02DB  00AD               	movwf	(??_sprintf+0)+0
  4210  02DC  082D               	movf	(??_sprintf+0)+0,w
  4211  02DD  04B3               	iorwf	(sprintf@flag),f
  4212                           	line	1258
  4213                           	
  4214  02DE                     l3548:	
  4215  02DE  09B7               	comf	(sprintf@_val),f
  4216  02DF  09B8               	comf	(sprintf@_val+1),f
  4217  02E0  0AB7               	incf	(sprintf@_val),f
  4218  02E1  1903               	skipnz
  4219  02E2  0AB8               	incf	(sprintf@_val+1),f
  4220  02E3  2AE4               	goto	l3550
  4221                           	line	1259
  4222                           	
  4223  02E4                     l857:	
  4224                           	line	1300
  4225                           	
  4226  02E4                     l3550:	
  4227  02E4  01BA               	clrf	(sprintf@c)
  4228  02E5  1403               	bsf	status,0
  4229  02E6  0DBA               	rlf	(sprintf@c),f
  4230                           	
  4231  02E7                     l3552:	
  4232  02E7  083A               	movf	(sprintf@c),w
  4233  02E8  3A05               	xorlw	05h
  4234  02E9  1D03               	skipz
  4235  02EA  2AEC               	goto	u3711
  4236  02EB  2AED               	goto	u3710
  4237  02EC                     u3711:
  4238  02EC  2AEF               	goto	l3556
  4239  02ED                     u3710:
  4240  02ED  2B17               	goto	l3564
  4241                           	
  4242  02EE                     l3554:	
  4243  02EE  2B17               	goto	l3564
  4244                           	line	1301
  4245                           	
  4246  02EF                     l858:	
  4247                           	
  4248  02EF                     l3556:	
  4249  02EF  083A               	movf	(sprintf@c),w
  4250  02F0  00AD               	movwf	(??_sprintf+0)+0
  4251  02F1  072D               	addwf	(??_sprintf+0)+0,w
  4252  02F2  3E01               	addlw	low((_dpowers-__stringbase))
  4253  02F3  0084               	movwf	fsr0
  4254  02F4  120A  158A  2000   	fcall	stringdir
              120A  118A         
  4255  02F9  00AE               	movwf	(??_sprintf+1)+0
  4256  02FA  120A  158A  2000   	fcall	stringdir
              120A  118A         
  4257  02FF  00AF               	movwf	(??_sprintf+1)+0+1
  4258  0300  082F               	movf	1+(??_sprintf+1)+0,w
  4259  0301  0238               	subwf	(sprintf@_val+1),w
  4260  0302  1D03               	skipz
  4261  0303  2B06               	goto	u3725
  4262  0304  082E               	movf	0+(??_sprintf+1)+0,w
  4263  0305  0237               	subwf	(sprintf@_val),w
  4264  0306                     u3725:
  4265  0306  1803               	skipnc
  4266  0307  2B09               	goto	u3721
  4267  0308  2B0A               	goto	u3720
  4268  0309                     u3721:
  4269  0309  2B0C               	goto	l3560
  4270  030A                     u3720:
  4271  030A  2B17               	goto	l3564
  4272                           	line	1302
  4273                           	
  4274  030B                     l3558:	
  4275  030B  2B17               	goto	l3564
  4276                           	
  4277  030C                     l860:	
  4278                           	line	1300
  4279                           	
  4280  030C                     l3560:	
  4281  030C  3001               	movlw	(01h)
  4282  030D  00AD               	movwf	(??_sprintf+0)+0
  4283  030E  082D               	movf	(??_sprintf+0)+0,w
  4284  030F  07BA               	addwf	(sprintf@c),f
  4285                           	
  4286  0310                     l3562:	
  4287  0310  083A               	movf	(sprintf@c),w
  4288  0311  3A05               	xorlw	05h
  4289  0312  1D03               	skipz
  4290  0313  2B15               	goto	u3731
  4291  0314  2B16               	goto	u3730
  4292  0315                     u3731:
  4293  0315  2AEF               	goto	l3556
  4294  0316                     u3730:
  4295  0316  2B17               	goto	l3564
  4296                           	
  4297  0317                     l859:	
  4298                           	line	1340
  4299                           	
  4300  0317                     l3564:	
  4301  0317  0835               	movf	(sprintf@width+1),w
  4302  0318  0434               	iorwf	(sprintf@width),w
  4303  0319  1903               	skipnz
  4304  031A  2B1C               	goto	u3741
  4305  031B  2B1D               	goto	u3740
  4306  031C                     u3741:
  4307  031C  2B29               	goto	l861
  4308  031D                     u3740:
  4309                           	
  4310  031D                     l3566:	
  4311  031D  0833               	movf	(sprintf@flag),w
  4312  031E  3903               	andlw	03h
  4313  031F  1903               	btfsc	status,2
  4314  0320  2B22               	goto	u3751
  4315  0321  2B23               	goto	u3750
  4316  0322                     u3751:
  4317  0322  2B29               	goto	l861
  4318  0323                     u3750:
  4319                           	line	1341
  4320                           	
  4321  0323                     l3568:	
  4322  0323  30FF               	movlw	low(-1)
  4323  0324  07B4               	addwf	(sprintf@width),f
  4324  0325  1803               	skipnc
  4325  0326  0AB5               	incf	(sprintf@width+1),f
  4326  0327  30FF               	movlw	high(-1)
  4327  0328  07B5               	addwf	(sprintf@width+1),f
  4328                           	
  4329  0329                     l861:	
  4330                           	line	1376
  4331  0329  083A               	movf	(sprintf@c),w
  4332  032A  00AD               	movwf	(??_sprintf+0)+0
  4333  032B  01AE               	clrf	(??_sprintf+0)+0+1
  4334  032C  1BAD               	btfsc	(??_sprintf+0)+0,7
  4335  032D  03AE               	decf	(??_sprintf+0)+0+1,f
  4336  032E  082E               	movf	1+(??_sprintf+0)+0,w
  4337  032F  3A80               	xorlw	80h
  4338  0330  00AF               	movwf	(??_sprintf+2)+0
  4339  0331  0835               	movf	(sprintf@width+1),w
  4340  0332  3A80               	xorlw	80h
  4341  0333  022F               	subwf	(??_sprintf+2)+0,w
  4342  0334  1D03               	skipz
  4343  0335  2B38               	goto	u3765
  4344  0336  0834               	movf	(sprintf@width),w
  4345  0337  022D               	subwf	0+(??_sprintf+0)+0,w
  4346  0338                     u3765:
  4347                           
  4348  0338  1803               	skipnc
  4349  0339  2B3B               	goto	u3761
  4350  033A  2B3C               	goto	u3760
  4351  033B                     u3761:
  4352  033B  2B4A               	goto	l3572
  4353  033C                     u3760:
  4354                           	line	1377
  4355                           	
  4356  033C                     l3570:	
  4357  033C  1283               	bcf	status, 5	;RP0=0, select bank0
  4358  033D  1303               	bcf	status, 6	;RP1=0, select bank0
  4359  033E  083A               	movf	(sprintf@c),w
  4360  033F  00AD               	movwf	(??_sprintf+0)+0
  4361  0340  01AE               	clrf	(??_sprintf+0)+0+1
  4362  0341  1BAD               	btfsc	(??_sprintf+0)+0,7
  4363  0342  03AE               	decf	(??_sprintf+0)+0+1,f
  4364  0343  082D               	movf	0+(??_sprintf+0)+0,w
  4365  0344  02B4               	subwf	(sprintf@width),f
  4366  0345  082E               	movf	1+(??_sprintf+0)+0,w
  4367  0346  1C03               	skipc
  4368  0347  03B5               	decf	(sprintf@width+1),f
  4369  0348  02B5               	subwf	(sprintf@width+1),f
  4370  0349  2B4F               	goto	l3574
  4371                           	line	1378
  4372                           	
  4373  034A                     l862:	
  4374                           	line	1379
  4375                           	
  4376  034A                     l3572:	
  4377  034A  1283               	bcf	status, 5	;RP0=0, select bank0
  4378  034B  1303               	bcf	status, 6	;RP1=0, select bank0
  4379  034C  01B4               	clrf	(sprintf@width)
  4380  034D  01B5               	clrf	(sprintf@width+1)
  4381  034E  2B4F               	goto	l3574
  4382                           	
  4383  034F                     l863:	
  4384                           	line	1382
  4385                           	
  4386  034F                     l3574:	
  4387  034F  1D33               	btfss	(sprintf@flag),(2)&7
  4388  0350  2B52               	goto	u3771
  4389  0351  2B53               	goto	u3770
  4390  0352                     u3771:
  4391  0352  2B86               	goto	l3590
  4392  0353                     u3770:
  4393                           	line	1387
  4394                           	
  4395  0353                     l3576:	
  4396  0353  0833               	movf	(sprintf@flag),w
  4397  0354  3903               	andlw	03h
  4398  0355  1903               	btfsc	status,2
  4399  0356  2B58               	goto	u3781
  4400  0357  2B59               	goto	u3780
  4401  0358                     u3781:
  4402  0358  2B65               	goto	l3582
  4403  0359                     u3780:
  4404                           	line	1388
  4405                           	
  4406  0359                     l3578:	
  4407  0359  302D               	movlw	(02Dh)
  4408  035A  00AD               	movwf	(??_sprintf+0)+0
  4409  035B  0836               	movf	(sprintf@sp),w
  4410  035C  0084               	movwf	fsr0
  4411  035D  082D               	movf	(??_sprintf+0)+0,w
  4412  035E  1383               	bcf	status, 7	;select IRP bank0
  4413  035F  0080               	movwf	indf
  4414                           	
  4415  0360                     l3580:	
  4416  0360  3001               	movlw	(01h)
  4417  0361  00AD               	movwf	(??_sprintf+0)+0
  4418  0362  082D               	movf	(??_sprintf+0)+0,w
  4419  0363  07B6               	addwf	(sprintf@sp),f
  4420  0364  2B65               	goto	l3582
  4421                           	
  4422  0365                     l865:	
  4423                           	line	1410
  4424                           	
  4425  0365                     l3582:	
  4426  0365  0835               	movf	(sprintf@width+1),w
  4427  0366  0434               	iorwf	(sprintf@width),w
  4428  0367  1903               	skipnz
  4429  0368  2B6A               	goto	u3791
  4430  0369  2B6B               	goto	u3790
  4431  036A                     u3791:
  4432  036A  2BB9               	goto	l3604
  4433  036B                     u3790:
  4434  036B  2B6C               	goto	l3584
  4435                           	line	1411
  4436                           	
  4437  036C                     l867:	
  4438                           	line	1412
  4439                           	
  4440  036C                     l3584:	
  4441  036C  3030               	movlw	(030h)
  4442  036D  00AD               	movwf	(??_sprintf+0)+0
  4443  036E  0836               	movf	(sprintf@sp),w
  4444  036F  0084               	movwf	fsr0
  4445  0370  082D               	movf	(??_sprintf+0)+0,w
  4446  0371  1383               	bcf	status, 7	;select IRP bank0
  4447  0372  0080               	movwf	indf
  4448                           	
  4449  0373                     l3586:	
  4450  0373  3001               	movlw	(01h)
  4451  0374  00AD               	movwf	(??_sprintf+0)+0
  4452  0375  082D               	movf	(??_sprintf+0)+0,w
  4453  0376  07B6               	addwf	(sprintf@sp),f
  4454                           	line	1413
  4455                           	
  4456  0377                     l3588:	
  4457  0377  30FF               	movlw	low(-1)
  4458  0378  07B4               	addwf	(sprintf@width),f
  4459  0379  1803               	skipnc
  4460  037A  0AB5               	incf	(sprintf@width+1),f
  4461  037B  30FF               	movlw	high(-1)
  4462  037C  07B5               	addwf	(sprintf@width+1),f
  4463  037D  0835               	movf	(((sprintf@width+1))),w
  4464  037E  0434               	iorwf	(((sprintf@width))),w
  4465  037F  1D03               	skipz
  4466  0380  2B82               	goto	u3801
  4467  0381  2B83               	goto	u3800
  4468  0382                     u3801:
  4469  0382  2B6C               	goto	l3584
  4470  0383                     u3800:
  4471  0383  2BB9               	goto	l3604
  4472                           	
  4473  0384                     l868:	
  4474  0384  2BB9               	goto	l3604
  4475                           	
  4476  0385                     l866:	
  4477                           	line	1415
  4478  0385  2BB9               	goto	l3604
  4479                           	
  4480  0386                     l864:	
  4481                           	line	1423
  4482                           	
  4483  0386                     l3590:	
  4484  0386  0835               	movf	(sprintf@width+1),w
  4485  0387  0434               	iorwf	(sprintf@width),w
  4486  0388  1903               	skipnz
  4487  0389  2B8B               	goto	u3811
  4488  038A  2B8C               	goto	u3810
  4489  038B                     u3811:
  4490  038B  2BA6               	goto	l3598
  4491  038C                     u3810:
  4492  038C  2B8D               	goto	l3592
  4493                           	line	1424
  4494                           	
  4495  038D                     l871:	
  4496                           	line	1425
  4497                           	
  4498  038D                     l3592:	
  4499  038D  3020               	movlw	(020h)
  4500  038E  00AD               	movwf	(??_sprintf+0)+0
  4501  038F  0836               	movf	(sprintf@sp),w
  4502  0390  0084               	movwf	fsr0
  4503  0391  082D               	movf	(??_sprintf+0)+0,w
  4504  0392  1383               	bcf	status, 7	;select IRP bank0
  4505  0393  0080               	movwf	indf
  4506                           	
  4507  0394                     l3594:	
  4508  0394  3001               	movlw	(01h)
  4509  0395  00AD               	movwf	(??_sprintf+0)+0
  4510  0396  082D               	movf	(??_sprintf+0)+0,w
  4511  0397  07B6               	addwf	(sprintf@sp),f
  4512                           	line	1426
  4513                           	
  4514  0398                     l3596:	
  4515  0398  30FF               	movlw	low(-1)
  4516  0399  07B4               	addwf	(sprintf@width),f
  4517  039A  1803               	skipnc
  4518  039B  0AB5               	incf	(sprintf@width+1),f
  4519  039C  30FF               	movlw	high(-1)
  4520  039D  07B5               	addwf	(sprintf@width+1),f
  4521  039E  0835               	movf	(((sprintf@width+1))),w
  4522  039F  0434               	iorwf	(((sprintf@width))),w
  4523  03A0  1D03               	skipz
  4524  03A1  2BA3               	goto	u3821
  4525  03A2  2BA4               	goto	u3820
  4526  03A3                     u3821:
  4527  03A3  2B8D               	goto	l3592
  4528  03A4                     u3820:
  4529  03A4  2BA6               	goto	l3598
  4530                           	
  4531  03A5                     l872:	
  4532  03A5  2BA6               	goto	l3598
  4533                           	
  4534  03A6                     l870:	
  4535                           	line	1433
  4536                           	
  4537  03A6                     l3598:	
  4538  03A6  0833               	movf	(sprintf@flag),w
  4539  03A7  3903               	andlw	03h
  4540  03A8  1903               	btfsc	status,2
  4541  03A9  2BAB               	goto	u3831
  4542  03AA  2BAC               	goto	u3830
  4543  03AB                     u3831:
  4544  03AB  2BB9               	goto	l3604
  4545  03AC                     u3830:
  4546                           	line	1434
  4547                           	
  4548  03AC                     l3600:	
  4549  03AC  302D               	movlw	(02Dh)
  4550  03AD  00AD               	movwf	(??_sprintf+0)+0
  4551  03AE  0836               	movf	(sprintf@sp),w
  4552  03AF  0084               	movwf	fsr0
  4553  03B0  082D               	movf	(??_sprintf+0)+0,w
  4554  03B1  1383               	bcf	status, 7	;select IRP bank0
  4555  03B2  0080               	movwf	indf
  4556                           	
  4557  03B3                     l3602:	
  4558  03B3  3001               	movlw	(01h)
  4559  03B4  00AD               	movwf	(??_sprintf+0)+0
  4560  03B5  082D               	movf	(??_sprintf+0)+0,w
  4561  03B6  07B6               	addwf	(sprintf@sp),f
  4562  03B7  2BB9               	goto	l3604
  4563                           	
  4564  03B8                     l873:	
  4565  03B8  2BB9               	goto	l3604
  4566                           	line	1464
  4567                           	
  4568  03B9                     l869:	
  4569                           	line	1467
  4570                           	
  4571  03B9                     l3604:	
  4572  03B9  083A               	movf	(sprintf@c),w
  4573  03BA  00AD               	movwf	(??_sprintf+0)+0
  4574  03BB  082D               	movf	(??_sprintf+0)+0,w
  4575  03BC  00B1               	movwf	(sprintf@prec)
  4576                           	line	1469
  4577  03BD  2BFC               	goto	l3612
  4578                           	
  4579  03BE                     l875:	
  4580                           	line	1484
  4581                           	
  4582  03BE                     l3606:	
  4583  03BE  300A               	movlw	low(0Ah)
  4584  03BF  00F8               	movwf	(?___lwmod)
  4585  03C0  3000               	movlw	high(0Ah)
  4586  03C1  00F9               	movwf	((?___lwmod))+1
  4587  03C2  0831               	movf	(sprintf@prec),w
  4588  03C3  00AD               	movwf	(??_sprintf+0)+0
  4589  03C4  072D               	addwf	(??_sprintf+0)+0,w
  4590  03C5  3E01               	addlw	low((_dpowers-__stringbase))
  4591  03C6  0084               	movwf	fsr0
  4592  03C7  120A  158A  2000   	fcall	stringdir
              120A  118A         
  4593  03CC  00F0               	movwf	(?___lwdiv)
  4594  03CD  120A  158A  2000   	fcall	stringdir
              120A  118A         
  4595  03D2  00F1               	movwf	(?___lwdiv+1)
  4596  03D3  0838               	movf	(sprintf@_val+1),w
  4597  03D4  01F3               	clrf	1+(?___lwdiv)+02h
  4598  03D5  07F3               	addwf	1+(?___lwdiv)+02h
  4599  03D6  0837               	movf	(sprintf@_val),w
  4600  03D7  01F2               	clrf	0+(?___lwdiv)+02h
  4601  03D8  07F2               	addwf	0+(?___lwdiv)+02h
  4602                           
  4603  03D9  120A  158A  23EC   	fcall	___lwdiv
              120A  118A         
  4604  03DE  0871               	movf	(1+(?___lwdiv)),w
  4605  03DF  01FB               	clrf	1+(?___lwmod)+02h
  4606  03E0  07FB               	addwf	1+(?___lwmod)+02h
  4607  03E1  0870               	movf	(0+(?___lwdiv)),w
  4608  03E2  01FA               	clrf	0+(?___lwmod)+02h
  4609  03E3  07FA               	addwf	0+(?___lwmod)+02h
  4610                           
  4611  03E4  120A  158A  23A8   	fcall	___lwmod
              120A  118A         
  4612  03E9  0878               	movf	(0+(?___lwmod)),w
  4613  03EA  3E30               	addlw	030h
  4614  03EB  1283               	bcf	status, 5	;RP0=0, select bank0
  4615  03EC  1303               	bcf	status, 6	;RP1=0, select bank0
  4616  03ED  00AE               	movwf	(??_sprintf+1)+0
  4617  03EE  082E               	movf	(??_sprintf+1)+0,w
  4618  03EF  00BA               	movwf	(sprintf@c)
  4619                           	line	1516
  4620                           	
  4621  03F0                     l3608:	
  4622  03F0  083A               	movf	(sprintf@c),w
  4623  03F1  00AD               	movwf	(??_sprintf+0)+0
  4624  03F2  0836               	movf	(sprintf@sp),w
  4625  03F3  0084               	movwf	fsr0
  4626  03F4  082D               	movf	(??_sprintf+0)+0,w
  4627  03F5  1383               	bcf	status, 7	;select IRP bank0
  4628  03F6  0080               	movwf	indf
  4629                           	
  4630  03F7                     l3610:	
  4631  03F7  3001               	movlw	(01h)
  4632  03F8  00AD               	movwf	(??_sprintf+0)+0
  4633  03F9  082D               	movf	(??_sprintf+0)+0,w
  4634  03FA  07B6               	addwf	(sprintf@sp),f
  4635  03FB  2BFC               	goto	l3612
  4636                           	line	1517
  4637                           	
  4638  03FC                     l874:	
  4639                           	line	1469
  4640                           	
  4641  03FC                     l3612:	
  4642  03FC  30FF               	movlw	(-1)
  4643  03FD  00AD               	movwf	(??_sprintf+0)+0
  4644  03FE  082D               	movf	(??_sprintf+0)+0,w
  4645  03FF  07B1               	addwf	(sprintf@prec),f
  4646  0400  0831               	movf	((sprintf@prec)),w
  4647  0401  3AFF               	xorlw	-1
  4648  0402  1D03               	skipz
  4649  0403  2C05               	goto	u3841
  4650  0404  2C06               	goto	u3840
  4651  0405                     u3841:
  4652  0405  2BBE               	goto	l3606
  4653  0406                     u3840:
  4654  0406  2C08               	goto	l3614
  4655                           	
  4656  0407                     l876:	
  4657  0407  2C08               	goto	l3614
  4658                           	line	1525
  4659                           	
  4660  0408                     l828:	
  4661                           	line	540
  4662                           	
  4663  0408                     l3614:	
  4664  0408  3001               	movlw	01h
  4665  0409  07A0               	addwf	(sprintf@f),f
  4666  040A  30FF               	movlw	-01h
  4667  040B  0720               	addwf	(sprintf@f),w
  4668  040C  0084               	movwf	fsr0
  4669  040D  120A  158A  2000   	fcall	stringdir
              120A  118A         
  4670  0412  00AD               	movwf	(??_sprintf+0)+0
  4671  0413  082D               	movf	(??_sprintf+0)+0,w
  4672  0414  00BA               	movwf	(sprintf@c)
  4673  0415  08BA               	movf	((sprintf@c)),f
  4674  0416  1D03               	skipz
  4675  0417  2C19               	goto	u3851
  4676  0418  2C1A               	goto	u3850
  4677  0419                     u3851:
  4678  0419  29B9               	goto	l3482
  4679  041A                     u3850:
  4680  041A  2C1C               	goto	l3616
  4681                           	
  4682  041B                     l877:	
  4683  041B  2C1C               	goto	l3616
  4684                           	line	1527
  4685                           	
  4686  041C                     l842:	
  4687                           	line	1530
  4688                           	
  4689  041C                     l3616:	
  4690  041C  1283               	bcf	status, 5	;RP0=0, select bank0
  4691  041D  1303               	bcf	status, 6	;RP1=0, select bank0
  4692  041E  0836               	movf	(sprintf@sp),w
  4693  041F  0084               	movwf	fsr0
  4694  0420  1383               	bcf	status, 7	;select IRP bank0
  4695  0421  0180               	clrf	indf
  4696  0422  2C23               	goto	l878
  4697                           	line	1532
  4698                           	
  4699  0423                     l3618:	
  4700                           	line	1533
  4701                           ;	Return value of _sprintf is never used
  4702                           	
  4703  0423                     l878:	
  4704  0423  0008               	return
  4705                           	opt stack 0
  4706                           GLOBAL	__end_of_sprintf
  4707  0424                     	__end_of_sprintf:
  4708 ;; =============== function _sprintf ends ============
  4709                           
  4710                           	signat	_sprintf,4698
  4711                           	global	_read_adc
  4712                           psect	text467,local,class=CODE,delta=2
  4713                           global __ptext467
  4714  0D7F                     __ptext467:
  4715                           
  4716 ;; *************** function _read_adc *****************
  4717 ;; Defined at:
  4718 ;;		line 431 in file "C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;		None
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;  result_temp     4    4[BANK0 ] unsigned long 
  4723 ;;  i               2    8[BANK0 ] unsigned short 
  4724 ;; Return value:  Size  Location     Type
  4725 ;;		None               void
  4726 ;; Registers used:
  4727 ;;		wreg, status,2, status,0, pclath, cstack
  4728 ;; Tracked objects:
  4729 ;;		On entry : 0/0
  4730 ;;		On exit  : 0/0
  4731 ;;		Unchanged: 0/0
  4732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4733 ;;      Params:         0       0       0       0       0
  4734 ;;      Locals:         0       6       0       0       0
  4735 ;;      Temps:          0       4       0       0       0
  4736 ;;      Totals:         0      10       0       0       0
  4737 ;;Total ram usage:       10 bytes
  4738 ;; Hardware stack levels used:    1
  4739 ;; Hardware stack levels required when called:    1
  4740 ;; This function calls:
  4741 ;;		___lldiv
  4742 ;; This function is called by:
  4743 ;;		_main
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           psect	text467
  4747                           	file	"C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  4748                           	line	431
  4749                           	global	__size_of_read_adc
  4750  0083                     	__size_of_read_adc	equ	__end_of_read_adc-_read_adc
  4751                           	
  4752  0D7F                     _read_adc:	
  4753                           	opt	stack 6
  4754                           ; Regs used in _read_adc: [wreg+status,2+status,0+pclath+cstack]
  4755                           	line	433
  4756                           	
  4757  0D7F                     l3468:	
  4758                           ;MPLAB3.c: 432: unsigned short i;
  4759                           ;MPLAB3.c: 433: unsigned long result_temp=0;
  4760  0D7F  3000               	movlw	0
  4761  0D80  1283               	bcf	status, 5	;RP0=0, select bank0
  4762  0D81  1303               	bcf	status, 6	;RP1=0, select bank0
  4763  0D82  00A7               	movwf	(read_adc@result_temp+3)
  4764  0D83  3000               	movlw	0
  4765  0D84  00A6               	movwf	(read_adc@result_temp+2)
  4766  0D85  3000               	movlw	0
  4767  0D86  00A5               	movwf	(read_adc@result_temp+1)
  4768  0D87  3000               	movlw	0
  4769  0D88  00A4               	movwf	(read_adc@result_temp)
  4770                           
  4771                           	line	434
  4772                           ;MPLAB3.c: 434: for(i=2000;i>0;i-=1)
  4773  0D89  30D0               	movlw	low(07D0h)
  4774  0D8A  00A8               	movwf	(read_adc@i)
  4775  0D8B  3007               	movlw	high(07D0h)
  4776  0D8C  00A9               	movwf	((read_adc@i))+1
  4777                           	
  4778  0D8D                     l3470:	
  4779  0D8D  0829               	movf	((read_adc@i+1)),w
  4780  0D8E  0428               	iorwf	((read_adc@i)),w
  4781  0D8F  1D03               	skipz
  4782  0D90  2D92               	goto	u3601
  4783  0D91  2D93               	goto	u3600
  4784  0D92                     u3601:
  4785  0D92  2D95               	goto	l787
  4786  0D93                     u3600:
  4787  0D93  2DE4               	goto	l3478
  4788                           	
  4789  0D94                     l3472:	
  4790  0D94  2DE4               	goto	l3478
  4791                           	line	436
  4792                           	
  4793  0D95                     l787:	
  4794                           	line	438
  4795                           ;MPLAB3.c: 436: {
  4796                           ;MPLAB3.c: 438: ADGO = 1;
  4797  0D95  151F               	bsf	(250/8),(250)&7
  4798                           	line	439
  4799                           ;MPLAB3.c: 439: while(ADGO==1);
  4800  0D96  2D97               	goto	l789
  4801                           	
  4802  0D97                     l790:	
  4803                           	
  4804  0D97                     l789:	
  4805  0D97  191F               	btfsc	(250/8),(250)&7
  4806  0D98  2D9A               	goto	u3611
  4807  0D99  2D9B               	goto	u3610
  4808  0D9A                     u3611:
  4809  0D9A  2D97               	goto	l789
  4810  0D9B                     u3610:
  4811  0D9B  2D9C               	goto	l3474
  4812                           	
  4813  0D9C                     l791:	
  4814                           	line	440
  4815                           	
  4816  0D9C                     l3474:	
  4817                           ;MPLAB3.c: 440: result=ADRESH;
  4818  0D9C  081E               	movf	(30),w	;volatile
  4819  0D9D  00A0               	movwf	(??_read_adc+0)+0
  4820  0D9E  01A1               	clrf	(??_read_adc+0)+0+1
  4821  0D9F  0820               	movf	0+(??_read_adc+0)+0,w
  4822  0DA0  00D3               	movwf	(_result)
  4823  0DA1  0821               	movf	1+(??_read_adc+0)+0,w
  4824  0DA2  00D4               	movwf	(_result+1)
  4825                           	line	441
  4826                           ;MPLAB3.c: 441: result=result<<8;
  4827  0DA3  0853               	movf	(_result),w
  4828  0DA4  00A1               	movwf	(??_read_adc+0)+0+1
  4829  0DA5  01A0               	clrf	(??_read_adc+0)+0
  4830  0DA6  0820               	movf	0+(??_read_adc+0)+0,w
  4831  0DA7  00D3               	movwf	(_result)
  4832  0DA8  0821               	movf	1+(??_read_adc+0)+0,w
  4833  0DA9  00D4               	movwf	(_result+1)
  4834                           	line	442
  4835                           ;MPLAB3.c: 442: result=256*result|ADRESL;
  4836  0DAA  1683               	bsf	status, 5	;RP0=1, select bank1
  4837  0DAB  1303               	bcf	status, 6	;RP1=0, select bank1
  4838  0DAC  081E               	movf	(158)^080h,w	;volatile
  4839  0DAD  1283               	bcf	status, 5	;RP0=0, select bank0
  4840  0DAE  1303               	bcf	status, 6	;RP1=0, select bank0
  4841  0DAF  00A0               	movwf	(??_read_adc+0)+0
  4842  0DB0  01A1               	clrf	(??_read_adc+0)+0+1
  4843  0DB1  0853               	movf	(_result),w
  4844  0DB2  00A3               	movwf	(??_read_adc+2)+0+1
  4845  0DB3  01A2               	clrf	(??_read_adc+2)+0
  4846  0DB4  0820               	movf	0+(??_read_adc+0)+0,w
  4847  0DB5  0422               	iorwf	0+(??_read_adc+2)+0,w
  4848  0DB6  00D3               	movwf	(_result)
  4849  0DB7  0821               	movf	1+(??_read_adc+0)+0,w
  4850  0DB8  0423               	iorwf	1+(??_read_adc+2)+0,w
  4851  0DB9  00D4               	movwf	1+(_result)
  4852                           	line	443
  4853                           ;MPLAB3.c: 443: result_temp+=result;
  4854  0DBA  0853               	movf	(_result),w
  4855  0DBB  00A0               	movwf	((??_read_adc+0)+0)
  4856  0DBC  0854               	movf	(_result+1),w
  4857  0DBD  00A1               	movwf	((??_read_adc+0)+0+1)
  4858  0DBE  01A2               	clrf	((??_read_adc+0)+0+2)
  4859  0DBF  01A3               	clrf	((??_read_adc+0)+0+3)
  4860  0DC0  0820               	movf	0+(??_read_adc+0)+0,w
  4861  0DC1  07A4               	addwf	(read_adc@result_temp),f
  4862  0DC2  0821               	movf	1+(??_read_adc+0)+0,w
  4863  0DC3  1103               	clrz
  4864  0DC4  1803               	skipnc
  4865  0DC5  3E01               	addlw	1
  4866  0DC6  1903               	skipnz
  4867  0DC7  2DC9               	goto	u3621
  4868  0DC8  07A5               	addwf	(read_adc@result_temp+1),f
  4869  0DC9                     u3621:
  4870  0DC9  0822               	movf	2+(??_read_adc+0)+0,w
  4871  0DCA  1103               	clrz
  4872  0DCB  1803               	skipnc
  4873  0DCC  3E01               	addlw	1
  4874  0DCD  1903               	skipnz
  4875  0DCE  2DD0               	goto	u3622
  4876  0DCF  07A6               	addwf	(read_adc@result_temp+2),f
  4877  0DD0                     u3622:
  4878  0DD0  0823               	movf	3+(??_read_adc+0)+0,w
  4879  0DD1  1103               	clrz
  4880  0DD2  1803               	skipnc
  4881  0DD3  3E01               	addlw	1
  4882  0DD4  1903               	skipnz
  4883  0DD5  2DD7               	goto	u3623
  4884  0DD6  07A7               	addwf	(read_adc@result_temp+3),f
  4885  0DD7                     u3623:
  4886                           
  4887                           	line	434
  4888  0DD7  3001               	movlw	low(01h)
  4889  0DD8  02A8               	subwf	(read_adc@i),f
  4890  0DD9  3000               	movlw	high(01h)
  4891  0DDA  1C03               	skipc
  4892  0DDB  03A9               	decf	(read_adc@i+1),f
  4893  0DDC  02A9               	subwf	(read_adc@i+1),f
  4894                           	
  4895  0DDD                     l3476:	
  4896  0DDD  0829               	movf	((read_adc@i+1)),w
  4897  0DDE  0428               	iorwf	((read_adc@i)),w
  4898  0DDF  1D03               	skipz
  4899  0DE0  2DE2               	goto	u3631
  4900  0DE1  2DE3               	goto	u3630
  4901  0DE2                     u3631:
  4902  0DE2  2D95               	goto	l787
  4903  0DE3                     u3630:
  4904  0DE3  2DE4               	goto	l3478
  4905                           	
  4906  0DE4                     l788:	
  4907                           	line	448
  4908                           	
  4909  0DE4                     l3478:	
  4910                           ;MPLAB3.c: 445: }
  4911                           ;MPLAB3.c: 448: result = result_temp/2000;
  4912  0DE4  3000               	movlw	0
  4913  0DE5  00F3               	movwf	(?___lldiv+3)
  4914  0DE6  3000               	movlw	0
  4915  0DE7  00F2               	movwf	(?___lldiv+2)
  4916  0DE8  3007               	movlw	07h
  4917  0DE9  00F1               	movwf	(?___lldiv+1)
  4918  0DEA  30D0               	movlw	0D0h
  4919  0DEB  00F0               	movwf	(?___lldiv)
  4920                           
  4921  0DEC  0827               	movf	(read_adc@result_temp+3),w
  4922  0DED  00F7               	movwf	3+(?___lldiv)+04h
  4923  0DEE  0826               	movf	(read_adc@result_temp+2),w
  4924  0DEF  00F6               	movwf	2+(?___lldiv)+04h
  4925  0DF0  0825               	movf	(read_adc@result_temp+1),w
  4926  0DF1  00F5               	movwf	1+(?___lldiv)+04h
  4927  0DF2  0824               	movf	(read_adc@result_temp),w
  4928  0DF3  00F4               	movwf	0+(?___lldiv)+04h
  4929                           
  4930  0DF4  120A  158A  2496   	fcall	___lldiv
              120A  158A         
  4931  0DF9  0871               	movf	1+(((0+(?___lldiv)))),w
  4932  0DFA  1283               	bcf	status, 5	;RP0=0, select bank0
  4933  0DFB  1303               	bcf	status, 6	;RP1=0, select bank0
  4934  0DFC  01D4               	clrf	(_result+1)
  4935  0DFD  07D4               	addwf	(_result+1)
  4936  0DFE  0870               	movf	0+(((0+(?___lldiv)))),w
  4937  0DFF  01D3               	clrf	(_result)
  4938  0E00  07D3               	addwf	(_result)
  4939                           
  4940                           	line	450
  4941                           	
  4942  0E01                     l792:	
  4943  0E01  0008               	return
  4944                           	opt stack 0
  4945                           GLOBAL	__end_of_read_adc
  4946  0E02                     	__end_of_read_adc:
  4947 ;; =============== function _read_adc ends ============
  4948                           
  4949                           	signat	_read_adc,88
  4950                           	global	___lldiv
  4951                           psect	text468,local,class=CODE,delta=2
  4952                           global __ptext468
  4953  0C96                     __ptext468:
  4954                           
  4955 ;; *************** function ___lldiv *****************
  4956 ;; Defined at:
  4957 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\lldiv.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  divisor         4    0[COMMON] unsigned long 
  4960 ;;  dividend        4    4[COMMON] unsigned long 
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;  quotient        4    9[COMMON] unsigned long 
  4963 ;;  counter         1   13[COMMON] unsigned char 
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  4    0[COMMON] unsigned long 
  4966 ;; Registers used:
  4967 ;;		wreg, status,2, status,0
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4973 ;;      Params:         8       0       0       0       0
  4974 ;;      Locals:         5       0       0       0       0
  4975 ;;      Temps:          1       0       0       0       0
  4976 ;;      Totals:        14       0       0       0       0
  4977 ;;Total ram usage:       14 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; This function calls:
  4980 ;;		Nothing
  4981 ;; This function is called by:
  4982 ;;		_dis_num
  4983 ;;		_read_adc
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           psect	text468
  4987                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\lldiv.c"
  4988                           	line	5
  4989                           	global	__size_of___lldiv
  4990  006E                     	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  4991                           	
  4992  0C96                     ___lldiv:	
  4993                           	opt	stack 6
  4994                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4995                           	line	9
  4996                           	
  4997  0C96                     l3402:	
  4998  0C96  3000               	movlw	0
  4999  0C97  00FC               	movwf	(___lldiv@quotient+3)
  5000  0C98  3000               	movlw	0
  5001  0C99  00FB               	movwf	(___lldiv@quotient+2)
  5002  0C9A  3000               	movlw	0
  5003  0C9B  00FA               	movwf	(___lldiv@quotient+1)
  5004  0C9C  3000               	movlw	0
  5005  0C9D  00F9               	movwf	(___lldiv@quotient)
  5006                           
  5007                           	line	10
  5008  0C9E  0873               	movf	(___lldiv@divisor+3),w
  5009  0C9F  0472               	iorwf	(___lldiv@divisor+2),w
  5010  0CA0  0471               	iorwf	(___lldiv@divisor+1),w
  5011  0CA1  0470               	iorwf	(___lldiv@divisor),w
  5012  0CA2  1903               	skipnz
  5013  0CA3  2CA5               	goto	u3471
  5014  0CA4  2CA6               	goto	u3470
  5015  0CA5                     u3471:
  5016  0CA5  2CFA               	goto	l3422
  5017  0CA6                     u3470:
  5018                           	line	11
  5019                           	
  5020  0CA6                     l3404:	
  5021  0CA6  01FD               	clrf	(___lldiv@counter)
  5022  0CA7  1403               	bsf	status,0
  5023  0CA8  0DFD               	rlf	(___lldiv@counter),f
  5024                           	line	12
  5025  0CA9  2CB8               	goto	l3408
  5026                           	
  5027  0CAA                     l1066:	
  5028                           	line	13
  5029                           	
  5030  0CAA                     l3406:	
  5031  0CAA  3001               	movlw	01h
  5032  0CAB  00F8               	movwf	(??___lldiv+0)+0
  5033  0CAC                     u3485:
  5034  0CAC  1003               	clrc
  5035  0CAD  0DF0               	rlf	(___lldiv@divisor),f
  5036  0CAE  0DF1               	rlf	(___lldiv@divisor+1),f
  5037  0CAF  0DF2               	rlf	(___lldiv@divisor+2),f
  5038  0CB0  0DF3               	rlf	(___lldiv@divisor+3),f
  5039  0CB1  0BF8               	decfsz	(??___lldiv+0)+0
  5040  0CB2  2CAC               	goto	u3485
  5041                           	line	14
  5042  0CB3  3001               	movlw	(01h)
  5043  0CB4  00F8               	movwf	(??___lldiv+0)+0
  5044  0CB5  0878               	movf	(??___lldiv+0)+0,w
  5045  0CB6  07FD               	addwf	(___lldiv@counter),f
  5046  0CB7  2CB8               	goto	l3408
  5047                           	line	15
  5048                           	
  5049  0CB8                     l1065:	
  5050                           	line	12
  5051                           	
  5052  0CB8                     l3408:	
  5053  0CB8  1FF3               	btfss	(___lldiv@divisor+3),(31)&7
  5054  0CB9  2CBB               	goto	u3491
  5055  0CBA  2CBC               	goto	u3490
  5056  0CBB                     u3491:
  5057  0CBB  2CAA               	goto	l3406
  5058  0CBC                     u3490:
  5059  0CBC  2CBE               	goto	l3410
  5060                           	
  5061  0CBD                     l1067:	
  5062  0CBD  2CBE               	goto	l3410
  5063                           	line	16
  5064                           	
  5065  0CBE                     l1068:	
  5066                           	line	17
  5067                           	
  5068  0CBE                     l3410:	
  5069  0CBE  3001               	movlw	01h
  5070  0CBF  00F8               	movwf	(??___lldiv+0)+0
  5071  0CC0                     u3505:
  5072  0CC0  1003               	clrc
  5073  0CC1  0DF9               	rlf	(___lldiv@quotient),f
  5074  0CC2  0DFA               	rlf	(___lldiv@quotient+1),f
  5075  0CC3  0DFB               	rlf	(___lldiv@quotient+2),f
  5076  0CC4  0DFC               	rlf	(___lldiv@quotient+3),f
  5077  0CC5  0BF8               	decfsz	(??___lldiv+0)+0
  5078  0CC6  2CC0               	goto	u3505
  5079                           	line	18
  5080                           	
  5081  0CC7                     l3412:	
  5082  0CC7  0873               	movf	(___lldiv@divisor+3),w
  5083  0CC8  0277               	subwf	(___lldiv@dividend+3),w
  5084  0CC9  1D03               	skipz
  5085  0CCA  2CD5               	goto	u3515
  5086  0CCB  0872               	movf	(___lldiv@divisor+2),w
  5087  0CCC  0276               	subwf	(___lldiv@dividend+2),w
  5088  0CCD  1D03               	skipz
  5089  0CCE  2CD5               	goto	u3515
  5090  0CCF  0871               	movf	(___lldiv@divisor+1),w
  5091  0CD0  0275               	subwf	(___lldiv@dividend+1),w
  5092  0CD1  1D03               	skipz
  5093  0CD2  2CD5               	goto	u3515
  5094  0CD3  0870               	movf	(___lldiv@divisor),w
  5095  0CD4  0274               	subwf	(___lldiv@dividend),w
  5096  0CD5                     u3515:
  5097  0CD5  1C03               	skipc
  5098  0CD6  2CD8               	goto	u3511
  5099  0CD7  2CD9               	goto	u3510
  5100  0CD8                     u3511:
  5101  0CD8  2CE9               	goto	l3418
  5102  0CD9                     u3510:
  5103                           	line	19
  5104                           	
  5105  0CD9                     l3414:	
  5106  0CD9  0870               	movf	(___lldiv@divisor),w
  5107  0CDA  02F4               	subwf	(___lldiv@dividend),f
  5108  0CDB  0871               	movf	(___lldiv@divisor+1),w
  5109  0CDC  1C03               	skipc
  5110  0CDD  0F71               	incfsz	(___lldiv@divisor+1),w
  5111  0CDE  02F5               	subwf	(___lldiv@dividend+1),f
  5112  0CDF  0872               	movf	(___lldiv@divisor+2),w
  5113  0CE0  1C03               	skipc
  5114  0CE1  0F72               	incfsz	(___lldiv@divisor+2),w
  5115  0CE2  02F6               	subwf	(___lldiv@dividend+2),f
  5116  0CE3  0873               	movf	(___lldiv@divisor+3),w
  5117  0CE4  1C03               	skipc
  5118  0CE5  0F73               	incfsz	(___lldiv@divisor+3),w
  5119  0CE6  02F7               	subwf	(___lldiv@dividend+3),f
  5120                           	line	20
  5121                           	
  5122  0CE7                     l3416:	
  5123  0CE7  1479               	bsf	(___lldiv@quotient)+(0/8),(0)&7
  5124  0CE8  2CE9               	goto	l3418
  5125                           	line	21
  5126                           	
  5127  0CE9                     l1069:	
  5128                           	line	22
  5129                           	
  5130  0CE9                     l3418:	
  5131  0CE9  3001               	movlw	01h
  5132  0CEA                     u3525:
  5133  0CEA  1003               	clrc
  5134  0CEB  0CF3               	rrf	(___lldiv@divisor+3),f
  5135  0CEC  0CF2               	rrf	(___lldiv@divisor+2),f
  5136  0CED  0CF1               	rrf	(___lldiv@divisor+1),f
  5137  0CEE  0CF0               	rrf	(___lldiv@divisor),f
  5138  0CEF  3EFF               	addlw	-1
  5139  0CF0  1D03               	skipz
  5140  0CF1  2CEA               	goto	u3525
  5141                           
  5142                           	line	23
  5143                           	
  5144  0CF2                     l3420:	
  5145  0CF2  3001               	movlw	low(01h)
  5146  0CF3  02FD               	subwf	(___lldiv@counter),f
  5147  0CF4  1D03               	btfss	status,2
  5148  0CF5  2CF7               	goto	u3531
  5149  0CF6  2CF8               	goto	u3530
  5150  0CF7                     u3531:
  5151  0CF7  2CBE               	goto	l3410
  5152  0CF8                     u3530:
  5153  0CF8  2CFA               	goto	l3422
  5154                           	
  5155  0CF9                     l1070:	
  5156  0CF9  2CFA               	goto	l3422
  5157                           	line	24
  5158                           	
  5159  0CFA                     l1064:	
  5160                           	line	25
  5161                           	
  5162  0CFA                     l3422:	
  5163  0CFA  087C               	movf	(___lldiv@quotient+3),w
  5164  0CFB  00F3               	movwf	(?___lldiv+3)
  5165  0CFC  087B               	movf	(___lldiv@quotient+2),w
  5166  0CFD  00F2               	movwf	(?___lldiv+2)
  5167  0CFE  087A               	movf	(___lldiv@quotient+1),w
  5168  0CFF  00F1               	movwf	(?___lldiv+1)
  5169  0D00  0879               	movf	(___lldiv@quotient),w
  5170  0D01  00F0               	movwf	(?___lldiv)
  5171                           
  5172  0D02  2D03               	goto	l1071
  5173                           	
  5174  0D03                     l3424:	
  5175                           	line	26
  5176                           	
  5177  0D03                     l1071:	
  5178  0D03  0008               	return
  5179                           	opt stack 0
  5180                           GLOBAL	__end_of___lldiv
  5181  0D04                     	__end_of___lldiv:
  5182 ;; =============== function ___lldiv ends ============
  5183                           
  5184                           	signat	___lldiv,8316
  5185                           	global	___llmod
  5186                           psect	text469,local,class=CODE,delta=2
  5187                           global __ptext469
  5188  0C3A                     __ptext469:
  5189                           
  5190 ;; *************** function ___llmod *****************
  5191 ;; Defined at:
  5192 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\llmod.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;  divisor         4    0[COMMON] unsigned long 
  5195 ;;  dividend        4    4[COMMON] unsigned long 
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;  counter         1    9[COMMON] unsigned char 
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  4    0[COMMON] unsigned long 
  5200 ;; Registers used:
  5201 ;;		wreg, status,2, status,0
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5207 ;;      Params:         8       0       0       0       0
  5208 ;;      Locals:         1       0       0       0       0
  5209 ;;      Temps:          1       0       0       0       0
  5210 ;;      Totals:        10       0       0       0       0
  5211 ;;Total ram usage:       10 bytes
  5212 ;; Hardware stack levels used:    1
  5213 ;; This function calls:
  5214 ;;		Nothing
  5215 ;; This function is called by:
  5216 ;;		_dis_num
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           psect	text469
  5220                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\llmod.c"
  5221                           	line	5
  5222                           	global	__size_of___llmod
  5223  005C                     	__size_of___llmod	equ	__end_of___llmod-___llmod
  5224                           	
  5225  0C3A                     ___llmod:	
  5226                           	opt	stack 6
  5227                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5228                           	line	8
  5229                           	
  5230  0C3A                     l3382:	
  5231  0C3A  0873               	movf	(___llmod@divisor+3),w
  5232  0C3B  0472               	iorwf	(___llmod@divisor+2),w
  5233  0C3C  0471               	iorwf	(___llmod@divisor+1),w
  5234  0C3D  0470               	iorwf	(___llmod@divisor),w
  5235  0C3E  1903               	skipnz
  5236  0C3F  2C41               	goto	u3411
  5237  0C40  2C42               	goto	u3410
  5238  0C41                     u3411:
  5239  0C41  2C8C               	goto	l3398
  5240  0C42                     u3410:
  5241                           	line	9
  5242                           	
  5243  0C42                     l3384:	
  5244  0C42  01F9               	clrf	(___llmod@counter)
  5245  0C43  1403               	bsf	status,0
  5246  0C44  0DF9               	rlf	(___llmod@counter),f
  5247                           	line	10
  5248  0C45  2C54               	goto	l3388
  5249                           	
  5250  0C46                     l1047:	
  5251                           	line	11
  5252                           	
  5253  0C46                     l3386:	
  5254  0C46  3001               	movlw	01h
  5255  0C47  00F8               	movwf	(??___llmod+0)+0
  5256  0C48                     u3425:
  5257  0C48  1003               	clrc
  5258  0C49  0DF0               	rlf	(___llmod@divisor),f
  5259  0C4A  0DF1               	rlf	(___llmod@divisor+1),f
  5260  0C4B  0DF2               	rlf	(___llmod@divisor+2),f
  5261  0C4C  0DF3               	rlf	(___llmod@divisor+3),f
  5262  0C4D  0BF8               	decfsz	(??___llmod+0)+0
  5263  0C4E  2C48               	goto	u3425
  5264                           	line	12
  5265  0C4F  3001               	movlw	(01h)
  5266  0C50  00F8               	movwf	(??___llmod+0)+0
  5267  0C51  0878               	movf	(??___llmod+0)+0,w
  5268  0C52  07F9               	addwf	(___llmod@counter),f
  5269  0C53  2C54               	goto	l3388
  5270                           	line	13
  5271                           	
  5272  0C54                     l1046:	
  5273                           	line	10
  5274                           	
  5275  0C54                     l3388:	
  5276  0C54  1FF3               	btfss	(___llmod@divisor+3),(31)&7
  5277  0C55  2C57               	goto	u3431
  5278  0C56  2C58               	goto	u3430
  5279  0C57                     u3431:
  5280  0C57  2C46               	goto	l3386
  5281  0C58                     u3430:
  5282  0C58  2C5A               	goto	l3390
  5283                           	
  5284  0C59                     l1048:	
  5285  0C59  2C5A               	goto	l3390
  5286                           	line	14
  5287                           	
  5288  0C5A                     l1049:	
  5289                           	line	15
  5290                           	
  5291  0C5A                     l3390:	
  5292  0C5A  0873               	movf	(___llmod@divisor+3),w
  5293  0C5B  0277               	subwf	(___llmod@dividend+3),w
  5294  0C5C  1D03               	skipz
  5295  0C5D  2C68               	goto	u3445
  5296  0C5E  0872               	movf	(___llmod@divisor+2),w
  5297  0C5F  0276               	subwf	(___llmod@dividend+2),w
  5298  0C60  1D03               	skipz
  5299  0C61  2C68               	goto	u3445
  5300  0C62  0871               	movf	(___llmod@divisor+1),w
  5301  0C63  0275               	subwf	(___llmod@dividend+1),w
  5302  0C64  1D03               	skipz
  5303  0C65  2C68               	goto	u3445
  5304  0C66  0870               	movf	(___llmod@divisor),w
  5305  0C67  0274               	subwf	(___llmod@dividend),w
  5306  0C68                     u3445:
  5307  0C68  1C03               	skipc
  5308  0C69  2C6B               	goto	u3441
  5309  0C6A  2C6C               	goto	u3440
  5310  0C6B                     u3441:
  5311  0C6B  2C7B               	goto	l3394
  5312  0C6C                     u3440:
  5313                           	line	16
  5314                           	
  5315  0C6C                     l3392:	
  5316  0C6C  0870               	movf	(___llmod@divisor),w
  5317  0C6D  02F4               	subwf	(___llmod@dividend),f
  5318  0C6E  0871               	movf	(___llmod@divisor+1),w
  5319  0C6F  1C03               	skipc
  5320  0C70  0F71               	incfsz	(___llmod@divisor+1),w
  5321  0C71  02F5               	subwf	(___llmod@dividend+1),f
  5322  0C72  0872               	movf	(___llmod@divisor+2),w
  5323  0C73  1C03               	skipc
  5324  0C74  0F72               	incfsz	(___llmod@divisor+2),w
  5325  0C75  02F6               	subwf	(___llmod@dividend+2),f
  5326  0C76  0873               	movf	(___llmod@divisor+3),w
  5327  0C77  1C03               	skipc
  5328  0C78  0F73               	incfsz	(___llmod@divisor+3),w
  5329  0C79  02F7               	subwf	(___llmod@dividend+3),f
  5330  0C7A  2C7B               	goto	l3394
  5331                           	
  5332  0C7B                     l1050:	
  5333                           	line	17
  5334                           	
  5335  0C7B                     l3394:	
  5336  0C7B  3001               	movlw	01h
  5337  0C7C                     u3455:
  5338  0C7C  1003               	clrc
  5339  0C7D  0CF3               	rrf	(___llmod@divisor+3),f
  5340  0C7E  0CF2               	rrf	(___llmod@divisor+2),f
  5341  0C7F  0CF1               	rrf	(___llmod@divisor+1),f
  5342  0C80  0CF0               	rrf	(___llmod@divisor),f
  5343  0C81  3EFF               	addlw	-1
  5344  0C82  1D03               	skipz
  5345  0C83  2C7C               	goto	u3455
  5346                           
  5347                           	line	18
  5348                           	
  5349  0C84                     l3396:	
  5350  0C84  3001               	movlw	low(01h)
  5351  0C85  02F9               	subwf	(___llmod@counter),f
  5352  0C86  1D03               	btfss	status,2
  5353  0C87  2C89               	goto	u3461
  5354  0C88  2C8A               	goto	u3460
  5355  0C89                     u3461:
  5356  0C89  2C5A               	goto	l3390
  5357  0C8A                     u3460:
  5358  0C8A  2C8C               	goto	l3398
  5359                           	
  5360  0C8B                     l1051:	
  5361  0C8B  2C8C               	goto	l3398
  5362                           	line	19
  5363                           	
  5364  0C8C                     l1045:	
  5365                           	line	20
  5366                           	
  5367  0C8C                     l3398:	
  5368  0C8C  0877               	movf	(___llmod@dividend+3),w
  5369  0C8D  00F3               	movwf	(?___llmod+3)
  5370  0C8E  0876               	movf	(___llmod@dividend+2),w
  5371  0C8F  00F2               	movwf	(?___llmod+2)
  5372  0C90  0875               	movf	(___llmod@dividend+1),w
  5373  0C91  00F1               	movwf	(?___llmod+1)
  5374  0C92  0874               	movf	(___llmod@dividend),w
  5375  0C93  00F0               	movwf	(?___llmod)
  5376                           
  5377  0C94  2C95               	goto	l1052
  5378                           	
  5379  0C95                     l3400:	
  5380                           	line	21
  5381                           	
  5382  0C95                     l1052:	
  5383  0C95  0008               	return
  5384                           	opt stack 0
  5385                           GLOBAL	__end_of___llmod
  5386  0C96                     	__end_of___llmod:
  5387 ;; =============== function ___llmod ends ============
  5388                           
  5389                           	signat	___llmod,8316
  5390                           	global	___fttol
  5391                           psect	text470,local,class=CODE,delta=2
  5392                           global __ptext470
  5393  001D                     __ptext470:
  5394                           
  5395 ;; *************** function ___fttol *****************
  5396 ;; Defined at:
  5397 ;;		line 45 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\fttol.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  f1              3    8[COMMON] float 
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;  lval            4    5[BANK0 ] unsigned long 
  5402 ;;  exp1            1    9[BANK0 ] unsigned char 
  5403 ;;  sign1           1    4[BANK0 ] unsigned char 
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  4    8[COMMON] long 
  5406 ;; Registers used:
  5407 ;;		wreg, status,2, status,0
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5413 ;;      Params:         4       0       0       0       0
  5414 ;;      Locals:         0       6       0       0       0
  5415 ;;      Temps:          0       4       0       0       0
  5416 ;;      Totals:         4      10       0       0       0
  5417 ;;Total ram usage:       14 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; This function calls:
  5420 ;;		Nothing
  5421 ;; This function is called by:
  5422 ;;		_main
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           psect	text470
  5426                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\fttol.c"
  5427                           	line	45
  5428                           	global	__size_of___fttol
  5429  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  5430                           	
  5431  001D                     ___fttol:	
  5432                           	opt	stack 7
  5433                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5434                           	line	49
  5435                           	
  5436  001D                     l3318:	
  5437  001D  0878               	movf	(___fttol@f1),w
  5438  001E  1283               	bcf	status, 5	;RP0=0, select bank0
  5439  001F  1303               	bcf	status, 6	;RP1=0, select bank0
  5440  0020  00A0               	movwf	((??___fttol+0)+0)
  5441  0021  0879               	movf	(___fttol@f1+1),w
  5442  0022  00A1               	movwf	((??___fttol+0)+0+1)
  5443  0023  087A               	movf	(___fttol@f1+2),w
  5444  0024  00A2               	movwf	((??___fttol+0)+0+2)
  5445  0025  1003               	clrc
  5446  0026  0D21               	rlf	(??___fttol+0)+1,w
  5447  0027  0D22               	rlf	(??___fttol+0)+2,w
  5448  0028  00A3               	movwf	(??___fttol+3)+0
  5449  0029  0823               	movf	(??___fttol+3)+0,w
  5450  002A  00A9               	movwf	(___fttol@exp1)
  5451  002B  08A9               	movf	((___fttol@exp1)),f
  5452  002C  1D03               	skipz
  5453  002D  282F               	goto	u3291
  5454  002E  2830               	goto	u3290
  5455  002F                     u3291:
  5456  002F  283A               	goto	l3324
  5457  0030                     u3290:
  5458                           	line	50
  5459                           	
  5460  0030                     l3320:	
  5461  0030  3000               	movlw	0
  5462  0031  00FB               	movwf	(?___fttol+3)
  5463  0032  3000               	movlw	0
  5464  0033  00FA               	movwf	(?___fttol+2)
  5465  0034  3000               	movlw	0
  5466  0035  00F9               	movwf	(?___fttol+1)
  5467  0036  3000               	movlw	0
  5468  0037  00F8               	movwf	(?___fttol)
  5469                           
  5470  0038  28C2               	goto	l1002
  5471                           	
  5472  0039                     l3322:	
  5473  0039  28C2               	goto	l1002
  5474                           	
  5475  003A                     l1001:	
  5476                           	line	51
  5477                           	
  5478  003A                     l3324:	
  5479  003A  0878               	movf	(___fttol@f1),w
  5480  003B  00A0               	movwf	((??___fttol+0)+0)
  5481  003C  0879               	movf	(___fttol@f1+1),w
  5482  003D  00A1               	movwf	((??___fttol+0)+0+1)
  5483  003E  087A               	movf	(___fttol@f1+2),w
  5484  003F  00A2               	movwf	((??___fttol+0)+0+2)
  5485  0040  3017               	movlw	017h
  5486  0041                     u3305:
  5487  0041  1003               	clrc
  5488  0042  0CA2               	rrf	(??___fttol+0)+2,f
  5489  0043  0CA1               	rrf	(??___fttol+0)+1,f
  5490  0044  0CA0               	rrf	(??___fttol+0)+0,f
  5491  0045                     u3300:
  5492  0045  3EFF               	addlw	-1
  5493  0046  1D03               	skipz
  5494  0047  2841               	goto	u3305
  5495  0048  0820               	movf	0+(??___fttol+0)+0,w
  5496  0049  00A3               	movwf	(??___fttol+3)+0
  5497  004A  0823               	movf	(??___fttol+3)+0,w
  5498  004B  00A4               	movwf	(___fttol@sign1)
  5499                           	line	52
  5500                           	
  5501  004C                     l3326:	
  5502  004C  17F9               	bsf	(___fttol@f1)+(15/8),(15)&7
  5503                           	line	53
  5504                           	
  5505  004D                     l3328:	
  5506  004D  30FF               	movlw	0FFh
  5507  004E  05F8               	andwf	(___fttol@f1),f
  5508  004F  30FF               	movlw	0FFh
  5509  0050  05F9               	andwf	(___fttol@f1+1),f
  5510  0051  3000               	movlw	0
  5511  0052  05FA               	andwf	(___fttol@f1+2),f
  5512                           	line	54
  5513                           	
  5514  0053                     l3330:	
  5515  0053  0878               	movf	(___fttol@f1),w
  5516  0054  00A5               	movwf	(___fttol@lval)
  5517  0055  0879               	movf	(___fttol@f1+1),w
  5518  0056  00A6               	movwf	((___fttol@lval))+1
  5519  0057  087A               	movf	(___fttol@f1+2),w
  5520  0058  00A7               	movwf	((___fttol@lval))+2
  5521  0059  01A8               	clrf	((___fttol@lval))+3
  5522                           	line	55
  5523                           	
  5524  005A                     l3332:	
  5525  005A  308E               	movlw	low(08Eh)
  5526  005B  02A9               	subwf	(___fttol@exp1),f
  5527                           	line	56
  5528                           	
  5529  005C                     l3334:	
  5530  005C  1FA9               	btfss	(___fttol@exp1),7
  5531  005D  285F               	goto	u3311
  5532  005E  2860               	goto	u3310
  5533  005F                     u3311:
  5534  005F  2885               	goto	l3344
  5535  0060                     u3310:
  5536                           	line	57
  5537                           	
  5538  0060                     l3336:	
  5539  0060  0829               	movf	(___fttol@exp1),w
  5540  0061  3A80               	xorlw	80h
  5541  0062  3E8F               	addlw	-((-15)^80h)
  5542  0063  1803               	skipnc
  5543  0064  2866               	goto	u3321
  5544  0065  2867               	goto	u3320
  5545  0066                     u3321:
  5546  0066  2872               	goto	l3342
  5547  0067                     u3320:
  5548                           	line	58
  5549                           	
  5550  0067                     l3338:	
  5551  0067  3000               	movlw	0
  5552  0068  00FB               	movwf	(?___fttol+3)
  5553  0069  3000               	movlw	0
  5554  006A  00FA               	movwf	(?___fttol+2)
  5555  006B  3000               	movlw	0
  5556  006C  00F9               	movwf	(?___fttol+1)
  5557  006D  3000               	movlw	0
  5558  006E  00F8               	movwf	(?___fttol)
  5559                           
  5560  006F  28C2               	goto	l1002
  5561                           	
  5562  0070                     l3340:	
  5563  0070  28C2               	goto	l1002
  5564                           	
  5565  0071                     l1004:	
  5566  0071  2872               	goto	l3342
  5567                           	line	59
  5568                           	
  5569  0072                     l1005:	
  5570                           	line	60
  5571                           	
  5572  0072                     l3342:	
  5573  0072  3001               	movlw	01h
  5574  0073                     u3335:
  5575  0073  1003               	clrc
  5576  0074  0CA8               	rrf	(___fttol@lval+3),f
  5577  0075  0CA7               	rrf	(___fttol@lval+2),f
  5578  0076  0CA6               	rrf	(___fttol@lval+1),f
  5579  0077  0CA5               	rrf	(___fttol@lval),f
  5580  0078  3EFF               	addlw	-1
  5581  0079  1D03               	skipz
  5582  007A  2873               	goto	u3335
  5583                           
  5584                           	line	61
  5585  007B  3001               	movlw	(01h)
  5586  007C  00A0               	movwf	(??___fttol+0)+0
  5587  007D  0820               	movf	(??___fttol+0)+0,w
  5588  007E  07A9               	addwf	(___fttol@exp1),f
  5589  007F  1D03               	btfss	status,2
  5590  0080  2882               	goto	u3341
  5591  0081  2883               	goto	u3340
  5592  0082                     u3341:
  5593  0082  2872               	goto	l3342
  5594  0083                     u3340:
  5595  0083  28A9               	goto	l3354
  5596                           	
  5597  0084                     l1006:	
  5598                           	line	62
  5599  0084  28A9               	goto	l3354
  5600                           	
  5601  0085                     l1003:	
  5602                           	line	63
  5603                           	
  5604  0085                     l3344:	
  5605  0085  3018               	movlw	(018h)
  5606  0086  0229               	subwf	(___fttol@exp1),w
  5607  0087  1C03               	skipc
  5608  0088  288A               	goto	u3351
  5609  0089  288B               	goto	u3350
  5610  008A                     u3351:
  5611  008A  28A2               	goto	l3352
  5612  008B                     u3350:
  5613                           	line	64
  5614                           	
  5615  008B                     l3346:	
  5616  008B  3000               	movlw	0
  5617  008C  00FB               	movwf	(?___fttol+3)
  5618  008D  3000               	movlw	0
  5619  008E  00FA               	movwf	(?___fttol+2)
  5620  008F  3000               	movlw	0
  5621  0090  00F9               	movwf	(?___fttol+1)
  5622  0091  3000               	movlw	0
  5623  0092  00F8               	movwf	(?___fttol)
  5624                           
  5625  0093  28C2               	goto	l1002
  5626                           	
  5627  0094                     l3348:	
  5628  0094  28C2               	goto	l1002
  5629                           	
  5630  0095                     l1008:	
  5631                           	line	65
  5632  0095  28A2               	goto	l3352
  5633                           	
  5634  0096                     l1010:	
  5635                           	line	66
  5636                           	
  5637  0096                     l3350:	
  5638  0096  3001               	movlw	01h
  5639  0097  00A0               	movwf	(??___fttol+0)+0
  5640  0098                     u3365:
  5641  0098  1003               	clrc
  5642  0099  0DA5               	rlf	(___fttol@lval),f
  5643  009A  0DA6               	rlf	(___fttol@lval+1),f
  5644  009B  0DA7               	rlf	(___fttol@lval+2),f
  5645  009C  0DA8               	rlf	(___fttol@lval+3),f
  5646  009D  0BA0               	decfsz	(??___fttol+0)+0
  5647  009E  2898               	goto	u3365
  5648                           	line	67
  5649  009F  3001               	movlw	low(01h)
  5650  00A0  02A9               	subwf	(___fttol@exp1),f
  5651  00A1  28A2               	goto	l3352
  5652                           	line	68
  5653                           	
  5654  00A2                     l1009:	
  5655                           	line	65
  5656                           	
  5657  00A2                     l3352:	
  5658  00A2  08A9               	movf	(___fttol@exp1),f
  5659  00A3  1D03               	skipz
  5660  00A4  28A6               	goto	u3371
  5661  00A5  28A7               	goto	u3370
  5662  00A6                     u3371:
  5663  00A6  2896               	goto	l3350
  5664  00A7                     u3370:
  5665  00A7  28A9               	goto	l3354
  5666                           	
  5667  00A8                     l1011:	
  5668  00A8  28A9               	goto	l3354
  5669                           	line	69
  5670                           	
  5671  00A9                     l1007:	
  5672                           	line	70
  5673                           	
  5674  00A9                     l3354:	
  5675  00A9  0824               	movf	(___fttol@sign1),w
  5676  00AA  1D03               	skipz
  5677  00AB  28AD               	goto	u3380
  5678  00AC  28B9               	goto	l3358
  5679  00AD                     u3380:
  5680                           	line	71
  5681                           	
  5682  00AD                     l3356:	
  5683  00AD  09A5               	comf	(___fttol@lval),f
  5684  00AE  09A6               	comf	(___fttol@lval+1),f
  5685  00AF  09A7               	comf	(___fttol@lval+2),f
  5686  00B0  09A8               	comf	(___fttol@lval+3),f
  5687  00B1  0AA5               	incf	(___fttol@lval),f
  5688  00B2  1903               	skipnz
  5689  00B3  0AA6               	incf	(___fttol@lval+1),f
  5690  00B4  1903               	skipnz
  5691  00B5  0AA7               	incf	(___fttol@lval+2),f
  5692  00B6  1903               	skipnz
  5693  00B7  0AA8               	incf	(___fttol@lval+3),f
  5694  00B8  28B9               	goto	l3358
  5695                           	
  5696  00B9                     l1012:	
  5697                           	line	72
  5698                           	
  5699  00B9                     l3358:	
  5700  00B9  0828               	movf	(___fttol@lval+3),w
  5701  00BA  00FB               	movwf	(?___fttol+3)
  5702  00BB  0827               	movf	(___fttol@lval+2),w
  5703  00BC  00FA               	movwf	(?___fttol+2)
  5704  00BD  0826               	movf	(___fttol@lval+1),w
  5705  00BE  00F9               	movwf	(?___fttol+1)
  5706  00BF  0825               	movf	(___fttol@lval),w
  5707  00C0  00F8               	movwf	(?___fttol)
  5708                           
  5709  00C1  28C2               	goto	l1002
  5710                           	
  5711  00C2                     l3360:	
  5712                           	line	73
  5713                           	
  5714  00C2                     l1002:	
  5715  00C2  0008               	return
  5716                           	opt stack 0
  5717                           GLOBAL	__end_of___fttol
  5718  00C3                     	__end_of___fttol:
  5719 ;; =============== function ___fttol ends ============
  5720                           
  5721                           	signat	___fttol,4220
  5722                           	global	___ftpack
  5723                           psect	text471,local,class=CODE,delta=2
  5724                           global __ptext471
  5725  0D04                     __ptext471:
  5726                           
  5727 ;; *************** function ___ftpack *****************
  5728 ;; Defined at:
  5729 ;;		line 63 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\float.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;  arg             3    0[COMMON] unsigned um
  5732 ;;  exp             1    3[COMMON] unsigned char 
  5733 ;;  sign            1    4[COMMON] unsigned char 
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;		None
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  3    0[COMMON] float 
  5738 ;; Registers used:
  5739 ;;		wreg, status,2, status,0
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5745 ;;      Params:         5       0       0       0       0
  5746 ;;      Locals:         0       0       0       0       0
  5747 ;;      Temps:          3       0       0       0       0
  5748 ;;      Totals:         8       0       0       0       0
  5749 ;;Total ram usage:        8 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; This function calls:
  5752 ;;		Nothing
  5753 ;; This function is called by:
  5754 ;;		___ftmul
  5755 ;;		___lwtoft
  5756 ;;		___ftadd
  5757 ;;		___ftdiv
  5758 ;;		___lbtoft
  5759 ;;		___abtoft
  5760 ;;		___awtoft
  5761 ;;		___altoft
  5762 ;;		___lltoft
  5763 ;;		___attoft
  5764 ;;		___lttoft
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           psect	text471
  5768                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\float.c"
  5769                           	line	63
  5770                           	global	__size_of___ftpack
  5771  007B                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  5772                           	
  5773  0D04                     ___ftpack:	
  5774                           	opt	stack 6
  5775                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5776                           	line	64
  5777                           	
  5778  0D04                     l3244:	
  5779  0D04  0873               	movf	(___ftpack@exp),w
  5780  0D05  1D03               	skipz
  5781  0D06  2D08               	goto	u3100
  5782  0D07  2D10               	goto	l3248
  5783  0D08                     u3100:
  5784                           	
  5785  0D08                     l3246:	
  5786  0D08  0872               	movf	(___ftpack@arg+2),w
  5787  0D09  0471               	iorwf	(___ftpack@arg+1),w
  5788  0D0A  0470               	iorwf	(___ftpack@arg),w
  5789  0D0B  1D03               	skipz
  5790  0D0C  2D0E               	goto	u3111
  5791  0D0D  2D0F               	goto	u3110
  5792  0D0E                     u3111:
  5793  0D0E  2D26               	goto	l3254
  5794  0D0F                     u3110:
  5795  0D0F  2D10               	goto	l3248
  5796                           	
  5797  0D10                     l1226:	
  5798                           	line	65
  5799                           	
  5800  0D10                     l3248:	
  5801  0D10  3000               	movlw	0x0
  5802  0D11  00F0               	movwf	(?___ftpack)
  5803  0D12  3000               	movlw	0x0
  5804  0D13  00F1               	movwf	(?___ftpack+1)
  5805  0D14  3000               	movlw	0x0
  5806  0D15  00F2               	movwf	(?___ftpack+2)
  5807  0D16  2D7E               	goto	l1227
  5808                           	
  5809  0D17                     l3250:	
  5810  0D17  2D7E               	goto	l1227
  5811                           	
  5812  0D18                     l1224:	
  5813                           	line	66
  5814  0D18  2D26               	goto	l3254
  5815                           	
  5816  0D19                     l1229:	
  5817                           	line	67
  5818                           	
  5819  0D19                     l3252:	
  5820  0D19  3001               	movlw	(01h)
  5821  0D1A  00F5               	movwf	(??___ftpack+0)+0
  5822  0D1B  0875               	movf	(??___ftpack+0)+0,w
  5823  0D1C  07F3               	addwf	(___ftpack@exp),f
  5824                           	line	68
  5825  0D1D  3001               	movlw	01h
  5826  0D1E                     u3125:
  5827  0D1E  1003               	clrc
  5828  0D1F  0CF2               	rrf	(___ftpack@arg+2),f
  5829  0D20  0CF1               	rrf	(___ftpack@arg+1),f
  5830  0D21  0CF0               	rrf	(___ftpack@arg),f
  5831  0D22  3EFF               	addlw	-1
  5832  0D23  1D03               	skipz
  5833  0D24  2D1E               	goto	u3125
  5834                           
  5835  0D25  2D26               	goto	l3254
  5836                           	line	69
  5837                           	
  5838  0D26                     l1228:	
  5839                           	line	66
  5840                           	
  5841  0D26                     l3254:	
  5842  0D26  30FE               	movlw	low highword(0FE0000h)
  5843  0D27  0572               	andwf	(___ftpack@arg+2),w
  5844  0D28  1D03               	btfss	status,2
  5845  0D29  2D2B               	goto	u3131
  5846  0D2A  2D2C               	goto	u3130
  5847  0D2B                     u3131:
  5848  0D2B  2D19               	goto	l3252
  5849  0D2C                     u3130:
  5850  0D2C  2D44               	goto	l1231
  5851                           	
  5852  0D2D                     l1230:	
  5853                           	line	70
  5854  0D2D  2D44               	goto	l1231
  5855                           	
  5856  0D2E                     l1232:	
  5857                           	line	71
  5858                           	
  5859  0D2E                     l3256:	
  5860  0D2E  3001               	movlw	(01h)
  5861  0D2F  00F5               	movwf	(??___ftpack+0)+0
  5862  0D30  0875               	movf	(??___ftpack+0)+0,w
  5863  0D31  07F3               	addwf	(___ftpack@exp),f
  5864                           	line	72
  5865                           	
  5866  0D32                     l3258:	
  5867  0D32  3001               	movlw	01h
  5868  0D33  07F0               	addwf	(___ftpack@arg),f
  5869  0D34  3000               	movlw	0
  5870  0D35  1803               	skipnc
  5871  0D36  3001               movlw 1
  5872  0D37  07F1               	addwf	(___ftpack@arg+1),f
  5873  0D38  3000               	movlw	0
  5874  0D39  1803               	skipnc
  5875  0D3A  3001               movlw 1
  5876  0D3B  07F2               	addwf	(___ftpack@arg+2),f
  5877                           	line	73
  5878                           	
  5879  0D3C                     l3260:	
  5880  0D3C  3001               	movlw	01h
  5881  0D3D                     u3145:
  5882  0D3D  1003               	clrc
  5883  0D3E  0CF2               	rrf	(___ftpack@arg+2),f
  5884  0D3F  0CF1               	rrf	(___ftpack@arg+1),f
  5885  0D40  0CF0               	rrf	(___ftpack@arg),f
  5886  0D41  3EFF               	addlw	-1
  5887  0D42  1D03               	skipz
  5888  0D43  2D3D               	goto	u3145
  5889                           
  5890                           	line	74
  5891                           	
  5892  0D44                     l1231:	
  5893                           	line	70
  5894  0D44  30FF               	movlw	low highword(0FF0000h)
  5895  0D45  0572               	andwf	(___ftpack@arg+2),w
  5896  0D46  1D03               	btfss	status,2
  5897  0D47  2D49               	goto	u3151
  5898  0D48  2D4A               	goto	u3150
  5899  0D49                     u3151:
  5900  0D49  2D2E               	goto	l3256
  5901  0D4A                     u3150:
  5902  0D4A  2D57               	goto	l3264
  5903                           	
  5904  0D4B                     l1233:	
  5905                           	line	75
  5906  0D4B  2D57               	goto	l3264
  5907                           	
  5908  0D4C                     l1235:	
  5909                           	line	76
  5910                           	
  5911  0D4C                     l3262:	
  5912  0D4C  3001               	movlw	low(01h)
  5913  0D4D  02F3               	subwf	(___ftpack@exp),f
  5914                           	line	77
  5915  0D4E  3001               	movlw	01h
  5916  0D4F                     u3165:
  5917  0D4F  1003               	clrc
  5918  0D50  0DF0               	rlf	(___ftpack@arg),f
  5919  0D51  0DF1               	rlf	(___ftpack@arg+1),f
  5920  0D52  0DF2               	rlf	(___ftpack@arg+2),f
  5921  0D53  3EFF               	addlw	-1
  5922  0D54  1D03               	skipz
  5923  0D55  2D4F               	goto	u3165
  5924  0D56  2D57               	goto	l3264
  5925                           	line	78
  5926                           	
  5927  0D57                     l1234:	
  5928                           	line	75
  5929                           	
  5930  0D57                     l3264:	
  5931  0D57  1FF1               	btfss	(___ftpack@arg+1),(15)&7
  5932  0D58  2D5A               	goto	u3171
  5933  0D59  2D5B               	goto	u3170
  5934  0D5A                     u3171:
  5935  0D5A  2D4C               	goto	l3262
  5936  0D5B                     u3170:
  5937                           	
  5938  0D5B                     l1236:	
  5939                           	line	79
  5940  0D5B  1873               	btfsc	(___ftpack@exp),(0)&7
  5941  0D5C  2D5E               	goto	u3181
  5942  0D5D  2D5F               	goto	u3180
  5943  0D5E                     u3181:
  5944  0D5E  2D65               	goto	l1237
  5945  0D5F                     u3180:
  5946                           	line	80
  5947                           	
  5948  0D5F                     l3266:	
  5949  0D5F  30FF               	movlw	0FFh
  5950  0D60  05F0               	andwf	(___ftpack@arg),f
  5951  0D61  307F               	movlw	07Fh
  5952  0D62  05F1               	andwf	(___ftpack@arg+1),f
  5953  0D63  30FF               	movlw	0FFh
  5954  0D64  05F2               	andwf	(___ftpack@arg+2),f
  5955                           	
  5956  0D65                     l1237:	
  5957                           	line	81
  5958  0D65  1003               	clrc
  5959  0D66  0CF3               	rrf	(___ftpack@exp),f
  5960                           
  5961                           	line	82
  5962                           	
  5963  0D67                     l3268:	
  5964  0D67  0873               	movf	(___ftpack@exp),w
  5965  0D68  00F5               	movwf	((??___ftpack+0)+0)
  5966  0D69  01F6               	clrf	((??___ftpack+0)+0+1)
  5967  0D6A  01F7               	clrf	((??___ftpack+0)+0+2)
  5968  0D6B  3010               	movlw	010h
  5969  0D6C                     u3195:
  5970  0D6C  1003               	clrc
  5971  0D6D  0DF5               	rlf	(??___ftpack+0)+0,f
  5972  0D6E  0DF6               	rlf	(??___ftpack+0)+1,f
  5973  0D6F  0DF7               	rlf	(??___ftpack+0)+2,f
  5974  0D70                     u3190:
  5975  0D70  3EFF               	addlw	-1
  5976  0D71  1D03               	skipz
  5977  0D72  2D6C               	goto	u3195
  5978  0D73  0875               	movf	0+(??___ftpack+0)+0,w
  5979  0D74  04F0               	iorwf	(___ftpack@arg),f
  5980  0D75  0876               	movf	1+(??___ftpack+0)+0,w
  5981  0D76  04F1               	iorwf	(___ftpack@arg+1),f
  5982  0D77  0877               	movf	2+(??___ftpack+0)+0,w
  5983  0D78  04F2               	iorwf	(___ftpack@arg+2),f
  5984                           	line	83
  5985                           	
  5986  0D79                     l3270:	
  5987  0D79  0874               	movf	(___ftpack@sign),w
  5988  0D7A  1D03               	skipz
  5989  0D7B  2D7D               	goto	u3200
  5990  0D7C  2D7E               	goto	l1238
  5991  0D7D                     u3200:
  5992                           	line	84
  5993                           	
  5994  0D7D                     l3272:	
  5995  0D7D  17F2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  5996                           	
  5997  0D7E                     l1238:	
  5998                           	line	85
  5999                           	line	86
  6000                           	
  6001  0D7E                     l1227:	
  6002  0D7E  0008               	return
  6003                           	opt stack 0
  6004                           GLOBAL	__end_of___ftpack
  6005  0D7F                     	__end_of___ftpack:
  6006 ;; =============== function ___ftpack ends ============
  6007                           
  6008                           	signat	___ftpack,12411
  6009                           	global	___lwmod
  6010                           psect	text472,local,class=CODE,delta=2
  6011                           global __ptext472
  6012  0BA8                     __ptext472:
  6013                           
  6014 ;; *************** function ___lwmod *****************
  6015 ;; Defined at:
  6016 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\lwmod.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;  divisor         2    8[COMMON] unsigned int 
  6019 ;;  dividend        2   10[COMMON] unsigned int 
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;  counter         1   13[COMMON] unsigned char 
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  2    8[COMMON] unsigned int 
  6024 ;; Registers used:
  6025 ;;		wreg, status,2, status,0
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6031 ;;      Params:         4       0       0       0       0
  6032 ;;      Locals:         1       0       0       0       0
  6033 ;;      Temps:          1       0       0       0       0
  6034 ;;      Totals:         6       0       0       0       0
  6035 ;;Total ram usage:        6 bytes
  6036 ;; Hardware stack levels used:    1
  6037 ;; This function calls:
  6038 ;;		Nothing
  6039 ;; This function is called by:
  6040 ;;		_main
  6041 ;;		_sprintf
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           psect	text472
  6045                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\lwmod.c"
  6046                           	line	5
  6047                           	global	__size_of___lwmod
  6048  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  6049                           	
  6050  0BA8                     ___lwmod:	
  6051                           	opt	stack 6
  6052                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6053                           	line	8
  6054                           	
  6055  0BA8                     l3152:	
  6056  0BA8  0879               	movf	(___lwmod@divisor+1),w
  6057  0BA9  0478               	iorwf	(___lwmod@divisor),w
  6058  0BAA  1903               	skipnz
  6059  0BAB  2BAD               	goto	u2801
  6060  0BAC  2BAE               	goto	u2800
  6061  0BAD                     u2801:
  6062  0BAD  2BE4               	goto	l3170
  6063  0BAE                     u2800:
  6064                           	line	9
  6065                           	
  6066  0BAE                     l3154:	
  6067  0BAE  01FD               	clrf	(___lwmod@counter)
  6068  0BAF  1403               	bsf	status,0
  6069  0BB0  0DFD               	rlf	(___lwmod@counter),f
  6070                           	line	10
  6071  0BB1  2BBE               	goto	l3160
  6072                           	
  6073  0BB2                     l910:	
  6074                           	line	11
  6075                           	
  6076  0BB2                     l3156:	
  6077  0BB2  3001               	movlw	01h
  6078                           	
  6079  0BB3                     u2815:
  6080  0BB3  1003               	clrc
  6081  0BB4  0DF8               	rlf	(___lwmod@divisor),f
  6082  0BB5  0DF9               	rlf	(___lwmod@divisor+1),f
  6083  0BB6  3EFF               	addlw	-1
  6084  0BB7  1D03               	skipz
  6085  0BB8  2BB3               	goto	u2815
  6086                           	line	12
  6087                           	
  6088  0BB9                     l3158:	
  6089  0BB9  3001               	movlw	(01h)
  6090  0BBA  00FC               	movwf	(??___lwmod+0)+0
  6091  0BBB  087C               	movf	(??___lwmod+0)+0,w
  6092  0BBC  07FD               	addwf	(___lwmod@counter),f
  6093  0BBD  2BBE               	goto	l3160
  6094                           	line	13
  6095                           	
  6096  0BBE                     l909:	
  6097                           	line	10
  6098                           	
  6099  0BBE                     l3160:	
  6100  0BBE  1FF9               	btfss	(___lwmod@divisor+1),(15)&7
  6101  0BBF  2BC1               	goto	u2821
  6102  0BC0  2BC2               	goto	u2820
  6103  0BC1                     u2821:
  6104  0BC1  2BB2               	goto	l3156
  6105  0BC2                     u2820:
  6106  0BC2  2BC4               	goto	l3162
  6107                           	
  6108  0BC3                     l911:	
  6109  0BC3  2BC4               	goto	l3162
  6110                           	line	14
  6111                           	
  6112  0BC4                     l912:	
  6113                           	line	15
  6114                           	
  6115  0BC4                     l3162:	
  6116  0BC4  0879               	movf	(___lwmod@divisor+1),w
  6117  0BC5  027B               	subwf	(___lwmod@dividend+1),w
  6118  0BC6  1D03               	skipz
  6119  0BC7  2BCA               	goto	u2835
  6120  0BC8  0878               	movf	(___lwmod@divisor),w
  6121  0BC9  027A               	subwf	(___lwmod@dividend),w
  6122  0BCA                     u2835:
  6123  0BCA  1C03               	skipc
  6124  0BCB  2BCD               	goto	u2831
  6125  0BCC  2BCE               	goto	u2830
  6126  0BCD                     u2831:
  6127  0BCD  2BD5               	goto	l3166
  6128  0BCE                     u2830:
  6129                           	line	16
  6130                           	
  6131  0BCE                     l3164:	
  6132  0BCE  0878               	movf	(___lwmod@divisor),w
  6133  0BCF  02FA               	subwf	(___lwmod@dividend),f
  6134  0BD0  0879               	movf	(___lwmod@divisor+1),w
  6135  0BD1  1C03               	skipc
  6136  0BD2  03FB               	decf	(___lwmod@dividend+1),f
  6137  0BD3  02FB               	subwf	(___lwmod@dividend+1),f
  6138  0BD4  2BD5               	goto	l3166
  6139                           	
  6140  0BD5                     l913:	
  6141                           	line	17
  6142                           	
  6143  0BD5                     l3166:	
  6144  0BD5  3001               	movlw	01h
  6145                           	
  6146  0BD6                     u2845:
  6147  0BD6  1003               	clrc
  6148  0BD7  0CF9               	rrf	(___lwmod@divisor+1),f
  6149  0BD8  0CF8               	rrf	(___lwmod@divisor),f
  6150  0BD9  3EFF               	addlw	-1
  6151  0BDA  1D03               	skipz
  6152  0BDB  2BD6               	goto	u2845
  6153                           	line	18
  6154                           	
  6155  0BDC                     l3168:	
  6156  0BDC  3001               	movlw	low(01h)
  6157  0BDD  02FD               	subwf	(___lwmod@counter),f
  6158  0BDE  1D03               	btfss	status,2
  6159  0BDF  2BE1               	goto	u2851
  6160  0BE0  2BE2               	goto	u2850
  6161  0BE1                     u2851:
  6162  0BE1  2BC4               	goto	l3162
  6163  0BE2                     u2850:
  6164  0BE2  2BE4               	goto	l3170
  6165                           	
  6166  0BE3                     l914:	
  6167  0BE3  2BE4               	goto	l3170
  6168                           	line	19
  6169                           	
  6170  0BE4                     l908:	
  6171                           	line	20
  6172                           	
  6173  0BE4                     l3170:	
  6174  0BE4  087B               	movf	(___lwmod@dividend+1),w
  6175  0BE5  01F9               	clrf	(?___lwmod+1)
  6176  0BE6  07F9               	addwf	(?___lwmod+1)
  6177  0BE7  087A               	movf	(___lwmod@dividend),w
  6178  0BE8  01F8               	clrf	(?___lwmod)
  6179  0BE9  07F8               	addwf	(?___lwmod)
  6180                           
  6181  0BEA  2BEB               	goto	l915
  6182                           	
  6183  0BEB                     l3172:	
  6184                           	line	21
  6185                           	
  6186  0BEB                     l915:	
  6187  0BEB  0008               	return
  6188                           	opt stack 0
  6189                           GLOBAL	__end_of___lwmod
  6190  0BEC                     	__end_of___lwmod:
  6191 ;; =============== function ___lwmod ends ============
  6192                           
  6193                           	signat	___lwmod,8314
  6194                           	global	___lwdiv
  6195                           psect	text473,local,class=CODE,delta=2
  6196                           global __ptext473
  6197  0BEC                     __ptext473:
  6198                           
  6199 ;; *************** function ___lwdiv *****************
  6200 ;; Defined at:
  6201 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\lwdiv.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;  divisor         2    0[COMMON] unsigned int 
  6204 ;;  dividend        2    2[COMMON] unsigned int 
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;  quotient        2    5[COMMON] unsigned int 
  6207 ;;  counter         1    7[COMMON] unsigned char 
  6208 ;; Return value:  Size  Location     Type
  6209 ;;                  2    0[COMMON] unsigned int 
  6210 ;; Registers used:
  6211 ;;		wreg, status,2, status,0
  6212 ;; Tracked objects:
  6213 ;;		On entry : 0/0
  6214 ;;		On exit  : 0/0
  6215 ;;		Unchanged: 0/0
  6216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6217 ;;      Params:         4       0       0       0       0
  6218 ;;      Locals:         3       0       0       0       0
  6219 ;;      Temps:          1       0       0       0       0
  6220 ;;      Totals:         8       0       0       0       0
  6221 ;;Total ram usage:        8 bytes
  6222 ;; Hardware stack levels used:    1
  6223 ;; This function calls:
  6224 ;;		Nothing
  6225 ;; This function is called by:
  6226 ;;		_main
  6227 ;;		_sprintf
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           psect	text473
  6231                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\lwdiv.c"
  6232                           	line	5
  6233                           	global	__size_of___lwdiv
  6234  004E                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  6235                           	
  6236  0BEC                     ___lwdiv:	
  6237                           	opt	stack 6
  6238                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6239                           	line	9
  6240                           	
  6241  0BEC                     l3126:	
  6242  0BEC  01F5               	clrf	(___lwdiv@quotient)
  6243  0BED  01F6               	clrf	(___lwdiv@quotient+1)
  6244                           	line	10
  6245                           	
  6246  0BEE                     l3128:	
  6247  0BEE  0871               	movf	(___lwdiv@divisor+1),w
  6248  0BEF  0470               	iorwf	(___lwdiv@divisor),w
  6249  0BF0  1903               	skipnz
  6250  0BF1  2BF3               	goto	u2731
  6251  0BF2  2BF4               	goto	u2730
  6252  0BF3                     u2731:
  6253  0BF3  2C32               	goto	l3148
  6254  0BF4                     u2730:
  6255                           	line	11
  6256                           	
  6257  0BF4                     l3130:	
  6258  0BF4  01F7               	clrf	(___lwdiv@counter)
  6259  0BF5  1403               	bsf	status,0
  6260  0BF6  0DF7               	rlf	(___lwdiv@counter),f
  6261                           	line	12
  6262  0BF7  2C04               	goto	l3136
  6263                           	
  6264  0BF8                     l900:	
  6265                           	line	13
  6266                           	
  6267  0BF8                     l3132:	
  6268  0BF8  3001               	movlw	01h
  6269                           	
  6270  0BF9                     u2745:
  6271  0BF9  1003               	clrc
  6272  0BFA  0DF0               	rlf	(___lwdiv@divisor),f
  6273  0BFB  0DF1               	rlf	(___lwdiv@divisor+1),f
  6274  0BFC  3EFF               	addlw	-1
  6275  0BFD  1D03               	skipz
  6276  0BFE  2BF9               	goto	u2745
  6277                           	line	14
  6278                           	
  6279  0BFF                     l3134:	
  6280  0BFF  3001               	movlw	(01h)
  6281  0C00  00F4               	movwf	(??___lwdiv+0)+0
  6282  0C01  0874               	movf	(??___lwdiv+0)+0,w
  6283  0C02  07F7               	addwf	(___lwdiv@counter),f
  6284  0C03  2C04               	goto	l3136
  6285                           	line	15
  6286                           	
  6287  0C04                     l899:	
  6288                           	line	12
  6289                           	
  6290  0C04                     l3136:	
  6291  0C04  1FF1               	btfss	(___lwdiv@divisor+1),(15)&7
  6292  0C05  2C07               	goto	u2751
  6293  0C06  2C08               	goto	u2750
  6294  0C07                     u2751:
  6295  0C07  2BF8               	goto	l3132
  6296  0C08                     u2750:
  6297  0C08  2C0A               	goto	l3138
  6298                           	
  6299  0C09                     l901:	
  6300  0C09  2C0A               	goto	l3138
  6301                           	line	16
  6302                           	
  6303  0C0A                     l902:	
  6304                           	line	17
  6305                           	
  6306  0C0A                     l3138:	
  6307  0C0A  3001               	movlw	01h
  6308                           	
  6309  0C0B                     u2765:
  6310  0C0B  1003               	clrc
  6311  0C0C  0DF5               	rlf	(___lwdiv@quotient),f
  6312  0C0D  0DF6               	rlf	(___lwdiv@quotient+1),f
  6313  0C0E  3EFF               	addlw	-1
  6314  0C0F  1D03               	skipz
  6315  0C10  2C0B               	goto	u2765
  6316                           	line	18
  6317  0C11  0871               	movf	(___lwdiv@divisor+1),w
  6318  0C12  0273               	subwf	(___lwdiv@dividend+1),w
  6319  0C13  1D03               	skipz
  6320  0C14  2C17               	goto	u2775
  6321  0C15  0870               	movf	(___lwdiv@divisor),w
  6322  0C16  0272               	subwf	(___lwdiv@dividend),w
  6323  0C17                     u2775:
  6324  0C17  1C03               	skipc
  6325  0C18  2C1A               	goto	u2771
  6326  0C19  2C1B               	goto	u2770
  6327  0C1A                     u2771:
  6328  0C1A  2C23               	goto	l3144
  6329  0C1B                     u2770:
  6330                           	line	19
  6331                           	
  6332  0C1B                     l3140:	
  6333  0C1B  0870               	movf	(___lwdiv@divisor),w
  6334  0C1C  02F2               	subwf	(___lwdiv@dividend),f
  6335  0C1D  0871               	movf	(___lwdiv@divisor+1),w
  6336  0C1E  1C03               	skipc
  6337  0C1F  03F3               	decf	(___lwdiv@dividend+1),f
  6338  0C20  02F3               	subwf	(___lwdiv@dividend+1),f
  6339                           	line	20
  6340                           	
  6341  0C21                     l3142:	
  6342  0C21  1475               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  6343  0C22  2C23               	goto	l3144
  6344                           	line	21
  6345                           	
  6346  0C23                     l903:	
  6347                           	line	22
  6348                           	
  6349  0C23                     l3144:	
  6350  0C23  3001               	movlw	01h
  6351                           	
  6352  0C24                     u2785:
  6353  0C24  1003               	clrc
  6354  0C25  0CF1               	rrf	(___lwdiv@divisor+1),f
  6355  0C26  0CF0               	rrf	(___lwdiv@divisor),f
  6356  0C27  3EFF               	addlw	-1
  6357  0C28  1D03               	skipz
  6358  0C29  2C24               	goto	u2785
  6359                           	line	23
  6360                           	
  6361  0C2A                     l3146:	
  6362  0C2A  3001               	movlw	low(01h)
  6363  0C2B  02F7               	subwf	(___lwdiv@counter),f
  6364  0C2C  1D03               	btfss	status,2
  6365  0C2D  2C2F               	goto	u2791
  6366  0C2E  2C30               	goto	u2790
  6367  0C2F                     u2791:
  6368  0C2F  2C0A               	goto	l3138
  6369  0C30                     u2790:
  6370  0C30  2C32               	goto	l3148
  6371                           	
  6372  0C31                     l904:	
  6373  0C31  2C32               	goto	l3148
  6374                           	line	24
  6375                           	
  6376  0C32                     l898:	
  6377                           	line	25
  6378                           	
  6379  0C32                     l3148:	
  6380  0C32  0876               	movf	(___lwdiv@quotient+1),w
  6381  0C33  01F1               	clrf	(?___lwdiv+1)
  6382  0C34  07F1               	addwf	(?___lwdiv+1)
  6383  0C35  0875               	movf	(___lwdiv@quotient),w
  6384  0C36  01F0               	clrf	(?___lwdiv)
  6385  0C37  07F0               	addwf	(?___lwdiv)
  6386                           
  6387  0C38  2C39               	goto	l905
  6388                           	
  6389  0C39                     l3150:	
  6390                           	line	26
  6391                           	
  6392  0C39                     l905:	
  6393  0C39  0008               	return
  6394                           	opt stack 0
  6395                           GLOBAL	__end_of___lwdiv
  6396  0C3A                     	__end_of___lwdiv:
  6397 ;; =============== function ___lwdiv ends ============
  6398                           
  6399                           	signat	___lwdiv,8314
  6400                           	global	___wmul
  6401                           psect	text474,local,class=CODE,delta=2
  6402                           global __ptext474
  6403  0B7E                     __ptext474:
  6404                           
  6405 ;; *************** function ___wmul *****************
  6406 ;; Defined at:
  6407 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\wmul.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;  multiplier      2    0[COMMON] unsigned int 
  6410 ;;  multiplicand    2    2[COMMON] unsigned int 
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;  product         2    4[COMMON] unsigned int 
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  2    0[COMMON] unsigned int 
  6415 ;; Registers used:
  6416 ;;		wreg, status,2, status,0
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6422 ;;      Params:         4       0       0       0       0
  6423 ;;      Locals:         2       0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0
  6425 ;;      Totals:         6       0       0       0       0
  6426 ;;Total ram usage:        6 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; This function calls:
  6429 ;;		Nothing
  6430 ;; This function is called by:
  6431 ;;		_main
  6432 ;;		_sprintf
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           psect	text474
  6436                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\wmul.c"
  6437                           	line	3
  6438                           	global	__size_of___wmul
  6439  002A                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  6440                           	
  6441  0B7E                     ___wmul:	
  6442                           	opt	stack 6
  6443                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6444                           	line	4
  6445                           	
  6446  0B7E                     l3114:	
  6447  0B7E  01F4               	clrf	(___wmul@product)
  6448  0B7F  01F5               	clrf	(___wmul@product+1)
  6449  0B80  2B81               	goto	l3116
  6450                           	line	6
  6451                           	
  6452  0B81                     l892:	
  6453                           	line	7
  6454                           	
  6455  0B81                     l3116:	
  6456  0B81  1C70               	btfss	(___wmul@multiplier),(0)&7
  6457  0B82  2B84               	goto	u2691
  6458  0B83  2B85               	goto	u2690
  6459  0B84                     u2691:
  6460  0B84  2B8B               	goto	l893
  6461  0B85                     u2690:
  6462                           	line	8
  6463                           	
  6464  0B85                     l3118:	
  6465  0B85  0872               	movf	(___wmul@multiplicand),w
  6466  0B86  07F4               	addwf	(___wmul@product),f
  6467  0B87  1803               	skipnc
  6468  0B88  0AF5               	incf	(___wmul@product+1),f
  6469  0B89  0873               	movf	(___wmul@multiplicand+1),w
  6470  0B8A  07F5               	addwf	(___wmul@product+1),f
  6471                           	
  6472  0B8B                     l893:	
  6473                           	line	9
  6474  0B8B  3001               	movlw	01h
  6475                           	
  6476  0B8C                     u2705:
  6477  0B8C  1003               	clrc
  6478  0B8D  0DF2               	rlf	(___wmul@multiplicand),f
  6479  0B8E  0DF3               	rlf	(___wmul@multiplicand+1),f
  6480  0B8F  3EFF               	addlw	-1
  6481  0B90  1D03               	skipz
  6482  0B91  2B8C               	goto	u2705
  6483                           	line	10
  6484                           	
  6485  0B92                     l3120:	
  6486  0B92  3001               	movlw	01h
  6487                           	
  6488  0B93                     u2715:
  6489  0B93  1003               	clrc
  6490  0B94  0CF1               	rrf	(___wmul@multiplier+1),f
  6491  0B95  0CF0               	rrf	(___wmul@multiplier),f
  6492  0B96  3EFF               	addlw	-1
  6493  0B97  1D03               	skipz
  6494  0B98  2B93               	goto	u2715
  6495                           	line	11
  6496  0B99  0871               	movf	((___wmul@multiplier+1)),w
  6497  0B9A  0470               	iorwf	((___wmul@multiplier)),w
  6498  0B9B  1D03               	skipz
  6499  0B9C  2B9E               	goto	u2721
  6500  0B9D  2B9F               	goto	u2720
  6501  0B9E                     u2721:
  6502  0B9E  2B81               	goto	l3116
  6503  0B9F                     u2720:
  6504  0B9F  2BA0               	goto	l3122
  6505                           	
  6506  0BA0                     l894:	
  6507                           	line	12
  6508                           	
  6509  0BA0                     l3122:	
  6510  0BA0  0875               	movf	(___wmul@product+1),w
  6511  0BA1  01F1               	clrf	(?___wmul+1)
  6512  0BA2  07F1               	addwf	(?___wmul+1)
  6513  0BA3  0874               	movf	(___wmul@product),w
  6514  0BA4  01F0               	clrf	(?___wmul)
  6515  0BA5  07F0               	addwf	(?___wmul)
  6516                           
  6517  0BA6  2BA7               	goto	l895
  6518                           	
  6519  0BA7                     l3124:	
  6520                           	line	13
  6521                           	
  6522  0BA7                     l895:	
  6523  0BA7  0008               	return
  6524                           	opt stack 0
  6525                           GLOBAL	__end_of___wmul
  6526  0BA8                     	__end_of___wmul:
  6527 ;; =============== function ___wmul ends ============
  6528                           
  6529                           	signat	___wmul,8314
  6530                           	global	_isdigit
  6531                           psect	text475,local,class=CODE,delta=2
  6532                           global __ptext475
  6533  0AA9                     __ptext475:
  6534                           
  6535 ;; *************** function _isdigit *****************
  6536 ;; Defined at:
  6537 ;;		line 13 in file "../../common/isdigit.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;  c               1    wreg     unsigned char 
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;  c               1    1[COMMON] unsigned char 
  6542 ;; Return value:  Size  Location     Type
  6543 ;;		None               void
  6544 ;; Registers used:
  6545 ;;		wreg, status,2, status,0
  6546 ;; Tracked objects:
  6547 ;;		On entry : 0/0
  6548 ;;		On exit  : 0/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6551 ;;      Params:         0       0       0       0       0
  6552 ;;      Locals:         2       0       0       0       0
  6553 ;;      Temps:          0       0       0       0       0
  6554 ;;      Totals:         2       0       0       0       0
  6555 ;;Total ram usage:        2 bytes
  6556 ;; Hardware stack levels used:    1
  6557 ;; This function calls:
  6558 ;;		Nothing
  6559 ;; This function is called by:
  6560 ;;		_sprintf
  6561 ;; This function uses a non-reentrant model
  6562 ;;
  6563                           psect	text475
  6564                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\isdigit.c"
  6565                           	global	__size_of_isdigit
  6566  0015                     	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
  6567                           	
  6568  0AA9                     _isdigit:	
  6569                           	opt	stack 6
  6570                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6571                           ;isdigit@c stored from wreg
  6572  0AA9  00F1               	movwf	(isdigit@c)
  6573                           	line	14
  6574                           	
  6575  0AAA                     l3102:	
  6576  0AAA  01F0               	clrf	(_isdigit$1367)
  6577                           	
  6578  0AAB                     l3104:	
  6579  0AAB  303A               	movlw	(03Ah)
  6580  0AAC  0271               	subwf	(isdigit@c),w
  6581  0AAD  1803               	skipnc
  6582  0AAE  2AB0               	goto	u2671
  6583  0AAF  2AB1               	goto	u2670
  6584  0AB0                     u2671:
  6585  0AB0  2ABB               	goto	l3110
  6586  0AB1                     u2670:
  6587                           	
  6588  0AB1                     l3106:	
  6589  0AB1  3030               	movlw	(030h)
  6590  0AB2  0271               	subwf	(isdigit@c),w
  6591  0AB3  1C03               	skipc
  6592  0AB4  2AB6               	goto	u2681
  6593  0AB5  2AB7               	goto	u2680
  6594  0AB6                     u2681:
  6595  0AB6  2ABB               	goto	l3110
  6596  0AB7                     u2680:
  6597                           	
  6598  0AB7                     l3108:	
  6599  0AB7  01F0               	clrf	(_isdigit$1367)
  6600  0AB8  1403               	bsf	status,0
  6601  0AB9  0DF0               	rlf	(_isdigit$1367),f
  6602  0ABA  2ABB               	goto	l3110
  6603                           	
  6604  0ABB                     l882:	
  6605                           	
  6606  0ABB                     l3110:	
  6607  0ABB  0C70               	rrf	(_isdigit$1367),w
  6608                           	
  6609  0ABC  2ABD               	goto	l883
  6610                           	
  6611  0ABD                     l3112:	
  6612                           	line	15
  6613                           	
  6614  0ABD                     l883:	
  6615  0ABD  0008               	return
  6616                           	opt stack 0
  6617                           GLOBAL	__end_of_isdigit
  6618  0ABE                     	__end_of_isdigit:
  6619 ;; =============== function _isdigit ends ============
  6620                           
  6621                           	signat	_isdigit,4216
  6622                           	global	_delay
  6623                           psect	text476,local,class=CODE,delta=2
  6624                           global __ptext476
  6625  0AE8                     __ptext476:
  6626                           
  6627 ;; *************** function _delay *****************
  6628 ;; Defined at:
  6629 ;;		line 467 in file "C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;  i               2    0[COMMON] unsigned short 
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;		None
  6634 ;; Return value:  Size  Location     Type
  6635 ;;		None               void
  6636 ;; Registers used:
  6637 ;;		wreg, status,2, status,0
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6643 ;;      Params:         2       0       0       0       0
  6644 ;;      Locals:         0       0       0       0       0
  6645 ;;      Temps:          0       0       0       0       0
  6646 ;;      Totals:         2       0       0       0       0
  6647 ;;Total ram usage:        2 bytes
  6648 ;; Hardware stack levels used:    1
  6649 ;; This function calls:
  6650 ;;		Nothing
  6651 ;; This function is called by:
  6652 ;;		_send_config
  6653 ;;		_e_pulse
  6654 ;;		_send_char
  6655 ;;		_putch
  6656 ;;		_lcd_clr
  6657 ;;		_increment
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           psect	text476
  6661                           	file	"C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  6662                           	line	467
  6663                           	global	__size_of_delay
  6664  0016                     	__size_of_delay	equ	__end_of_delay-_delay
  6665                           	
  6666  0AE8                     _delay:	
  6667                           	opt	stack 5
  6668                           ; Regs used in _delay: [wreg+status,2+status,0]
  6669                           	line	469
  6670                           	
  6671  0AE8                     l3062:	
  6672                           ;MPLAB3.c: 469: for(;i>0;i--);
  6673  0AE8  0871               	movf	((delay@i+1)),w
  6674  0AE9  0470               	iorwf	((delay@i)),w
  6675  0AEA  1D03               	skipz
  6676  0AEB  2AED               	goto	u2601
  6677  0AEC  2AEE               	goto	u2600
  6678  0AED                     u2601:
  6679  0AED  2AF0               	goto	l3066
  6680  0AEE                     u2600:
  6681  0AEE  2AFD               	goto	l800
  6682                           	
  6683  0AEF                     l3064:	
  6684  0AEF  2AFD               	goto	l800
  6685                           	
  6686  0AF0                     l798:	
  6687                           	
  6688  0AF0                     l3066:	
  6689  0AF0  3001               	movlw	low(01h)
  6690  0AF1  02F0               	subwf	(delay@i),f
  6691  0AF2  3000               	movlw	high(01h)
  6692  0AF3  1C03               	skipc
  6693  0AF4  03F1               	decf	(delay@i+1),f
  6694  0AF5  02F1               	subwf	(delay@i+1),f
  6695                           	
  6696  0AF6                     l3068:	
  6697  0AF6  0871               	movf	((delay@i+1)),w
  6698  0AF7  0470               	iorwf	((delay@i)),w
  6699  0AF8  1D03               	skipz
  6700  0AF9  2AFB               	goto	u2611
  6701  0AFA  2AFC               	goto	u2610
  6702  0AFB                     u2611:
  6703  0AFB  2AF0               	goto	l3066
  6704  0AFC                     u2610:
  6705  0AFC  2AFD               	goto	l800
  6706                           	
  6707  0AFD                     l799:	
  6708                           	line	471
  6709                           	
  6710  0AFD                     l800:	
  6711  0AFD  0008               	return
  6712                           	opt stack 0
  6713                           GLOBAL	__end_of_delay
  6714  0AFE                     	__end_of_delay:
  6715 ;; =============== function _delay ends ============
  6716                           
  6717                           	signat	_delay,4216
  6718                           	global	_read_temp
  6719                           psect	text477,local,class=CODE,delta=2
  6720                           global __ptext477
  6721  0A99                     __ptext477:
  6722                           
  6723 ;; *************** function _read_temp *****************
  6724 ;; Defined at:
  6725 ;;		line 455 in file "C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;		None
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;  temp            2    2[COMMON] unsigned short 
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  2    0[COMMON] unsigned short 
  6732 ;; Registers used:
  6733 ;;		wreg, status,2, status,0
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6739 ;;      Params:         2       0       0       0       0
  6740 ;;      Locals:         2       0       0       0       0
  6741 ;;      Temps:          0       0       0       0       0
  6742 ;;      Totals:         4       0       0       0       0
  6743 ;;Total ram usage:        4 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; This function calls:
  6746 ;;		Nothing
  6747 ;; This function is called by:
  6748 ;;		_main
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           psect	text477
  6752                           	file	"C:\Users\Navid\Desktop\FYP\7- UART VISUAL BASIC\MPLAB3.c"
  6753                           	line	455
  6754                           	global	__size_of_read_temp
  6755  0010                     	__size_of_read_temp	equ	__end_of_read_temp-_read_temp
  6756                           	
  6757  0A99                     _read_temp:	
  6758                           	opt	stack 7
  6759                           ; Regs used in _read_temp: [wreg+status,2+status,0]
  6760                           	line	458
  6761                           	
  6762  0A99                     l3058:	
  6763                           ;MPLAB3.c: 457: unsigned short temp;
  6764                           ;MPLAB3.c: 458: temp=result;
  6765  0A99  1283               	bcf	status, 5	;RP0=0, select bank0
  6766  0A9A  1303               	bcf	status, 6	;RP1=0, select bank0
  6767  0A9B  0854               	movf	(_result+1),w
  6768  0A9C  01F3               	clrf	(read_temp@temp+1)
  6769  0A9D  07F3               	addwf	(read_temp@temp+1)
  6770  0A9E  0853               	movf	(_result),w
  6771  0A9F  01F2               	clrf	(read_temp@temp)
  6772  0AA0  07F2               	addwf	(read_temp@temp)
  6773                           
  6774                           	line	459
  6775                           ;MPLAB3.c: 459: return temp;
  6776  0AA1  0873               	movf	(read_temp@temp+1),w
  6777  0AA2  01F1               	clrf	(?_read_temp+1)
  6778  0AA3  07F1               	addwf	(?_read_temp+1)
  6779  0AA4  0872               	movf	(read_temp@temp),w
  6780  0AA5  01F0               	clrf	(?_read_temp)
  6781  0AA6  07F0               	addwf	(?_read_temp)
  6782                           
  6783  0AA7  2AA8               	goto	l795
  6784                           	
  6785  0AA8                     l3060:	
  6786                           	line	461
  6787                           	
  6788  0AA8                     l795:	
  6789  0AA8  0008               	return
  6790                           	opt stack 0
  6791                           GLOBAL	__end_of_read_temp
  6792  0AA9                     	__end_of_read_temp:
  6793 ;; =============== function _read_temp ends ============
  6794                           
  6795                           	signat	_read_temp,90
  6796                           psect	text478,local,class=CODE,delta=2
  6797                           global __ptext478
  6798  0000                     __ptext478:
  6799                           	global	btemp
  6800  007E                     	btemp set 07Eh
  6801                           
  6802                           	DABS	1,126,2	;btemp
  6803                           	global	wtemp0
  6804  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Thu Oct 20 15:21:57 2011

                      _c 0050                        _e 0046                        _i 0052  
                      pc 0002                       fsr 0004      ___wmul@multiplicand 0072  
                    l800 0AFD                      l810 001C                      l811 001C  
                    l900 0BF8                      l740 07FD                      l901 0C09  
                    l741 07FD                      l733 0464                      l902 0C0A  
                    l910 0BB2                      l830 01CB                      l814 0B01  
                    l750 0B45                      l734 051F                      l903 0C23  
                    l911 0BC3                      l831 01CF                      l815 0B00  
                    l735 05FA                      l904 0C31                      l912 0BC4  
                    l840 02AE                      l832 01D7                      l816 0B08  
                    l744 0AD2                      l808 0013                      l736 05FC  
                    l905 0C39                      l913 0BD5                      l841 023C  
                    l833 01D0                      l817 0B13                      l809 0005  
                    l753 0B70                      l737 07FA                      l914 0BE3  
                    l842 041C                      l850 0256                      l834 01E3  
                    l754 0B7D                      l770 0FFF                      l738 07FB  
                    l915 0BEB                      l851 0273                      l843 023D  
                    l835 01E2                      l747 0B2C                      l755 0B7D  
                    l771 0F91                      l739 07FC                      l908 0BE4  
                    l828 0408                      l860 030C                      l852 0286  
                    l844 023E                      l836 01E4                      l772 0FFE  
                    l909 0BBE                      l861 0329                      l845 02C8  
                    l853 0274                      l837 023B                      l829 01B9  
                    l773 0FBA                      l790 0D97                      l870 03A6  
                    l862 034A                      l854 0297                      l846 023F  
                    l838 01F9                      l774 0FFD                      l791 0D9C  
                    l871 038D                      l863 034F                      l855 0298  
                    l847 0252                      l839 023A                      l775 0FDA  
                    l792 0E01                      l872 03A5                      l864 0386  
                    l856 02A4                      l848 0255                      l776 0FFC  
                    l873 03B8                      l865 0365                      l857 02E4  
                    l849 0262                      l777 0FF1                      l769 0F5F  
                    l882 0ABB                      l874 03FC                      l866 0385  
                    l858 02EF                      l778 0FFB                      l795 0AA8  
                    l883 0ABD                      l787 0D95                      l875 03BE  
                    l867 036C                      l859 0317                      l779 0FFF  
                    l892 0B81                      l788 0DE4                      l876 0407  
                    l868 0384                      l893 0B8B                      l789 0D97  
                    l877 041B                      l869 03B9                      l798 0AF0  
                    l894 0BA0                      l878 0423                      l990 00DE  
                    l799 0AFD                      l895 0BA7                      l991 01B0  
                    l992 00F7                      l993 0137                      l898 0C32  
                    l994 014C                      l899 0C04                      l995 0163  
                    l996 0168                      l997 017D                      l998 0194  
                    _RB0 0030                      _RB4 0034                      _RB5 0035  
                    _MPP 0042                      _RX9 00C6                      _TX9 04C6  
                    fsr0 0004                      indf 0000          send_config@data 0072  
                   l1001 003A                     l1010 0096                     l1002 00C2  
                   l1011 00A8                     l1003 0085                     l1012 00B9  
                   l1004 0071                     l1005 0072                     l1006 0084  
                   l1007 00A9                     l1008 0095                     l1009 00A2  
                   l1050 0C7B                     l1051 0C8B                     l1115 0B60  
                   l1052 0C95                     l1045 0C8C                     l1230 0D2D  
                   l1046 0C54                     l1070 0CF9                     l1231 0D44  
                   l1047 0C46                     l1071 0D03                     l1232 0D2E  
                   l1224 0D18                     l1048 0C59                     l1064 0CFA  
                   l1233 0D4B                     l1049 0C5A                     l1065 0CB8  
                   l1234 0D57                     l1226 0D10                     l1066 0CAA  
                   l1235 0D4C                     l1227 0D7E                     l1067 0CBD  
                   l1236 0D5B                     l1228 0D26                     l1068 0CBE  
                   l1237 0D65                     l1229 0D19                     l1069 0CE9  
                   l3110 0ABB                     l3102 0AAA                     l1238 0D7E  
                   l3112 0ABD                     l3104 0AAB                     l3120 0B92  
                   l3106 0AB1                     l3122 0BA0                     l3114 0B7E  
                   l3130 0BF4                     l3060 0AA8                     l3108 0AB7  
                   l3124 0BA7                     l3116 0B81                     l3140 0C1B  
                   l3132 0BF8                     l3062 0AE8                     l3118 0B85  
                   l3150 0C39                     l3142 0C21                     l3134 0BFF  
                   l3126 0BEC                     l3064 0AEF                     l3144 0C23  
                   l3136 0C04                     l3128 0BEE                     l3160 0BBE  
                   l3152 0BA8                     l3320 0030                     l3400 0C95  
                   l3058 0A99                     l3066 0AF0                     l3146 0C2A  
                   l3138 0C0A                     l3162 0BC4                     l3154 0BAE  
                   l3170 0BE4                     l3250 0D17                     l3330 0053  
                   l3322 0039                     l3410 0CBE                     l3402 0C96  
                   l3068 0AF6                     l3148 0C32                     l3172 0BEB  
                   l3164 0BCE                     l3156 0BB2                     l3260 0D3C  
                   l3252 0D19                     l3244 0D04                     l3340 0070  
                   l3332 005A                     l3324 003A                     l3420 0CF2  
                   l3412 0CC7                     l3404 0CA6                     l3500 01F4  
                   l3166 0BD5                     l3158 0BB9                     l3270 0D79  
                   l3262 0D4C                     l3254 0D26                     l3246 0D08  
                   l3350 0096                     l3342 0072                     l3334 005C  
                   l3326 004C                     l3318 001D                     l3414 0CD9  
                   l3406 0CAA                     l3422 0CFA                     l3510 024B  
                   l3502 01F9                     l3168 0BDC                     l3272 0D7D  
                   l3264 0D57                     l3256 0D2E                     l3248 0D10  
                   l3360 00C2                     l3352 00A2                     l3336 0060  
                   l3344 0085                     l3328 004D                     l3424 0D03  
                   l3416 0CE7                     l3408 0CB8                     l3600 03AC  
                   l3520 0274                     l3512 0252                     l3504 0225  
                   l3266 0D5F                     l3258 0D32                     l3346 008B  
                   l3354 00A9                     l3338 0067                     l3418 0CE9  
                   l3610 03F7                     l3602 03B3                     l3530 029F  
                   l3522 027D                     l3514 0256                     l3506 0229  
                   l3268 0D67                     l3356 00AD                     l3348 0094  
                   l3612 03FC                     l3604 03B9                     l3532 02A4  
                   l3524 0281                     l3516 025D                     l3508 023F  
                   l3540 02C8                     l3620 0B14                     l3700 0B40  
                   l3358 00B9                     l3390 0C5A                     l3382 0C3A  
                   l3470 0D8D                     l3606 03BE                     l3550 02E4  
                   l3542 02D2                     l3534 02A8                     l3526 0286  
                   l3518 0262                     l3614 0408                     l3622 0B17  
                   l3630 0B0A                     l3702 0004                     l3710 0B62  
                   l3392 0C6C                     l3384 0C42                     l3472 0D94  
                   l3608 03F0                     l3560 030C                     l3552 02E7  
                   l3544 02D6                     l3536 02AD                     l3528 0298  
                   l3616 041C                     l3480 01B4                     l3624 0B20  
                   l3640 00EF                     l3632 00C3                     l3704 0005  
                   l3712 0B68                     l3720 0F26                     l3800 04A6  
                   l3394 0C7B                     l3386 0C46                     l3474 0D9C  
                   l3618 0423                     l3570 033C                     l3562 0310  
                   l3554 02EE                     l3546 02DA                     l3538 02AE  
                   l3490 01CD                     l3482 01B9                     l3626 0AFF  
                   l3650 0126                     l3642 00F6                     l3634 00D6  
                   l3706 000E                     l3714 0B70                     l3730 0F97  
                   l3722 0F2A                     l3810 04C4                     l3802 04AC  
                   l3396 0C84                     l3388 0C54                     l3476 0DDD  
                   l3468 0D7F                     l3580 0360                     l3572 034A  
                   l3564 0317                     l3556 02EF                     l3548 02DE  
                   l3492 01D1                     l3484 01BF                     l3628 0B08  
                   l3660 014C                     l3652 012C                     l3644 00F7  
                   l3636 00DD                     l3708 0013                     l3716 0B75  
                   l3740 0FF1                     l3732 0FBA                     l3724 0F5F  
                   l3900 069F                     l3820 04E2                     l3812 04CA  
                   l3804 04B2                     l3398 0C8C                     l3478 0DE4  
                   l3582 0365                     l3590 0386                     l3574 034F  
                   l3566 031D                     l3558 030B                     l3494 01D6  
                   l3486 01C6                     l3670 016C                     l3662 0154  
                   l3654 0132                     l3646 0124                     l3638 00DE  
                   l3734 0FC0                     l3726 0F65                     l3718 0E02  
                   l3910 06EA                     l3902 06A5                     l3830 0500  
                   l3822 04E8                     l3814 04D0                     l3806 04B8  
                   l3750 043C                     l3742 0424                     l3592 038D  
                   l3584 036C                     l3576 0353                     l3568 0323  
                   l3496 01D7                     l3488 01CB                     l3680 01B0  
                   l3672 017D                     l3664 015C                     l3656 0137  
                   l3648 0125                     l3736 0FDA                     l3728 0F91  
                   l3920 0720                     l3912 06F0                     l3904 06AA  
                   l3840 051F                     l3832 0506                     l3824 04EE  
                   l3816 04D6                     l3808 04BE                     l3760 0457  
                   l3752 0442                     l3744 042A                     l3594 0394  
                   l3586 0373                     l3578 0359                     l3498 01E4  
                   l3674 0185                     l3666 0163                     l3658 013B  
                   l3682 0B46                     l3690 0AC4                     l3738 0FE0  
                   l3930 073E                     l3922 0726                     l3914 070E  
                   l3906 06B7                     l3850 0557                     l3842 0523  
                   l3834 050C                     l3826 04F4                     l3818 04DC  
                   l3770 045D                     l3762 0458                     l3754 0448  
                   l3746 042C                     l3596 0398                     l3588 0377  
                   l3676 018D                     l3668 0168                     l3684 0B60  
                   l3692 0ACD                     l3940 07B2                     l3932 0759  
                   l3924 072C                     l3916 0714                     l3908 06CE  
                   l3860 058A                     l3852 055D                     l3844 0529  
                   l3836 0512                     l3828 04FA                     l3780 046A  
                   l3772 045E                     l3764 045A                     l3756 044E  
                   l3748 0436                     l3598 03A6                     l3678 0194  
                   l3686 0ABF                     l3694 0B2E                     l3942 07C9  
                   l3934 0775                     l3926 0732                     l3918 071A  
                   l3870 05E1                     l3862 0597                     l3854 057B  
                   l3846 052E                     l3838 0518                     l3790 0488  
                   l3782 0470                     l3774 0461                     l3766 045B  
                   l3758 0454                     l3688 0AC2                     l3696 0B31  
                   l3944 07F3                     l3936 077B                     l3928 0738  
                   l3880 05FE                     l3872 05E7                     l3864 05CA  
                   l3856 057F                     l3848 053B                     l3792 048E  
                   l3784 0476                     l3776 0462                     l3768 045C  
                   l3698 0B37                     l3938 0799                     l3890 0665  
                   l3882 0604                     l3874 05ED                     l3866 05D5  
                   l3858 0585                     l3794 0494                     l3786 047C  
                   l3778 0464                     l3892 066B                     l3884 0609  
                   l3876 05F8                     l3868 05DB                     l3796 049A  
                   l3788 0482                     l3894 0689                     l3886 0616  
                   l3878 05FC                     l3798 04A0                     l3896 068F  
                   l3888 0649                     l3898 0695                     _ADGO 00FA  
                   STR_1 0810                     _BRGH 04C2                     _CREN 00C4  
                   u3100 0D08                     u3110 0D0F                     u3111 0D0E  
                   u3200 0D7D                     u4000 0193                     u4001 0192  
                   u3130 0D2C                     u4010 001B                     u3131 0D2B  
                   u4011 001A                     u3300 0045                     u4020 0B68  
                   u3125 0D1E                     u4021 0B67                     u3150 0D4A  
                   u3310 0060                     u4030 0F2A                     u3151 0D49  
                   u3311 005F                     u2600 0AEE                     u3320 0067  
                   u4040 0F65                     u2601 0AED                     u3145 0D3D  
                   u3321 0066                     u3305 0041                     u2610 0AFC  
                   u3170 0D5B                     u3410 0C42                     u4050 0F97  
                   u2611 0AFB                     u3171 0D5A                     u3411 0C41  
                   u3180 0D5F                     u3340 0083                     u4060 0FC0  
                   u3181 0D5E                     u3165 0D4F                     u3341 0082  
                   u3190 0D70                     u3350 008B                     u3430 0C58  
                   u3510 0CD9                     u4070 0FE0                     u3351 008A  
                   u3335 0073                     u3431 0C57                     u3511 0CD8  
                   u2720 0B9F                     u2800 0BAE                     u3440 0C6C  
                   u3600 0D93                     u4080 05F8                     u2721 0B9E  
                   u2705 0B8C                     u2801 0BAD                     u3441 0C6B  
                   u3425 0C48                     u3505 0CC0                     u3601 0D92  
                   u4081 05F7                     u2730 0BF4                     u3370 00A7  
                   u3290 0030                     u3530 0CF8                     u3610 0D9B  
                   u2715 0B93                     u2731 0BF3                     u3195 0D6C  
                   u3371 00A6                     u3291 002F                     u3531 0CF7  
                   u3515 0CD5                     u3611 0D9A                     u2820 0BC2  
                   u3380 00AD                     u3460 0C8A                     u3700 02DA  
                   u2821 0BC1                     u3365 0098                     u3461 0C89  
                   u3445 0C68                     u3525 0CEA                     u3621 0DC9  
                   u3701 02D9                     u2670 0AB1                     u2750 0C08  
                   u2830 0BCE                     u3470 0CA6                     u3630 0DE3  
                   u3622 0DD0                     u3710 02ED                     u2671 0AB0  
                   u2751 0C07                     u2831 0BCD                     u2815 0BB3  
                   u3455 0C7C                     u3471 0CA5                     u3631 0DE2  
                   u3623 0DD7                     u3711 02EC                     u2680 0AB7  
                   u3800 0383                     u3720 030A                     u3640 01BF  
                   u2681 0AB6                     u2745 0BF9                     u3801 0382  
                   u3721 0309                     u3641 01BE                     u2690 0B85  
                   u2770 0C1B                     u2850 0BE2                     u3490 0CBC  
                   u3810 038C                     u3730 0316                     u3650 01F4  
                   u2691 0B84                     u2771 0C1A                     u2851 0BE1  
                   u2835 0BCA                     u3491 0CBB                     u3811 038B  
                   u3731 0315                     u3651 01F3                     u3820 03A4  
                   u3740 031D                     u3660 0239                     u3900 0119  
                   u2765 0C0B                     u2845 0BD6                     u3485 0CAC  
                   u3821 03A3                     u3741 031C                     u3725 0306  
                   u3661 0238                     u2790 0C30                     u3830 03AC  
                   u3750 0323                     u3670 024B                     u3910 013B  
                   u2791 0C2F                     u2775 0C17                     u3831 03AB  
                   u3751 0322                     u3671 024A                     u3911 013A  
                   u3840 0406                     u3760 033C                     u3680 0272  
                   u2785 0C24                     u3841 0405                     u3761 033B  
                   u3681 0271                     u3921 0144                     u3905 0115  
                   u3850 041A                     u3770 0353                     u3690 0296  
                   u3922 014B                     u3851 0419                     u3771 0352  
                   u3691 0295                     u3675 0247                     u3780 0359  
                   u3860 0B07                     u3781 0358                     u3765 0338  
                   u3685 026E                     u3861 0B06                     u3790 036B  
                   u3950 0162                     u3870 00D6                     u3791 036A  
                   u3695 0292                     u3951 0161                     u3935 014D  
                   u3871 00D5                     u3960 016C                     u3880 00EF  
                   u3961 016B                     u3945 0155                     u3881 00EE  
                   u3890 0107                     u3971 0175                     u3972 017C  
                   u3895 0103                     u3985 017E                     u3995 0186  
                   _SPEN 00C7                     _TXEN 04C5                     _TXIF 0064  
                   _SYNC 04C4                     _main 0424             ___ftpack@arg 0070  
           ___ftpack@exp 0073                     _temp 004A                     btemp 007E  
           lcd_goto@data 0074                     start 0000             ___ftmul@cntr 003B  
           ___ftmul@sign 003C             ___fttol@exp1 0029             ___fttol@lval 0025  
                  ?_main 0070          __end_of___lldiv 0D04          __end_of___ftmul 01B1  
        __end_of___llmod 0C96          __end_of___fttol 00C3          __end_of___lwdiv 0C3A  
        __end_of___lwmod 0BEC                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TXREG 0019          __end_of_e_pulse 0B2D  
        __end_of_dis_num 1000                    _delay 0AE8                    _light 0048  
                  _dummy 0051          __end_of_isdigit 0ABE            ___ftpack@sign 0074  
                  _mputs 0003                    _putch 0AFE      read_adc@result_temp 0024  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 0424             __end_of_main 0800                   ??_main 003D  
          ___fttol@sign1 0024                   ?_delay 0070             ?_send_config 0070  
                 _ADCON0 001F                   _ADCON1 009F         ___llmod@dividend 0074  
                 _ADRESH 001E                   _ADRESL 009E                   ?_mputs 0070  
                 ?_putch 0070         __end_of___ftpack 0D7F         __end_of___lwtoft 0B61  
                 _TRISC6 043E                   _TRISC7 043F         __end_of_lcd_goto 0B7E  
                 ___wmul 0B7E                ??___lldiv 0078                ??___ftmul 0033  
              ??___llmod 0078                ??___fttol 0020                ??___lwdiv 0074  
              ??___lwmod 007C         __end_of_read_adc 0E02                   delay@i 0070  
              ??_e_pulse 0072                   _result 0053                ??_dis_num 0024  
                 clrloop 0A92    ___ftmul@f3_as_product 0038                ??_isdigit 0070  
                 putch@c 0072                ??_sprintf 002D               ___ftmul@f1 002D  
             ___ftmul@f2 0030               ___fttol@f1 0078           __pcstackCOMMON 0070  
          __end_of_delay 0AFE            __end_of_mputs 001D            __end_of_putch 0B14  
             ___lwtoft@c 002A                  ??_delay 0072             sprintf@width 0034  
                ??_mputs 0073                  ??_putch 0072               __pbssBANK0 0042  
             __pbssBANK1 00A0       __size_of_read_temp 0010               __pmaintext 0424  
                ?___wmul 0070       __size_of_send_char 0019                ?___ftpack 0070  
              ?___lwtoft 002A                ?_lcd_goto 0070     __size_of_send_config 0015  
              ?_read_adc 0070                  ___lldiv 0C96          __size_of___wmul 002A  
                ___ftmul 00C3                  ___llmod 0C3A                  ___fttol 001D  
                ___lwdiv 0BEC                  ___lwmod 0BA8               ??___ftpack 0075  
                _e_pulse 0B14                  _dis_num 0E02               ??___lwtoft 007C  
                _dpowers 0806                  _current 0044                  _isdigit 0AA9  
      __end_of_read_temp 0AA9                  _sprintf 01B1               ??_lcd_goto 0073  
                _voltage 004E     end_of_initialization 0AE4        __end_of_send_char 0B46  
             ??_read_adc 0020          ___lldiv@divisor 0070          ___lldiv@counter 007D  
          send_char@data 0072              ___ftmul@exp 0037           __end_of___wmul 0BA8  
    start_initialization 0AD3          ___llmod@divisor 0070          ___llmod@counter 0079  
               ??___wmul 0074      dis_num@ten_thousand 0026        __size_of___ftpack 007B  
      __size_of___lwtoft 001B            __pcstackBANK0 0020             _isdigit$1367 0070  
dis_num@hundred_thousand 0025        __size_of_lcd_goto 001D              sprintf@_val 0037  
            sprintf@flag 0033              sprintf@prec 0031        __size_of_read_adc 0083  
              _main$1695 003E                _main$1696 0040         ___lwdiv@dividend 0072  
              __ptext460 0B2D                __ptext461 0ABE                __ptext470 001D  
              __ptext462 0B46                __ptext471 0D04                __ptext463 00C3  
              __ptext472 0BA8                __ptext464 0AFE                __ptext473 0BEC  
              __ptext465 0B14                __ptext457 0E02                __ptext474 0B7E  
              __ptext466 01B1                __ptext458 0B61                __ptext475 0AA9  
              __ptext467 0D7F                __ptext459 0003                __ptext476 0AE8  
              __ptext468 0C96                __ptext477 0A99                __ptext469 0C3A  
              __ptext478 0000                 ?___lldiv 0070                 ?___ftmul 002D  
               ?___llmod 0070                 ?___fttol 0078                 ?___lwdiv 0070  
               ?___lwmod 0078                 ?_e_pulse 0070                __pstrings 0800  
               ?_dis_num 0020                 ?_isdigit 0070            ??_send_config 0072  
       ___lwdiv@quotient 0075           __size_of_delay 0016                 ?_sprintf 0020  
              _read_temp 0A99           __size_of_mputs 001A           __size_of_putch 0016  
         ___wmul@product 0074                _send_char 0B2D            _serial_buffer 00A0  
            __stringbase 0805        ___wmul@multiplier 0070               ?_read_temp 0070  
    __end_of_send_config 0AD3               ?_send_char 0070                read_adc@i 0028  
       __size_of___lldiv 006E         __size_of___ftmul 00EE         __size_of___llmod 005C  
       __size_of___fttol 00A6         __size_of___lwdiv 004E         __size_of___lwmod 0044  
               ___ftpack 0D04                 ___lwtoft 0B46         __size_of_e_pulse 0019  
       __size_of_dis_num 01FE         __size_of_isdigit 0015          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077                 _lcd_goto 0B61         __size_of_sprintf 0273  
               _read_adc 0D7F            __size_of_main 03DC                 clear_ram 0A91  
               isdigit@c 0071              _send_config 0ABE              ??_read_temp 0072  
              sprintf@ap 0032                sprintf@sp 0036         ___lwmod@dividend 007A  
       ___lldiv@dividend 0074              ??_send_char 0072                stringcode 0800  
               mputs@str 0074              _temperature 004C                 sprintf@c 003A  
               sprintf@f 0020         ___lldiv@quotient 0079          ___lwmod@divisor 0078  
        ___lwmod@counter 007D                 stringdir 0800                 stringtab 0800  
          read_temp@temp 0072           dis_num@hundred 0028          dis_num@thousand 0027  
            dis_num@data 0020             dis_num@tenth 0029  
